var map = {
    title: "Transcendence",
    song: "env2",
    maker: "skilledandkilled",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([0, 0.82012, -637.91]);
        a.e([0, 0.82012, -637.91]);
        a.y([0, 0.00006, -245], [0, 0, 0], [10, 10, 10], 3.0, 0);
        a.p([0, 6.93018, -330], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-1.04, -0.00976, -145.53], [0.35, 0, 0], [4, 1, 20], 3.0, 0);
        a.p([0, 0.0003, -338.62], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([0, 0, -349.91], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([0, 0.00006, -359.28], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.c([-0.45, 0.98012, -614.86], false);
        a.c([-0.34, 0.98018, -627.48], false);
        a.c([-1.78, 0.85012, -145], true);
        a.c([-5.15, 0.8501799999999999, -150], true);
        a.c([-2.7, 0.85024, -145], true);
        a.c([-1.04, 0.8503000000000001, -145], true);
        a.c([-4.16, 0.85, -150], true);
        a.c([-2.46, 0.85006, -157.2], true);
        a.c([-3.1, 0.85012, -150], true);
        a.c([-1.53, 0.8501799999999999, -157], true);
        a.c([0.85, 0.85024, -157], true);
        a.c([-0.23, 0.4103, -213], true);
        a.c([-0.23, 0.41, -230], true);
        a.c([-0.23, 0.41006, -222], true);
        a.c([-3.3, 0.85012, -157], true);
        a.c([0.49, 0.8501799999999999, -145], true);
        a.c([-2.28, 0.85024, -150], true);
        a.c([-0.58, 0.8503000000000001, -150], true);
        a.c([-0.71, 0.85, -157], true);
        a.c([-0.12, 0.85006, -145], true);
        a.c([-1.51, 0.85012, -150], true);
        a.c([0.12, 0.8501799999999999, -157], true);
        a.c([-1.02, 0.98024, -590], true);
        a.p([0, 0.0003, -8], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0, -174.75], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0.00006, -297.81], [0, 0, 0.52], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00012, -307.21], [0, 0, 0.7], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00018, -130], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([0, 0.00024, -18], [0, -1.57, 0], [10, 1, 20], 1, 0);
        a.p([-0.25, 0.0003, -193.8], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0, -222.74], [0, 0, -0.35], [1, 1, 40], 3.0, 0);
        a.p([0, 0.00006, -368.76], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-1.04, 0.00012, -157.52], [-0.35, 0, 0], [4, 1, 20], 3.0, 0);
        a.p([0, 0.00018, -184.2], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-0.25, 0.00024, -315.62], [0, 0, 0.87], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.0003, -257.63], [0, 0, -0.35], [4, 1, 20], 1, 0);
        a.p([-0.25, 0, -270.33], [0, 0, 0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00006, -278.99], [0, 0, -0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00012, -287.06], [0, 0, 0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00018, -325.61], [0, 0, 0], [4, 1, 10], 1, 0);
        a.p([1.29, 0.00024, -334.15], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.0003, -344.3], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0, -354.3], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.00006, -363.5], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.00012, -372.78], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([0, -0.01982, -387.26], [0, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -429.85], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -429.85], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0, -414.19], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00994, -414.19], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00012, -445.28], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -445.28], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -461.74], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -461.74], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.01, -476.37], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00006, -476.37], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00012, -492.91], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -492.91], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -508.48], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -508.48], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0, -583.21], [0, 0, 0], [2, 1, 120], 1, 0);
        a.p([0, -0.00994, -524.01], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.01988, -524.81], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -400.09], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00024, -400.09], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.c([0.49, 0.9803, -548.72], false);
        a.c([-0.43, 0.98, -541.31], false);
        a.c([0.49, 0.9800599999999999, -562.71], false);
        a.c([-0.29, 0.98012, -574.53], false);
        a.c([-0.22, 0.98018, -590], true);
        a.c([-0.03, 0.98024, -600], true);
        a.c([-0.87, 0.9803, -600], true);
        a.c([0.58, 0.98, -600], true);
        a.c([0.57, 0.9800599999999999, -590], true);
        a.y([0, 0.00006, -245], [0, 0, 0], [10, 10, 10], 3.0, 0);
        a.p([0, 6.93018, -330], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-1.04, -0.00976, -145.53], [0.35, 0, 0], [4, 1, 20], 3.0, 0);
        a.p([0, 0.0003, -338.62], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([0, 0, -349.91], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([0, 0.00006, -359.28], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.c([-0.45, 0.98012, -614.86], false);
        a.c([-0.34, 0.98018, -627.48], false);
        a.c([-1.78, 0.85012, -145], true);
        a.c([-5.15, 0.8501799999999999, -150], true);
        a.c([-2.7, 0.85024, -145], true);
        a.c([-1.04, 0.8503000000000001, -145], true);
        a.c([-4.16, 0.85, -150], true);
        a.c([-2.46, 0.85006, -157.2], true);
        a.c([-3.1, 0.85012, -150], true);
        a.c([-1.53, 0.8501799999999999, -157], true);
        a.c([0.85, 0.85024, -157], true);
        a.c([-0.23, 0.4103, -213], true);
        a.c([-0.23, 0.41, -230], true);
        a.c([-0.23, 0.41006, -222], true);
        a.c([-3.3, 0.85012, -157], true);
        a.c([0.49, 0.8501799999999999, -145], true);
        a.c([-2.28, 0.85024, -150], true);
        a.c([-0.58, 0.8503000000000001, -150], true);
        a.c([-0.71, 0.85, -157], true);
        a.c([-0.12, 0.85006, -145], true);
        a.c([-1.51, 0.85012, -150], true);
        a.c([0.12, 0.8501799999999999, -157], true);
        a.c([-1.02, 0.98024, -590], true);
        a.p([0, 0.0003, -8], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0, -174.75], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0.00006, -297.81], [0, 0, 0.52], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00012, -307.21], [0, 0, 0.7], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00018, -130], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([0, 0.00024, -18], [0, -1.57, 0], [10, 1, 20], 1, 0);
        a.p([-0.25, 0.0003, -193.8], [0, 0, 0], [0.6, 1, 20], 1, 0);
        a.p([-0.25, 0, -222.74], [0, 0, -0.35], [1, 1, 40], 3.0, 0);
        a.p([0, 0.00006, -368.76], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-1.04, 0.00012, -157.52], [-0.35, 0, 0], [4, 1, 20], 3.0, 0);
        a.p([0, 0.00018, -184.2], [0, -1.57, 0], [10, 1, 20], 3.0, 0);
        a.p([-0.25, 0.00024, -315.62], [0, 0, 0.87], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.0003, -257.63], [0, 0, -0.35], [4, 1, 20], 1, 0);
        a.p([-0.25, 0, -270.33], [0, 0, 0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00006, -278.99], [0, 0, -0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00012, -287.06], [0, 0, 0.35], [4, 1, 10], 1, 0);
        a.p([-0.25, 0.00018, -325.61], [0, 0, 0], [4, 1, 10], 1, 0);
        a.p([1.29, 0.00024, -334.15], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.0003, -344.3], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0, -354.3], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.00006, -363.5], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([2.78, 0.00012, -372.78], [-0.35, 0, 0], [4, 1, 10], 1, 0);
        a.p([0, -0.01982, -387.26], [0, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -429.85], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -429.85], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0, -414.19], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00994, -414.19], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00012, -445.28], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -445.28], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -461.74], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -461.74], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.01, -476.37], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00006, -476.37], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00012, -492.91], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -492.91], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00976, -508.48], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.0003, -508.48], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0, -583.21], [0, 0, 0], [2, 1, 120], 1, 0);
        a.p([0, -0.00994, -524.01], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.01988, -524.81], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, -0.00982, -400.09], [-0.79, 0, 0], [4, 1, 20], 1, 0);
        a.p([0, 0.00024, -400.09], [0.79, 0, 0], [4, 1, 20], 1, 0);
        a.c([0.49, 0.9803, -548.72], false);
        a.c([-0.43, 0.98, -541.31], false);
        a.c([0.49, 0.9800599999999999, -562.71], false);
        a.c([-0.29, 0.98012, -574.53], false);
        a.c([-0.22, 0.98018, -590], true);
        a.c([-0.03, 0.98024, -600], true);
        a.c([-0.87, 0.9803, -600], true);
        a.c([0.58, 0.98, -600], true);
        a.c([0.57, 0.9800599999999999, -590], true);
    },
    post: function() {
        a.m('P0').unfreezeWorldMatrix();
        a.m('P47').unfreezeWorldMatrix();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -17) {
                    speed = default_speed * 200.0;
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -19) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -17) {
                    speed = default_speed * 200.0;
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -19) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -144) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -146) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -144) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -146) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -149) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -151) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -149) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -151) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -156) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -158) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -156) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -158) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -183.2) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 17:
                if (PZ < -185.2) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -183.2) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -185.2) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 20:
                if (PZ < -212) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 21:
                if (PZ < -214) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 22:
                if (PZ < -212) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 23:
                if (PZ < -214) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 24:
                if (PZ < -221) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 25:
                if (PZ < -223) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 26:
                if (PZ < -221) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 27:
                if (PZ < -223) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 28:
                if (PZ < -229) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 29:
                if (PZ < -231) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 30:
                if (PZ < -229) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 31:
                if (PZ < -231) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 32:
                if (PZ < -239.95) {
                    speed = default_speed * 50.0;
                    this.section_id += 1
                }
                break;
            case 33:
                if (PZ < -241.95) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 34:
                if (PZ < -239.95) {
                    speed = default_speed * 50.0;
                    this.section_id += 1
                }
                break;
            case 35:
                if (PZ < -241.95) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 36:
                if (PZ < -329) {
                    this.section_id += 1
                }
                break;
            case 37:
                a.mov('P0', 'y', 0.1);
                a.mov('P47', 'y', 0.1);
                if (PZ < -331) {
                    this.section_id += 1
                }
                break;
            case 38:
                if (PZ < -329) {
                    this.section_id += 1
                }
                break;
            case 39:
                a.mov('P0', 'y', 0.1);
                a.mov('P47', 'y', 0.1);
                if (PZ < -331) {
                    this.section_id += 1
                }
                break;
            case 40:
                if (PZ < -337.62) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 41:
                if (PZ < -339.62) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 42:
                if (PZ < -337.62) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 43:
                if (PZ < -339.62) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 44:
                if (PZ < -348.91) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 45:
                if (PZ < -350.91) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 46:
                if (PZ < -348.91) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 47:
                if (PZ < -350.91) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 48:
                if (PZ < -358.28) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 49:
                if (PZ < -360.28) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 50:
                if (PZ < -358.28) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 51:
                if (PZ < -360.28) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 52:
                if (PZ < -367.76) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 53:
                if (PZ < -369.76) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 54:
                if (PZ < -367.76) {
                    speed = default_speed * 5.0;
                    this.section_id += 1
                }
                break;
            case 55:
                if (PZ < -369.76) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 56:
                if (PZ < -378.76) {
                    steer = default_steer * 2.0;
                    this.section_id += 1
                }
                break;
            case 57:
                if (PZ < -569.78) {
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 58:
                if (PZ < -378.76) {
                    steer = default_steer * 2.0;
                    this.section_id += 1
                }
                break;
            case 59:
                if (PZ < -569.78) {
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 60:
                if (PZ < -589) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 61:
                if (PZ < -591) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 62:
                if (PZ < -589) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 63:
                if (PZ < -591) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 64:
                if (PZ < -599) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 65:
                if (PZ < -601) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 66:
                if (PZ < -599) {
                    speed = default_speed * 7.0;
                    this.section_id += 1
                }
                break;
            case 67:
                if (PZ < -601) {
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('Y0', [0, 0.00006, -245], [0, 0, 0], [10, 10, 10]);
        a.re('P0', [0, 6.93018, -330], [0, -1.57, 0], [10, 1, 20]);
        a.re('P1', [-1.04, -0.00976, -145.53], [0.35, 0, 0], [4, 1, 20]);
        a.re('P2', [0, 0.0003, -338.62], [0, -1.57, 0], [10, 1, 20]);
        a.re('P3', [0, 0, -349.91], [0, -1.57, 0], [10, 1, 20]);
        a.re('P4', [0, 0.00006, -359.28], [0, -1.57, 0], [10, 1, 20]);
        a.re('C0', [-0.45, 0.98012, -614.86], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-0.34, 0.98018, -627.48], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-1.78, 0.85012, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-5.15, 0.8501799999999999, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-2.7, 0.85024, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-1.04, 0.8503000000000001, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [-4.16, 0.85, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-2.46, 0.85006, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [-3.1, 0.85012, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [-1.53, 0.8501799999999999, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [0.85, 0.85024, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [-0.23, 0.4103, -213], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [-0.23, 0.41, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [-0.23, 0.41006, -222], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [-3.3, 0.85012, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [0.49, 0.8501799999999999, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [-2.28, 0.85024, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [-0.58, 0.8503000000000001, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C18', [-0.71, 0.85, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [-0.12, 0.85006, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [-1.51, 0.85012, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [0.12, 0.8501799999999999, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [-1.02, 0.98024, -590], [0, 0, 0], [2, 2, 2]);
        a.re('P5', [0, 0.0003, -8], [0, 0, 0], [0.6, 1, 20]);
        a.re('P6', [-0.25, 0, -174.75], [0, 0, 0], [0.6, 1, 20]);
        a.re('P7', [-0.25, 0.00006, -297.81], [0, 0, 0.52], [4, 1, 10]);
        a.re('P8', [-0.25, 0.00012, -307.21], [0, 0, 0.7], [4, 1, 10]);
        a.re('P9', [-0.25, 0.00018, -130], [0, 0, 0], [0.6, 1, 20]);
        a.re('P10', [0, 0.00024, -18], [0, -1.57, 0], [10, 1, 20]);
        a.re('P11', [-0.25, 0.0003, -193.8], [0, 0, 0], [0.6, 1, 20]);
        a.re('P12', [-0.25, 0, -222.74], [0, 0, -0.35], [1, 1, 40]);
        a.re('P13', [0, 0.00006, -368.76], [0, -1.57, 0], [10, 1, 20]);
        a.re('P14', [-1.04, 0.00012, -157.52], [-0.35, 0, 0], [4, 1, 20]);
        a.re('P15', [0, 0.00018, -184.2], [0, -1.57, 0], [10, 1, 20]);
        a.re('P16', [-0.25, 0.00024, -315.62], [0, 0, 0.87], [4, 1, 10]);
        a.re('P17', [-0.25, 0.0003, -257.63], [0, 0, -0.35], [4, 1, 20]);
        a.re('P18', [-0.25, 0, -270.33], [0, 0, 0.35], [4, 1, 10]);
        a.re('P19', [-0.25, 0.00006, -278.99], [0, 0, -0.35], [4, 1, 10]);
        a.re('P20', [-0.25, 0.00012, -287.06], [0, 0, 0.35], [4, 1, 10]);
        a.re('P21', [-0.25, 0.00018, -325.61], [0, 0, 0], [4, 1, 10]);
        a.re('P22', [1.29, 0.00024, -334.15], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P23', [2.78, 0.0003, -344.3], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P24', [2.78, 0, -354.3], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P25', [2.78, 0.00006, -363.5], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P26', [2.78, 0.00012, -372.78], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P27', [0, -0.01982, -387.26], [0, 0, 0], [4, 1, 20]);
        a.re('P28', [0, -0.00976, -429.85], [0.79, 0, 0], [4, 1, 20]);
        a.re('P29', [0, 0.0003, -429.85], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P30', [0, 0, -414.19], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P31', [0, -0.00994, -414.19], [0.79, 0, 0], [4, 1, 20]);
        a.re('P32', [0, 0.00012, -445.28], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P33', [0, -0.00982, -445.28], [0.79, 0, 0], [4, 1, 20]);
        a.re('P34', [0, -0.00976, -461.74], [0.79, 0, 0], [4, 1, 20]);
        a.re('P35', [0, 0.0003, -461.74], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P36', [0, -0.01, -476.37], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P37', [0, 0.00006, -476.37], [0.79, 0, 0], [4, 1, 20]);
        a.re('P38', [0, 0.00012, -492.91], [0.79, 0, 0], [4, 1, 20]);
        a.re('P39', [0, -0.00982, -492.91], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P40', [0, -0.00976, -508.48], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P41', [0, 0.0003, -508.48], [0.79, 0, 0], [4, 1, 20]);
        a.re('P42', [0, 0, -583.21], [0, 0, 0], [2, 1, 120]);
        a.re('P43', [0, -0.00994, -524.01], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P44', [0, -0.01988, -524.81], [0.79, 0, 0], [4, 1, 20]);
        a.re('P45', [0, -0.00982, -400.09], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P46', [0, 0.00024, -400.09], [0.79, 0, 0], [4, 1, 20]);
        a.re('C23', [0.49, 0.9803, -548.72], [0, 0, 0], [2, 2, 2]);
        a.re('C24', [-0.43, 0.98, -541.31], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [0.49, 0.9800599999999999, -562.71], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [-0.29, 0.98012, -574.53], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [-0.22, 0.98018, -590], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [-0.03, 0.98024, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [-0.87, 0.9803, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [0.58, 0.98, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [0.57, 0.9800599999999999, -590], [0, 0, 0], [2, 2, 2]);
        a.re('Y1', [0, 0.00006, -245], [0, 0, 0], [10, 10, 10]);
        a.re('P47', [0, 6.93018, -330], [0, -1.57, 0], [10, 1, 20]);
        a.re('P48', [-1.04, -0.00976, -145.53], [0.35, 0, 0], [4, 1, 20]);
        a.re('P49', [0, 0.0003, -338.62], [0, -1.57, 0], [10, 1, 20]);
        a.re('P50', [0, 0, -349.91], [0, -1.57, 0], [10, 1, 20]);
        a.re('P51', [0, 0.00006, -359.28], [0, -1.57, 0], [10, 1, 20]);
        a.re('C32', [-0.45, 0.98012, -614.86], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [-0.34, 0.98018, -627.48], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [-1.78, 0.85012, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C35', [-5.15, 0.8501799999999999, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C36', [-2.7, 0.85024, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C37', [-1.04, 0.8503000000000001, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C38', [-4.16, 0.85, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C39', [-2.46, 0.85006, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C40', [-3.1, 0.85012, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C41', [-1.53, 0.8501799999999999, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C42', [0.85, 0.85024, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C43', [-0.23, 0.4103, -213], [0, 0, 0], [2, 2, 2]);
        a.re('C44', [-0.23, 0.41, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C45', [-0.23, 0.41006, -222], [0, 0, 0], [2, 2, 2]);
        a.re('C46', [-3.3, 0.85012, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C47', [0.49, 0.8501799999999999, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C48', [-2.28, 0.85024, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C49', [-0.58, 0.8503000000000001, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C50', [-0.71, 0.85, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C51', [-0.12, 0.85006, -145], [0, 0, 0], [2, 2, 2]);
        a.re('C52', [-1.51, 0.85012, -150], [0, 0, 0], [2, 2, 2]);
        a.re('C53', [0.12, 0.8501799999999999, -157], [0, 0, 0], [2, 2, 2]);
        a.re('C54', [-1.02, 0.98024, -590], [0, 0, 0], [2, 2, 2]);
        a.re('P52', [0, 0.0003, -8], [0, 0, 0], [0.6, 1, 20]);
        a.re('P53', [-0.25, 0, -174.75], [0, 0, 0], [0.6, 1, 20]);
        a.re('P54', [-0.25, 0.00006, -297.81], [0, 0, 0.52], [4, 1, 10]);
        a.re('P55', [-0.25, 0.00012, -307.21], [0, 0, 0.7], [4, 1, 10]);
        a.re('P56', [-0.25, 0.00018, -130], [0, 0, 0], [0.6, 1, 20]);
        a.re('P57', [0, 0.00024, -18], [0, -1.57, 0], [10, 1, 20]);
        a.re('P58', [-0.25, 0.0003, -193.8], [0, 0, 0], [0.6, 1, 20]);
        a.re('P59', [-0.25, 0, -222.74], [0, 0, -0.35], [1, 1, 40]);
        a.re('P60', [0, 0.00006, -368.76], [0, -1.57, 0], [10, 1, 20]);
        a.re('P61', [-1.04, 0.00012, -157.52], [-0.35, 0, 0], [4, 1, 20]);
        a.re('P62', [0, 0.00018, -184.2], [0, -1.57, 0], [10, 1, 20]);
        a.re('P63', [-0.25, 0.00024, -315.62], [0, 0, 0.87], [4, 1, 10]);
        a.re('P64', [-0.25, 0.0003, -257.63], [0, 0, -0.35], [4, 1, 20]);
        a.re('P65', [-0.25, 0, -270.33], [0, 0, 0.35], [4, 1, 10]);
        a.re('P66', [-0.25, 0.00006, -278.99], [0, 0, -0.35], [4, 1, 10]);
        a.re('P67', [-0.25, 0.00012, -287.06], [0, 0, 0.35], [4, 1, 10]);
        a.re('P68', [-0.25, 0.00018, -325.61], [0, 0, 0], [4, 1, 10]);
        a.re('P69', [1.29, 0.00024, -334.15], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P70', [2.78, 0.0003, -344.3], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P71', [2.78, 0, -354.3], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P72', [2.78, 0.00006, -363.5], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P73', [2.78, 0.00012, -372.78], [-0.35, 0, 0], [4, 1, 10]);
        a.re('P74', [0, -0.01982, -387.26], [0, 0, 0], [4, 1, 20]);
        a.re('P75', [0, -0.00976, -429.85], [0.79, 0, 0], [4, 1, 20]);
        a.re('P76', [0, 0.0003, -429.85], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P77', [0, 0, -414.19], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P78', [0, -0.00994, -414.19], [0.79, 0, 0], [4, 1, 20]);
        a.re('P79', [0, 0.00012, -445.28], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P80', [0, -0.00982, -445.28], [0.79, 0, 0], [4, 1, 20]);
        a.re('P81', [0, -0.00976, -461.74], [0.79, 0, 0], [4, 1, 20]);
        a.re('P82', [0, 0.0003, -461.74], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P83', [0, -0.01, -476.37], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P84', [0, 0.00006, -476.37], [0.79, 0, 0], [4, 1, 20]);
        a.re('P85', [0, 0.00012, -492.91], [0.79, 0, 0], [4, 1, 20]);
        a.re('P86', [0, -0.00982, -492.91], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P87', [0, -0.00976, -508.48], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P88', [0, 0.0003, -508.48], [0.79, 0, 0], [4, 1, 20]);
        a.re('P89', [0, 0, -583.21], [0, 0, 0], [2, 1, 120]);
        a.re('P90', [0, -0.00994, -524.01], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P91', [0, -0.01988, -524.81], [0.79, 0, 0], [4, 1, 20]);
        a.re('P92', [0, -0.00982, -400.09], [-0.79, 0, 0], [4, 1, 20]);
        a.re('P93', [0, 0.00024, -400.09], [0.79, 0, 0], [4, 1, 20]);
        a.re('C55', [0.49, 0.9803, -548.72], [0, 0, 0], [2, 2, 2]);
        a.re('C56', [-0.43, 0.98, -541.31], [0, 0, 0], [2, 2, 2]);
        a.re('C57', [0.49, 0.9800599999999999, -562.71], [0, 0, 0], [2, 2, 2]);
        a.re('C58', [-0.29, 0.98012, -574.53], [0, 0, 0], [2, 2, 2]);
        a.re('C59', [-0.22, 0.98018, -590], [0, 0, 0], [2, 2, 2]);
        a.re('C60', [-0.03, 0.98024, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C61', [-0.87, 0.9803, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C62', [0.58, 0.98, -600], [0, 0, 0], [2, 2, 2]);
        a.re('C63', [0.57, 0.9800599999999999, -590], [0, 0, 0], [2, 2, 2]);
    },
    physics_update: function() {},
    render_update: function() {}
}