var map = {
    title: "Skill Trail",
    song: "env2",
    maker: "Zhou Yu",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([7.64035, -2.89965, -692.84965], [0, 0, 0], [14.8, 0.78, 240.72], "11d932", 0, 0, 0.6, false, false);
        a.p([11.27042, -0.80958, -1073.48958], [0, 0, 0], [3.4, 24.1, 179.06], "45cf0a", 0, 0, 0.6, false, false);
        a.p([12.97049, -2.30951, -410.51951], [0, 0, 0], [3, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([7.64, -7.32, -1074.78], [0, 0.02, 0], [5, 0.78, 180.48], "6fd61a", 0, 0, 0.6, false, false);
        a.p([2.38007, -1.01993, -930.10993], [-0.03, 0, 0], [3.4, 24.1, 109.2], "6fd61a", 0, 0, 0.6, false, false);
        a.p([12.73014, -1.01986, -930.10986], [0.03, 0, 0], [3.4, 24.1, 109.2], "6fd61a", 0, 0, 0.6, false, false);
        a.p([7.52021, -1.01979, -846.55979], [0, 0.08, 0], [5.68, 0.78, 65.42], "6fd61a", 0, 0, 0.6, false, false);
        a.p([3.79028, -0.80972, -1073.48972], [0, 0, 0], [3.4, 24.1, 179.06], "6fd61a", 0, 0, 0.6, false, false);
        a.p([13.19035, -0.96965, -440.68965], [0, 0, 0], [5.18, 1.22, 5.4], "a62bcf", 99999.0, 0, 0.6, false, false);
        a.p([10.02042, -2.06958, -459.42958], [0, 0, 0], [5.6, 1.22, 5.84], "a62bcf", 99999.0, 0, 0.6, false, false);
        a.p([9.85049, -1.17951, -491.50951], [0, 0, 0], [5.68, 1.22, 5.92], "a62bcf", 99999.0, 0, 0.6, false, false);
        a.p([12.27, -2.31, -379.42], [0, 0, 0], [3.72, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([12.37007, -2.30993, -393.09993], [0, 0, 0], [3.82, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([14.54014, -2.30986, -401.73986], [0, 0, 0], [1.84, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([11.31021, -2.30979, -401.73979], [0, 0, 0], [1.78, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([14.98028, -2.30972, -386.24972], [0, 0, 0], [0.94, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([8.02035, -2.28965, -511.22965], [0, 0, 0], [5, 1.22, 5.2], "a62bcf", 99999.0, 0, 0.6, false, false);
        a.p([22.13042, -6.59958, -1436.67958], [0, 0, -0.75], [18.74, 17.82, 549.34], "c9cc1b", 0, 0, 0.6, false, false);
        a.p([9.14049, -22.93951, -2909.44951], [0, 0, 0], [28.5, 26.36, 1004.82], "cf110a", 0, 0, 0.6, false, false);
        a.p([31.16, -1.59, -2916.25], [0, 0, 0], [18.76, 26.36, 1004.82], "cf110a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-13.38993, -1.58993, -2916.24993], [0, 0, 0], [18.76, 26.36, 1004.82], "cf110a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([6.34014, -6.81986, -1051.57986], [0, 0, 0], [3.4, 2.4, 1.82], "cf1e0a", 0, 0, 0.6, false, false);
        a.p([8.75021, -7.43979, -1019.42979], [0, 0, 0], [3.4, 2.4, 1.82], "cf1e0a", 0, 0, 0.6, false, false);
        a.p([6.48028, -5.40972, -1115.96972], [0, 0, 0], [3.4, 2.46, 1.82], "cf1e0a", 0, 0, 0.6, false, false);
        a.p([8.56035, -5.98965, -1085.80965], [0, 0, 0], [3.4, 2.4, 1.82], "cf1e0a", 0, 0, 0.6, false, false);
        a.p([13.03042, -1.89958, -440.20958], [0, 0, 0], [7.56, 0.78, 8.36], "d3d61e", 0, 0, 0.6, true, false);
        a.p([8.41049, -2.99951, -459.45951], [0, 0, 0], [7.56, 0.78, 7.7], "d3d61e", 0, 0, 0.6, true, false);
        a.p([8.22, -2.52, -474.71], [-0.49, 0, 0], [2.64, 0.78, 7.14], "d3d61e", 0, 0, 0.6, true, false);
        a.p([8.31007, -2.10993, -490.31993], [0, 0, 0], [7.56, 0.78, 7.7], "d3d61e", 0, 0, 0.6, true, false);
        a.p([8.00014, -3.21986, -511.25986], [0, 0, 0], [7.56, 0.78, 7.7], "d3d61e", 0, 0, 0.6, true, false);
        a.p([5.30021, -2.27979, -692.84979], [0, 0, 0], [10.34, 4.74, 9.6], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([8.89028, -2.27972, -733.82972], [0, 0, 0], [10.34, 4.74, 9.6], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([9.85035, -2.27965, -656.61965], [0, 0, 0], [10.34, 4.74, 9.6], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([7.64042, -2.27958, -614.84958], [0, 0, 0], [10.34, 4.74, 9.6], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([9.11049, 2.78049, -303.14951], [0, 0, 0], [3.82, 15.64, 18.5], "d9450f", 0, 0, 0.6, false, false);
        a.p([18.26, 2.78, -288.74], [0, 0, 0], [3.82, 15.64, 14.04], "d9450f", 0, 0, 0.6, false, false);
        a.p([18.26007, 2.78007, -325.63993], [0, 0, 0], [3.82, 15.64, 29.48], "d9450f", 0, 0, 0.6, false, false);
        a.p([18.31014, 3.34014, -236.10986], [0, 0, 0], [4.64, 6.74, 19.36], "d9450f", 0, 0, 0.6, false, false);
        a.p([13.57021, 3.34021, -217.82979], [0, 0, 0], [5.52, 0.78, 19.36], "d9450f", 0, 0, 0.6, false, false);
        a.p([9.11028, 2.78028, -272.82972], [0, 0, 0], [3.82, 15.64, 19.36], "d9450f", 0, 0, 0.6, false, false);
        a.p([13.57035, 4.31035, -254.45965], [0, 0.24, 0], [5.52, 0.78, 19.36], "d9450f", 0, 0, 0.6, false, false);
        a.p([0.88042, -7.36958, -2062.73958], [0, 0, -0.75], [17.16, 15.22, 731.88], "e09a3f", 0, 0, 0.6, false, false);
        a.p([9.07049, -10.73951, -3465.40951], [0, 0, 0], [2.56, 0.78, 61.36], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([11.44, 4.19, -79.67], [0, 0, 0], [8.14, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([22.68007, 4.19007, -97.46993], [0, 0, 0], [9.74, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-7.78986, 4.19014, -104.27986], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([0.88021, 4.19021, -104.27979], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([14.63028, -2.26972, -809.54972], [0, 0, 0], [7.96, 4.74, 7.94], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([10.40035, -2.27965, -718.82965], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([1.38042, -2.27958, -762.92958], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([0.13049, -2.26951, -809.40951], [0, 0, 0], [7.96, 4.74, 7.94], "d91f11,0.5", 9999.0, 0, 0.6, false, false);
        a.p([8.08, -2.28, -783.18], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([7.93007, -2.27993, -633.99993], [0, 0, 0], [4.5, 0.78, 4.5], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-15.99986, 4.19014, -71.74986], [0, 0, 0], [10.5, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-18.28979, 4.19021, -83.33979], [0, 0, 0], [8.14, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-26.48972, 4.19028, -87.64972], [0, 0, 0], [8.14, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([-3.51965, 10.70035, -123.98965], [0, 0, 0], [1.62, 0.78, 7.28], "2.0", 0, 0, 0.6, false, false);
        a.p([7.40042, -0.42958, -359.40958], [0, 0, 0], [5.04, 0.78, 0.94], "2.0", 0, 0, 0.6, false, false);
        a.p([-8.92951, 10.70049, -136.04951], [0.78, 0, 0], [1.62, 0.78, 7.28], "2.0", 0, 0, 0.6, false, false);
        a.p([-3.52, 10.7, -116.75], [0, 0, 0], [12.38, 0.78, 8.2], "2.0", 0, 0, 0.6, false, false);
        a.p([12.93007, -2.96993, -386.74993], [0, 0, 0], [5.04, 0.78, 59.84], "2.0", 0, 0, 0.6, false, false);
        a.p([-12.70986, 10.70014, -146.96986], [-0.52, 0, 0], [1.62, 0.78, 7.28], "2.0", 0, 0, 0.6, false, false);
        a.p([7.40021, -2.12979, -359.40979], [0, 0, 0], [5.04, 0.78, 0.94], "2.0", 0, 0, 0.6, false, false);
        a.p([-1.44972, 10.75028, -153.07972], [-1.57, 0, 0], [1.62, 0.78, 7.28], "2.0", 0, 0, 0.6, false, false);
        a.p([9.05035, 0.16035, -359.40965], [0, 0, -0.45], [2.94, 0.78, 0.94], "2.0", 0, 0, 0.6, false, false);
        a.p([11.78042, 10.70042, -157.39958], [0, 0, 0], [6.62, 0.78, 6.48], "2.0", 0, 0, 0.6, false, false);
        a.p([13.17049, 10.75049, -175.93951], [0, 0, 0], [0.22, 0.78, 33.32], "2.0", 0, 0, 0.6, false, false);
        a.p([6.2, -2.85, -359.41], [0, 0, -0.45], [2.94, 0.78, 0.94], "2.0", 0, 0, 0.6, false, false);
        a.p([12.34007, 10.75007, -175.93993], [0, 0, 0], [0.22, 0.78, 33.32], "2.0", 0, 0, 0.6, false, false);
        a.p([-5.01986, 10.70014, -130.53986], [0.42, 0, 0], [1.62, 0.78, 7.28], "3.0", 0, 0, 0.6, false, false);
        a.p([-12.93979, 10.70021, -141.09979], [0.47, 0, 0], [1.62, 0.78, 7.28], "3.0", 0, 0, 0.6, false, false);
        a.p([-7.95972, 10.70028, -151.43972], [-1.12, 0, 0], [1.62, 0.78, 7.28], "3.0", 0, 0, 0.6, false, false);
        a.p([5.47035, 10.80035, -154.01965], [-1.32, 0, 0], [1.62, 0.78, 7.28], "3.0", 0, 0, 0.6, false, false);
        a.p([12.75042, 10.75042, -175.93958], [0, 0, 0], [0.22, 0.78, 33.32], "3.0", 0, 0, 0.6, false, false);
        a.p([0.03049, -0.25951, -25.59951], [0, 0, 0], [4, 0.42, 4.02], "3.0", 0, 0, 0.6, false, false);
        a.p([12.93, -1.77, -423.11], [0, 0.21, 0], [4.98, 0.78, 13.4], "477.0", 0, 0, 0.6, false, false);
        a.p([12.98007, -0.83993, -431.90993], [0, -0.12, 0], [5.46, 0.76, 5.88], "477.0", 0, 0, 0.6, false, false);
        a.p([7.64014, -2.79986, -546.47986], [0, 0, 0], [7.8, 0.78, 52.56], "57.0", 0, 0, 0.6, false, false);
        a.p([9.06021, -11.33979, -3457.38979], [0, 0, 0], [4.94, 0.78, 100.72], "57.0", 0, 0, 0.6, false, false);
        a.p([12.93028, -2.89972, -347.44972], [0, 0, 0], [7.8, 0.78, 19.36], "57.0", 0, 0, 0.6, false, false);
        a.c([0.40035, 0.62035, -13.49965], "5.0");
        a.c([-0.41958, 0.62042, -16.55958], "5.0");
        a.c([0.44049, 0.62049, -19.55951], "5.0");
        a.c([0.07, 0.62, -9.61], "5.0");
        a.c([-0.45993, 0.62007, -22.53993], "5.0");
        a.p([13.64014, -2.30986, -368.42986], [0, 0, 0], [3.68, 0.88, 0.94], "45cf0a,0.5", 99999.0, 0, 0.6, false, false);
        a.p([13.06021, -2.30979, -351.07979], [0, 0, 0], [3.82, 0.88, 4.8], "5.0", 9999999.0, 0, 0.6, false, false);
        a.p([10.68028, -2.28972, -553.66972], [-0.05, 0, 0], [4.58, 1.22, 39.2], "5.0,0.5", 99999.0, 0, 0.6, false, false);
        a.p([4.12035, -2.28965, -553.68965], [-0.05, 0, 0], [4.58, 1.22, 39.18], "5.0,0.5", 99999.0, 0, 0.6, false, false);
        a.c([7.49042, -0.04958000000000007, -848.53958], "5.0");
        a.p([-3.51951, 3.53049, -83.64951], [0, 0, 0], [15.42, 0.78, 46.26], "77.0", 0, 0, 0.6, false, false);
        a.p([0.03, -0.27, -11.98], [0, 0, 0], [1.82, 0.5, 25.3], "77.0", 0, 0, 0.6, false, false);
        a.p([-3.51993, 2.44007, -109.91993], [0, 0, 0], [12.38, 0.78, 8.2], "77.0", 0, 0, 0.6, false, false);
        a.p([-3.51986, 3.81014, -56.44986], [0, 0, 0], [2.56, 0.78, 8.88], "77.0", 0, 0, 0.6, false, false);
        a.p([12.65021, 3.60021, -198.75979], [0, 0, 0], [2.48, 0.78, 19.36], "77.0", 0, 0, 0.6, false, false);
        a.p([-15.99972, 4.19028, -71.74972], [0, 0, 0], [10.5, 0.78, 4.04], "e82a2a,0.5", 99999.0, 0, 0.6, false, false);
        a.e([9.11042, -9.95958, -3505.14958]);
    },
    post: function() {
        a.u('P19');
        a.u('P20');
        a.u('P30');
        a.u('P31');
        a.u('P32');
        a.u('P33');
        a.u('P43');
        a.u('P44');
        a.u('P45');
        a.u('P46');
        a.u('P47');
        a.u('P48');
        a.u('P49');
        a.u('P50');
        a.u('P51');
        a.u('P52');
        a.u('P53');
        a.u('P54');
        a.u('P55');
        a.u('P74');
        a.u('C5');
        a.u('P89');
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -3.0099300000000007) {
                    speed = default_speed * 0.15;
                    a.msg_set("Ready? ");
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -5.86993) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -6.039580000000001) {
                    speed = default_speed * 0.5;
                    a.msg_set("Cones Dodging ");
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -23.21958) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -26.00986) {
                    a.msg_set("Moving Platform ");
                    this.section_id += 1
                }
                break;
            case 5:
                a.mov('P74', 'x', -0.15);
                a.mov('P74', 'y', 0.2);
                a.mov('P74', 'z', -0.7);
                a.rot('P74', 'y', 2.0);
                if (PZ < -49.46986) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -60.06979) {
                    a.msg_set("Blocks Attack ");
                    a.cam_d(3.0);
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('P43', 'x', -0.35);
                a.mov('P44', 'x', -0.5);
                a.rot('P45', 'y', -10.0);
                a.rot('P46', 'y', 10.0);
                a.mov('P53', 'x', 0.4);
                a.mov('P54', 'x', 0.4);
                a.mov('P55', 'x', 0.8);
                a.mov('P89', 'x', 0.4);
                if (PZ < -105.46979) {
                    a.msg_del();
                    a.cam_d(null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -110.94993) {
                    a.msg_set("Reverse Gravity ");
                    a.g(null, -1.0, null);
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -189.88993) {
                    a.msg_del();
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -208.74985999999998) {
                    speed = default_speed * 3.0;
                    a.msg_set("Wall Riding ");
                    a.g(null, 0.6, null);
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -345.04985999999997) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -347.60979000000003) {
                    speed = default_speed * 0.3;
                    a.msg_set("Continue? ");
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -354.38979) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -356.87964999999997) {
                    steer = default_steer * -1.5;
                    a.msg_set("Reverse Control ");
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -418.71965) {
                    steer = cc.get("steer", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -428.91972) {
                    a.jh(0.7);
                    a.msg_set("JUMP!!! ");
                    speed = default_speed * 0.8;
                    a.g(null, 0.6, null);
                    this.section_id += 1
                }
                break;
            case 17:
                if (PZ < -520.15972) {
                    a.jh(null);
                    a.msg_del();
                    speed = cc.get("speed", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -528.35965) {
                    speed = default_speed * 0.3;
                    a.msg_set("WARNING! ");
                    scene.clearColor = new BABYLON.Color3.FromHexString("#c9481c");
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -532.81965) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    scene.clearColor = cc.get("scene.clearColor", null);
                    this.section_id += 1
                }
                break;
            case 20:
                if (PZ < -533.1998600000001) {
                    speed = default_speed * 0.2;
                    a.msg_set("The final wave is getting rampant ");
                    this.section_id += 1
                }
                break;
            case 21:
                if (PZ < -537.79986) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 22:
                if (PZ < -538.17972) {
                    speed = default_speed * 0.3;
                    a.msg_set("Get ready ");
                    this.section_id += 1
                }
                break;
            case 23:
                if (PZ < -542.63972) {
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 24:
                if (PZ < -575.4097899999999) {
                    speed = default_speed * 4.0;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#28c91c");
                    this.section_id += 1
                }
                break;
            case 25:
                a.rot('P30', 'z', -10.0);
                a.rot('P31', 'z', 10.0);
                a.rot('P32', 'z', 10.0);
                a.rot('P33', 'z', 10.0);
                a.rot('P47', 'z', 10.0);
                a.rot('P48', 'y', -10.0);
                a.rot('P49', 'y', 10.0);
                a.rot('P50', 'z', -10.0);
                a.rot('P51', 'y', 10.0);
                a.rot('P52', 'y', 10.0);
                if (PZ < -815.32979) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    this.section_id += 1
                }
                break;
            case 26:
                if (PZ < -815.38972) {
                    speed = default_speed * 7.0;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#90c91c");
                    a.g(null, 1.3, null);
                    this.section_id += 1
                }
                break;
            case 27:
                a.rot('C5', 'x', 7.0);
                a.rot('C5', 'y', -10.0);
                if (PZ < -1168.46972) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 28:
                if (PZ < -1168.71951) {
                    speed = default_speed * 10.0;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#cede1b");
                    a.g(null, 0.5, null);
                    this.section_id += 1
                }
                break;
            case 29:
                if (PZ < -1711.59951) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 30:
                if (PZ < -1711.9599999999998) {
                    speed = default_speed * 13.0;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#de901b");
                    a.g(null, 0.5, null);
                    this.section_id += 1
                }
                break;
            case 31:
                if (PZ < -2446.2799999999997) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 32:
                if (PZ < -2447.60993) {
                    speed = default_speed * 16.0;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#de281b");
                    steer = default_steer * 0.5;
                    a.g(null, 3.0, null);
                    this.section_id += 1
                }
                break;
            case 33:
                a.mov('P19', 'x', -0.2);
                a.mov('P20', 'x', 0.2);
                if (PZ < -3412.68993) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 34:
                if (PZ < -3417.21965) {
                    a.msg_set("congratulations ");
                    this.section_id += 1
                }
                break;
            case 35:
                if (PZ < -3427.59965) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 36:
                if (PZ < -3428.89) {
                    a.msg_set("You passed this trial ");
                    this.section_id += 1
                }
                break;
            case 37:
                if (PZ < -3450.57) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 38:
                if (PZ < -3451.1495099999997) {
                    a.msg_set("Have a good day : ) ");
                    this.section_id += 1
                }
                break;
            case 39:
                if (PZ < -3472.82951) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 40:
                if (PZ < -3492.1895799999998) {
                    a.msg_set("GG ");
                    this.section_id += 1
                }
                break;
            case 41:
                if (PZ < -3500.40958) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [7.64035, -2.89965, -692.84965], [0, 0, 0], [14.8, 0.78, 240.72]);
        a.re('P1', [11.27042, -0.80958, -1073.48958], [0, 0, 0], [3.4, 24.1, 179.06]);
        a.re('P2', [12.97049, -2.30951, -410.51951], [0, 0, 0], [3, 0.88, 0.94]);
        a.re('P3', [7.64, -7.32, -1074.78], [0, 0.02, 0], [5, 0.78, 180.48]);
        a.re('P4', [2.38007, -1.01993, -930.10993], [-0.03, 0, 0], [3.4, 24.1, 109.2]);
        a.re('P5', [12.73014, -1.01986, -930.10986], [0.03, 0, 0], [3.4, 24.1, 109.2]);
        a.re('P6', [7.52021, -1.01979, -846.55979], [0, 0.08, 0], [5.68, 0.78, 65.42]);
        a.re('P7', [3.79028, -0.80972, -1073.48972], [0, 0, 0], [3.4, 24.1, 179.06]);
        a.re('P8', [13.19035, -0.96965, -440.68965], [0, 0, 0], [5.18, 1.22, 5.4]);
        a.re('P9', [10.02042, -2.06958, -459.42958], [0, 0, 0], [5.6, 1.22, 5.84]);
        a.re('P10', [9.85049, -1.17951, -491.50951], [0, 0, 0], [5.68, 1.22, 5.92]);
        a.re('P11', [12.27, -2.31, -379.42], [0, 0, 0], [3.72, 0.88, 0.94]);
        a.re('P12', [12.37007, -2.30993, -393.09993], [0, 0, 0], [3.82, 0.88, 0.94]);
        a.re('P13', [14.54014, -2.30986, -401.73986], [0, 0, 0], [1.84, 0.88, 0.94]);
        a.re('P14', [11.31021, -2.30979, -401.73979], [0, 0, 0], [1.78, 0.88, 0.94]);
        a.re('P15', [14.98028, -2.30972, -386.24972], [0, 0, 0], [0.94, 0.88, 0.94]);
        a.re('P16', [8.02035, -2.28965, -511.22965], [0, 0, 0], [5, 1.22, 5.2]);
        a.re('P17', [22.13042, -6.59958, -1436.67958], [0, 0, -0.75], [18.74, 17.82, 549.34]);
        a.re('P18', [9.14049, -22.93951, -2909.44951], [0, 0, 0], [28.5, 26.36, 1004.82]);
        a.re('P19', [31.16, -1.59, -2916.25], [0, 0, 0], [18.76, 26.36, 1004.82]);
        a.re('P20', [-13.38993, -1.58993, -2916.24993], [0, 0, 0], [18.76, 26.36, 1004.82]);
        a.re('P21', [6.34014, -6.81986, -1051.57986], [0, 0, 0], [3.4, 2.4, 1.82]);
        a.re('P22', [8.75021, -7.43979, -1019.42979], [0, 0, 0], [3.4, 2.4, 1.82]);
        a.re('P23', [6.48028, -5.40972, -1115.96972], [0, 0, 0], [3.4, 2.46, 1.82]);
        a.re('P24', [8.56035, -5.98965, -1085.80965], [0, 0, 0], [3.4, 2.4, 1.82]);
        a.re('P25', [13.03042, -1.89958, -440.20958], [0, 0, 0], [7.56, 0.78, 8.36]);
        a.re('P26', [8.41049, -2.99951, -459.45951], [0, 0, 0], [7.56, 0.78, 7.7]);
        a.re('P27', [8.22, -2.52, -474.71], [-0.49, 0, 0], [2.64, 0.78, 7.14]);
        a.re('P28', [8.31007, -2.10993, -490.31993], [0, 0, 0], [7.56, 0.78, 7.7]);
        a.re('P29', [8.00014, -3.21986, -511.25986], [0, 0, 0], [7.56, 0.78, 7.7]);
        a.re('P30', [5.30021, -2.27979, -692.84979], [0, 0, 0], [10.34, 4.74, 9.6]);
        a.re('P31', [8.89028, -2.27972, -733.82972], [0, 0, 0], [10.34, 4.74, 9.6]);
        a.re('P32', [9.85035, -2.27965, -656.61965], [0, 0, 0], [10.34, 4.74, 9.6]);
        a.re('P33', [7.64042, -2.27958, -614.84958], [0, 0, 0], [10.34, 4.74, 9.6]);
        a.re('P34', [9.11049, 2.78049, -303.14951], [0, 0, 0], [3.82, 15.64, 18.5]);
        a.re('P35', [18.26, 2.78, -288.74], [0, 0, 0], [3.82, 15.64, 14.04]);
        a.re('P36', [18.26007, 2.78007, -325.63993], [0, 0, 0], [3.82, 15.64, 29.48]);
        a.re('P37', [18.31014, 3.34014, -236.10986], [0, 0, 0], [4.64, 6.74, 19.36]);
        a.re('P38', [13.57021, 3.34021, -217.82979], [0, 0, 0], [5.52, 0.78, 19.36]);
        a.re('P39', [9.11028, 2.78028, -272.82972], [0, 0, 0], [3.82, 15.64, 19.36]);
        a.re('P40', [13.57035, 4.31035, -254.45965], [0, 0.24, 0], [5.52, 0.78, 19.36]);
        a.re('P41', [0.88042, -7.36958, -2062.73958], [0, 0, -0.75], [17.16, 15.22, 731.88]);
        a.re('P42', [9.07049, -10.73951, -3465.40951], [0, 0, 0], [2.56, 0.78, 61.36]);
        a.re('P43', [11.44, 4.19, -79.67], [0, 0, 0], [8.14, 0.78, 4.04]);
        a.re('P44', [22.68007, 4.19007, -97.46993], [0, 0, 0], [9.74, 0.78, 4.04]);
        a.re('P45', [-7.78986, 4.19014, -104.27986], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P46', [0.88021, 4.19021, -104.27979], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P47', [14.63028, -2.26972, -809.54972], [0, 0, 0], [7.96, 4.74, 7.94]);
        a.re('P48', [10.40035, -2.27965, -718.82965], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P49', [1.38042, -2.27958, -762.92958], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P50', [0.13049, -2.26951, -809.40951], [0, 0, 0], [7.96, 4.74, 7.94]);
        a.re('P51', [8.08, -2.28, -783.18], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P52', [7.93007, -2.27993, -633.99993], [0, 0, 0], [4.5, 0.78, 4.5]);
        a.re('P53', [-15.99986, 4.19014, -71.74986], [0, 0, 0], [10.5, 0.78, 4.04]);
        a.re('P54', [-18.28979, 4.19021, -83.33979], [0, 0, 0], [8.14, 0.78, 4.04]);
        a.re('P55', [-26.48972, 4.19028, -87.64972], [0, 0, 0], [8.14, 0.78, 4.04]);
        a.re('P56', [-3.51965, 10.70035, -123.98965], [0, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P57', [7.40042, -0.42958, -359.40958], [0, 0, 0], [5.04, 0.78, 0.94]);
        a.re('P58', [-8.92951, 10.70049, -136.04951], [0.78, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P59', [-3.52, 10.7, -116.75], [0, 0, 0], [12.38, 0.78, 8.2]);
        a.re('P60', [12.93007, -2.96993, -386.74993], [0, 0, 0], [5.04, 0.78, 59.84]);
        a.re('P61', [-12.70986, 10.70014, -146.96986], [-0.52, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P62', [7.40021, -2.12979, -359.40979], [0, 0, 0], [5.04, 0.78, 0.94]);
        a.re('P63', [-1.44972, 10.75028, -153.07972], [-1.57, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P64', [9.05035, 0.16035, -359.40965], [0, 0, -0.45], [2.94, 0.78, 0.94]);
        a.re('P65', [11.78042, 10.70042, -157.39958], [0, 0, 0], [6.62, 0.78, 6.48]);
        a.re('P66', [13.17049, 10.75049, -175.93951], [0, 0, 0], [0.22, 0.78, 33.32]);
        a.re('P67', [6.2, -2.85, -359.41], [0, 0, -0.45], [2.94, 0.78, 0.94]);
        a.re('P68', [12.34007, 10.75007, -175.93993], [0, 0, 0], [0.22, 0.78, 33.32]);
        a.re('P69', [-5.01986, 10.70014, -130.53986], [0.42, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P70', [-12.93979, 10.70021, -141.09979], [0.47, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P71', [-7.95972, 10.70028, -151.43972], [-1.12, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P72', [5.47035, 10.80035, -154.01965], [-1.32, 0, 0], [1.62, 0.78, 7.28]);
        a.re('P73', [12.75042, 10.75042, -175.93958], [0, 0, 0], [0.22, 0.78, 33.32]);
        a.re('P74', [0.03049, -0.25951, -25.59951], [0, 0, 0], [4, 0.42, 4.02]);
        a.re('P75', [12.93, -1.77, -423.11], [0, 0.21, 0], [4.98, 0.78, 13.4]);
        a.re('P76', [12.98007, -0.83993, -431.90993], [0, -0.12, 0], [5.46, 0.76, 5.88]);
        a.re('P77', [7.64014, -2.79986, -546.47986], [0, 0, 0], [7.8, 0.78, 52.56]);
        a.re('P78', [9.06021, -11.33979, -3457.38979], [0, 0, 0], [4.94, 0.78, 100.72]);
        a.re('P79', [12.93028, -2.89972, -347.44972], [0, 0, 0], [7.8, 0.78, 19.36]);
        a.re('C0', [0.40035, 0.62035, -13.49965], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-0.41958, 0.62042, -16.55958], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [0.44049, 0.62049, -19.55951], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [0.07, 0.62, -9.61], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-0.45993, 0.62007, -22.53993], [0, 0, 0], [2, 2, 2]);
        a.re('P80', [13.64014, -2.30986, -368.42986], [0, 0, 0], [3.68, 0.88, 0.94]);
        a.re('P81', [13.06021, -2.30979, -351.07979], [0, 0, 0], [3.82, 0.88, 4.8]);
        a.re('P82', [10.68028, -2.28972, -553.66972], [-0.05, 0, 0], [4.58, 1.22, 39.2]);
        a.re('P83', [4.12035, -2.28965, -553.68965], [-0.05, 0, 0], [4.58, 1.22, 39.18]);
        a.re('C5', [7.49042, -0.04958000000000007, -848.53958], [0, 0, 0], [2, 2, 2]);
        a.re('P84', [-3.51951, 3.53049, -83.64951], [0, 0, 0], [15.42, 0.78, 46.26]);
        a.re('P85', [0.03, -0.27, -11.98], [0, 0, 0], [1.82, 0.5, 25.3]);
        a.re('P86', [-3.51993, 2.44007, -109.91993], [0, 0, 0], [12.38, 0.78, 8.2]);
        a.re('P87', [-3.51986, 3.81014, -56.44986], [0, 0, 0], [2.56, 0.78, 8.88]);
        a.re('P88', [12.65021, 3.60021, -198.75979], [0, 0, 0], [2.48, 0.78, 19.36]);
        a.re('P89', [-15.99972, 4.19028, -71.74972], [0, 0, 0], [10.5, 0.78, 4.04]);
        a.re('E0', [9.11042, -9.95958, -3505.14958], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
