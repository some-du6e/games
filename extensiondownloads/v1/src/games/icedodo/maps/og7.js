var map = {
    title: "Cloud",
    song: "env2",
    maker: "dododo73",
    spawn: [0, 0.5, 0],
    init: function() {

		function pup(a2, b, c, d, e, f, g, h, i, j) {
			a.og(a2,b,c,d,e,f,g,h,i,j);
		}
		a.og('brown', 0,0,-2,0,0,0,3 ,0.1 ,5 ); // name0
		a.og('brown', 0,0,-14.246,0,0,0,7.527 ,0.1 ,20.474 );
		a.og('ice', -0.898,0.131,-12.581,0,0,0,6.652 ,0.466 ,0.716 );
		a.og('ice', 3.095,0.131,-17.12,0,0,0,1.878 ,0.466 ,0.716 );
		a.og('ice', -1.488,0.131,-17.12,0,0,0,4.684 ,0.466 ,0.716 );
		a.og('green', 0,0.282,-21.023,0,8.791,0,1.746 ,0.1 ,6.027 ); // slope p
		a.og('green', 0,0.697,-34.126,0,0,0,7.527 ,0.1 ,20.474 );
		a.og('ice', 0,0.918,-29.175,0,0,0,8.129 ,0.466 ,0.716 );
		a.og('green', -1.762,0.92,-27.422,0,8.791,0,1.746 ,0.1 ,2.944 ); // slope p
		a.og('ice', 0,0.918,-33.151,0,0,0,8.129 ,0.466 ,0.716 );
		a.og('green', -0.925,1.084,-30.96,20.565,0,0,0.637 ,0.1 ,3.918 ); // bridge /
		a.og('green', 0.425,1.084,-35.06,20.565,0,0,0.637 ,0.1 ,3.918 ); // bride
		a.og('ice', 0,0.918,-36.904,0,0,0,8.129 ,0.466 ,0.716 );
		a.og('ice', 0,0.918,-42.336,0,0,0,8.129 ,0.466 ,0.716 );
		a.og('green', 0,0.697,-53.99,0,0,0,7.527 ,0.1 ,20.474 );
		a.og('green', 0.474,1.084,-39.641,-10.558,0,0,0.637 ,0.1 ,5.517 ); // bride
		a.og('ice', 0,0.918,-47.548,0,0,0,8.129 ,0.466 ,0.716 ); // 6
		a.og('green', -0.522,1.084,-44.893,-10.558,0,0,0.637 ,0.1 ,5.305 ); // bride
		a.og('ice', 0,0.697,-66.702,0,0,0,1.139 ,0.1 ,4.57 ); // 18 animatin
		a.og('ice', 0,0.697,-69.935,0,0,0,7.527 ,0.1 ,1.547 ); // 19 rotate animatin
		a.og('ice', 0,0.697,-71.482,0,0,0,7.527 ,0.1 ,1.547 ); // 20 reverse rotate animatin
		a.og('ice', 0,0.697,-73.008,0,0,0,7.527 ,0.1 ,1.547 ); // 21 rotate animatin
		a.og('ice', 3.793,0.697,-75.656,0,0,0,4.855 ,0.1 ,2.926 ); // landig
		a.og('ice', 5.607,0.697,-78.455,0,0,0,4.855 ,0.1 ,2.926 );
		a.og('ice', 7.256,0.697,-79.999,0,0,0,3.255 ,0.1 ,2.926 );
		a.og('ice', 9.139,0.697,-82.286,0,0,0,3.091 ,0.1 ,3.847 );
		a.og('ice', 10,0.697,-91.056,0,0,0,1 ,0.1 ,13.896 ); // 26 magc
		a.og('ice', 9.665,0.697,-97.364,0,0,0,3.091 ,0.1 ,3.847 ); // 27 rotae
		a.og('ice', 9.086,0.697,-100.554,-14.093,0,0,3.091 ,0.1 ,3.847 );
		a.og('ice', 7.892,0.697,-103.631,-27.17,0,0,3.091 ,0.1 ,3.847 );
		a.og('ice', 5.98,0.697,-106.205,-47.754,0,0,3.091 ,0.1 ,3.847 ); // 0
		a.og('ice', 3.961,0.697,-108.319,-40.413,0,0,3.091 ,0.1 ,3.847 );
		a.og('ice', 2.512,0.697,-109.973,-34.545,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.972,0.697,-110.759,-29.401,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.675,0.697,-111.413,-20.016,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.413,0.697,-112.132,-12.384,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.188,0.697,-113.015,-8.962,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.066,0.697,-113.788,0,0,0,3.091 ,0.1 ,1.033 );
		a.og('ice', 1.066,0.697,-117.291,0,0,0,2.086 ,0.1 ,6.939 );
		a.og('green', 6.525,0.829,-105.415,-40.532,0,0,0.219 ,0.871 ,6.339 );
		a.og('green', 2.675,0.829,-110.779,-29.415,0,0,0.219 ,0.871 ,6.339 ); // 0
		a.og('green', 1.066,0.829,-117.183,0,0,0,0.219 ,0.871 ,6.339 );
		a.og('ice', 1.665,0.697,-122.903,0,0,0,0.855 ,0.1 ,6.339 );
		a.og('ice', 2.453,0.697,-128.923,14.926,0,0,0.855 ,0.1 ,6.339 );
		a.og('ice', 2.684,0.697,-134.569,-11.914,0,0,0.855 ,0.1 ,6.339 );
		a.og('fire', 1.517,0.697,-140.921,-11.914,0,0,0.623 ,0.1 ,6.339 ); // 45 spin sidewas
		a.og('ice', 0.815,0.697,-140.72,-11.914,0,0,0.5 ,0.1 ,12.797 );
		a.og('ice', -0.322,0.697,-148.422,5.503,0,0,0.5 ,0.1 ,3.121 );
		a.og('ice', 0.159,0.697,-153.899,-5.829,0,0,0.5 ,0.1 ,4 );
		a.og('ice', -0.447,0.697,-150.854,-5.829,0,0,0.5 ,0.1 ,4 );
		a.og('ice', -0.503,0.697,-153.928,5.503,0,0,0.5 ,0.1 ,4 ); // 0
		a.og('ice', 0.075,0.697,-150.802,5.503,0,0,0.5 ,0.1 ,4 )

		a.og('fire', -0.263,0.785,-158.033,-5.829,3.869,0,1.111 ,0.1 ,4.379 );
		a.og('fire', -0.029,1.051,-162.016,12.078,3.682,1.189,1.111 ,0.1 ,4.379 );
		a.og('ice', 1.609,0.917,-164.008,12.078,3.682,1.189,1.111 ,0.1 ,4.379 );
		a.og('ice', 1.772,1.188,-168.058,-7.356,3.868,-0.103,1.111 ,0.1 ,4.379 ); // 5
		a.og('ice', 1.524,1.311,-172.337,0,0,0,1.111 ,0.1 ,4.379 );
		a.og('ice', 1.524,1.311,-175.681,0,0,0,0 ,0.1 ,3.0 ); // 57 shrik
		a.og('ice', 1.524,1.311,-178.227,0,0,0,0 ,0.1 ,3.241 ); // 8
		a.og('ice', 1.225,1.311,-181.095,0,0,0,0 ,0.1 ,3.241 ); // 9
		a.og('ice', 0.788,1.324,-183.79,0,0,0,0.675 ,0.1 ,3.241 );
		a.og('ice', 0.788,1.324,-186.906,0,0,0,1.567 ,0.1 ,3.449 );
		a.og('ice', 0.788,1.324,-191.227,0,0,0,3.084 ,0.1 ,5.246 ); // FINIH


		a.og_tree(0.0, 0.786, -12);
		a.og_tree(1.0, 0.786, -21);
		a.og_tree(1.3, 1.200, -54);
		a.og_tree(9.139,1.397,-82.286);


		a.og_end(-0.788, 1.424, -191.227, 0);
		
		this.number = 0.0;
		this.number2 = 0.0;
		this.number3 = 0.0;
		this.number4 = 0.0;
		
	},
	post: function() {
		cc.set_monkey("speed", 0.2);
		cc.set_monkey("steer", 0.03);
		cc.refresh();
	},
    section_id: 0,
    section_update: function() {
    },
    reset: function() {
        this.section_id = 0;
		cleanup.run(false);
		this.init();
    },
    physics_update: function() {},
    render_update: function() {
    	iv(player, scene);
    }
}

function iv(box, scene) {
	if (box.position.z < -54) {
		scene.getMeshByName("P18").position.x += Math.sin(map.number) / 10 * 0.5;
		map.number += 0.1 * 0.5;
	}
	if (box.position.z <  -63) {
		scene.getMeshByName("P19").rotation.y += Math.sin(map.number) / 10 * 0.5;
		scene.getMeshByName("P20").rotation.y += Math.sin(map.number) / 10 * 0.5;
		scene.getMeshByName("P21").rotation.y += Math.sin(map.number) / 10 * 0.5;
	}
	if (box.position.z < -76) {
		scene.getMeshByName("P26").position.x = Math.sin(map.number) / 1 - 10;
		scene.getMeshByName("P27").rotation.y = Math.sin(map.number) / 10;
	}
	if (box.position.z < -138) {
		scene.getMeshByName("P45").rotation.z += 0.2 * 0.5;
		scene.getMeshByName("P45").position.x -= 0.1 * 0.5;
	}
	if (box.position.z < -172) {
		scene.getMeshByName("P57").scaling = new BABYLON.Vector3(Math.sin(map.number2),0.1,3);
		map.number2 += 0.1 * 0.5;
	}
	if (box.position.z < -175) {
		scene.getMeshByName("P58").scaling = new BABYLON.Vector3(Math.sin(map.number3),0.1,3);
		map.number3 += 0.1 * 0.5;
	}
	if (box.position.z < -178) {
		scene.getMeshByName("P59").scaling = new BABYLON.Vector3(Math.sin(map.number4),0.1,3);
		map.number4 += 0.1 * 0.5;
	}
}

