var map = {
    title: "Glitchy Dodo",
    song: "env2",
    maker: "heck",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([8.92028, -2.47972, -121.92972]);
        a.e([57.17035, -2.47965, -123.20965]);
        a.p([16.64049, 0.50049, -12.21951], [0, 0, 0], [2, 38.98, 27.18], "000000,1.0", 1000.0, 0, 0.6, false, false);
        a.p([-16.61, 0.5, -21], [0, 0, 0], [2, 38.98, 43.16], "000000,1.0", 1000.0, 0, 0.6, false, false);
        a.p([0.00007000000000000001, 5.830069999999999, -42.369930000000004], [0, -1.57, 0], [202, 0.74, 60.5], "000000,1.0", 0, 0, 0.6, false, false);
        a.p([0.00014000000000000001, 0.00014000000000000001, -7.65986], [0, 0, 0], [2, 0.74, 16.4], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([0.00021, 0.00021, -81.07979], [0, 0, 0], [2, 0.74, 16.52], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([0.00028000000000000003, 0.00028000000000000003, -34.43972], [0, 0, 0], [2.62, 0.74, 16.4], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([45.36035, 1.08035, -43.89965], [-0.79, 0, -1.57], [2.62, 0.74, 34.42], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([44.37042, 0.00042, -45.099579999999996], [-0.79, 0, 0], [2.62, 0.74, 34.42], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([15.90049, 0.00049, -33.59951], [-1.57, 0, 0], [2.62, 0.74, 34.42], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([16.99, 1.06, -35.18], [-1.57, 0, -1.57], [2.62, 0.74, 32.24], "1a1a1a", 0, 0, 0.6, false, false);
        a.p([1.31007, 0.92007, -6.0999300000000005], [0, 0, -1.57], [2, 0.74, 16.4], "1a1a1a,0.0", 0, 0, 0.6, false, false);
        a.p([-1.3998599999999999, 0.92014, -6.09986], [0, 0, -1.57], [2, 0.74, 16.4], "1a1a1a,0.0", 0, 0, 0.6, false, false);
        a.p([47.570209999999996, 0.48021, -106.14979], [0, 0, 0], [2, 0.74, 23.28], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-8.33972, 0.05028, -57.77972], [0, 0, 0], [2, 0.74, 30.14], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([8.32035, 0.05035, -57.779650000000004], [0, 0, 0], [2, 0.74, 30.14], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([54.02042, 0.48042, -101.77958000000001], [-1.57, 0, 0], [4.66, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-2.0895099999999998, 0.48049, -92.80950999999999], [0, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([52.61, 0.48, -93.05], [0, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-4.61993, 0.48007, -95.40993], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-0.44986, 0.48014, -101.16986000000001], [-1.57, 0, 0], [4.66, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-7.14979, 0.48021, -100.31979], [0, 0, 0], [2, 0.74, 11.52], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([50.13028, 0.48028, -95.52972], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([51.75035, 0.48034999999999994, -110.02965], [-1.57, 0, 0], [4.66, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-4.6795800000000005, 0.48042, -106.87958], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([2.08049, 0.48049, -100.87951], [0, 0, 0], [2, 0.74, 23.28], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([-2.2, 0.48, -111.66], [0, 0, 0], [2, 0.74, 11.52], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([58.41007, 0.48007, -101.39993], [0, 0, 0], [2, 0.74, 23.28], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([50.130140000000004, 0.48014, -116.73986000000001], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([4.97021, 0.48021, -111.53979], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.p([0.41028, 0.48028, -116.39972], [-1.57, 0, 0], [2, 0.74, 6.98], "1f1f1f", 1000.0, 0, 0.6, false, false);
        a.c([-6.089650000000001, 0.68035, -49.62965], "1f1f1f,0.5");
        a.c([1.95042, 0.68042, -56.11958], "1f1f1f,0.5");
        a.c([-0.61951, 0.6804899999999999, -56.11951], "1f1f1f,0.5");
        a.c([0.62, 0.6799999999999999, -56.12], "1f1f1f,0.5");
        a.c([50.68006999999999, 0.68007, -61.23993], "1f1f1f,0.5");
        a.c([51.97014, 0.68014, -61.23986], "1f1f1f,0.5");
        a.c([-3.06979, 0.68021, -63.37979], "1f1f1f,0.5");
        a.c([-2.24972, 0.68028, -63.37972], "1f1f1f,0.5");
        a.c([-1.49965, 0.68035, -63.37965], "1f1f1f,0.5");
        a.c([-4.93958, 0.68042, -59.209579999999995], "1f1f1f,0.5");
        a.c([3.8504899999999997, 0.6804899999999999, -59.20951], "1f1f1f,0.5");
        a.c([4.51, 0.6799999999999999, -59.21], "1f1f1f,0.5");
        a.c([5.250069999999999, 0.68007, -59.20993000000001], "1f1f1f,0.5");
        a.c([5.82014, 0.68014, -59.20986], "1f1f1f,0.5");
        a.c([6.6502099999999995, 0.68021, -59.209790000000005], "1f1f1f,0.5");
        a.c([54.530280000000005, 0.68028, -61.23972], "1f1f1f,0.5");
        a.c([53.28035, 0.68035, -61.239650000000005], "1f1f1f,0.5");
        a.c([55.860420000000005, 0.68042, -61.23958], "1f1f1f,0.5");
        a.c([61.58049, 0.6804899999999999, -79.25951], "1f1f1f,0.5");
        a.c([59, 0.6799999999999999, -66.3], "1f1f1f,0.5");
        a.c([60.240069999999996, 0.68007, -66.29993], "1f1f1f,0.5");
        a.c([-4.15986, 0.68014, -63.37986], "1f1f1f,0.5");
        a.c([-4.96979, 0.68021, -63.37979], "1f1f1f,0.5");
        a.c([-5.71972, 0.68028, -63.37972], "1f1f1f,0.5");
        a.c([-6.629650000000001, 0.68035, -63.37965], "1f1f1f,0.5");
        a.c([3.34042, 0.68042, -52.709579999999995], "1f1f1f,0.5");
        a.c([4.25049, 0.6804899999999999, -52.70951], "1f1f1f,0.5");
        a.c([5, 0.6799999999999999, -52.71], "1f1f1f,0.5");
        a.c([5.820069999999999, 0.68007, -52.70993000000001], "1f1f1f,0.5");
        a.c([6.57014, 0.68014, -52.70986], "1f1f1f,0.5");
        a.c([-0.54979, 0.68021, -49.64979], "1f1f1f,0.5");
        a.c([-1.29972, 0.68028, -49.649719999999995], "1f1f1f,0.5");
        a.c([-2.1096500000000002, 0.68035, -49.64965], "1f1f1f,0.5");
        a.c([-2.8595800000000002, 0.68042, -49.64957999999999], "1f1f1f,0.5");
        a.c([-3.7695100000000004, 0.6804899999999999, -49.64951], "1f1f1f,0.5");
        a.c([57.69, 0.6799999999999999, -66.3], "1f1f1f,0.5");
        a.c([1.35007, 0.68007, -22.75993], "1f1f1f,0.5");
        a.c([56.40014, 0.68014, -66.29986], "1f1f1f,0.5");
        a.c([-0.50979, 0.68021, -18.07979], "1f1f1f,0.5");
        a.c([46.54028, 0.68028, -72.40972], "1f1f1f,0.5");
        a.c([-1.93965, 0.68035, -56.11965], "1f1f1f,0.5");
        a.c([47.830420000000004, 0.68042, -72.40957999999999], "1f1f1f,0.5");
        a.c([-3.2295100000000003, 0.6804899999999999, -56.11951], "1f1f1f,0.5");
        a.c([50.38, 0.6799999999999999, -72.41], "1f1f1f,0.5");
        a.c([3.20007, 0.68007, -63.76993], "1f1f1f,0.5");
        a.c([0.7401399999999999, 0.68014, -63.76986], "1f1f1f,0.5");
        a.c([1.86021, 0.68021, -63.76979], "1f1f1f,0.5");
        a.c([2.44028, 0.68028, -63.76972], "1f1f1f,0.5");
        a.c([1.2703499999999999, 0.68035, -63.76965], "1f1f1f,0.5");
        a.c([2.6904199999999996, 0.68042, -17.05958], "1f1f1f,0.5");
        a.c([-3.77951, 0.6804899999999999, -21.12951], "1f1f1f,0.5");
        a.c([49.14, 0.6799999999999999, -72.41], "1f1f1f,0.5");
        a.c([2.9900700000000002, 0.68007, -19.879929999999998], "1f1f1f,0.5");
        a.c([51.72014, 0.68014, -72.40986], "1f1f1f,0.5");
        a.c([2.36021, 0.68021, -24.429789999999997], "1f1f1f,0.5");
        a.c([3.79028, 0.68028, -24.429720000000003], "1f1f1f,0.5");
        a.c([57.54035, 0.68035, -76.06965], "1f1f1f,0.5");
        a.c([54.970420000000004, 0.68042, -76.06958], "1f1f1f,0.5");
        a.c([56.21049, 0.6804899999999999, -76.06951], "1f1f1f,0.5");
        a.c([53.66, 0.6799999999999999, -76.07], "1f1f1f,0.5");
        a.c([52.37007, 0.68007, -76.06993], "1f1f1f,0.5");
        a.p([0.00014000000000000001, 0.00014000000000000001, -106.54986000000001], [0, 0, 0], [18.58, 0.74, 34.42], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([54.42021, 0.00021, -104.68978999999999], [0, 0, 0], [18.58, 0.74, 30.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([0.00028000000000000003, 0.00028000000000000003, -57.70972], [0, 0, 0], [18.58, 0.74, 30.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([54.42035, 0.00035000000000000005, -70.91965], [0, 0, 0], [18.58, 0.74, 30.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([54.42042000000001, 0.00042, -77.09958], [0, 0, 0], [1.2, 0.74, 30.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([6.15049, 1.5604900000000002, -120.15951], [-0.79, 0, -1.57], [3.48, 0.74, 7.04], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([9.03, 1.56, -116.93], [0, 0, -1.57], [3.48, 0.74, 11.2], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([57.15007, 0.00007000000000000001, -117.27993000000001], [0, 0, 0], [6.28, 0.74, 22.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([59.51014, 1.56014, -119.70986], [0.23, 0, 0], [0.66, 3.24, 16.16], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([57.180209999999995, 1.5602099999999999, -126.54978999999999], [0, 0, 0], [6.24, 3.24, 5.34], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([54.420280000000005, 0.040279999999999996, -57.56972], [0, 0, 0], [18.58, 0.74, 3.42], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([55.59035, 1.56035, -122.97965], [-0.29, 0, 0], [0.66, 3.24, 11.22], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([59.960420000000006, 1.56042, -122.62958], [0, 0, 0], [0.66, 3.24, 8.98], "a1a1a1", 0, 0, 0.6, false, false);
        a.p([54.37049, 1.5604900000000002, -123.50950999999999], [0, 0, 0], [0.66, 3.24, 8.98], "a1a1a1", 0, 0, 0.6, false, false);
    },
    post: function() {
        a.u('E0');
        a.u('E1');
        a.u('P2');
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -1.0199300000000004) {
                    a.msg_set("Error 404: Dodo not found. ");
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -13.399930000000001) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -15.039859999999997) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#707070");
                    a.g(null, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -27.41986) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -28.17993) {
                    a.g(null, -0.05, null);
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -31.55993) {
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -37.59978999999999) {
                    a.g(null, 3.0, null);
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('P2', 'y', 1000.0);
                if (PZ < -39.63979) {
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -74.11) {
                    a.msg_set("Err Code: 0x0000d0d0: Dodo slowed down from overheating ");
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -86.49) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -86.81986) {
                    speed = default_speed * 0.2;
                    steer = default_steer * 3.0;
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -120.63986) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -121.87958) {
                    speed = default_speed * 0.0;
                    a.d(1.2, 0.8, 1.2);
                    this.section_id += 1
                }
                break;
            case 13:
                a.mov('E0', 'y', 1.0);
                a.mov('E1', 'y', 1.0);
                if (PZ < -123.77958000000001) {
                    speed = cc.get("speed", null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('E0', [8.92028, -2.47972, -121.92972], [0, 0, 0], [1, 1, 1]);
        a.re('E1', [57.17035, -2.47965, -123.20965], [0, 0, 0], [1, 1, 1]);
        a.re('P0', [16.64049, 0.50049, -12.21951], [0, 0, 0], [2, 38.98, 27.18]);
        a.re('P1', [-16.61, 0.5, -21], [0, 0, 0], [2, 38.98, 43.16]);
        a.re('P2', [0.00007000000000000001, 5.830069999999999, -42.369930000000004], [0, -1.57, 0], [202, 0.74, 60.5]);
        a.re('P3', [0.00014000000000000001, 0.00014000000000000001, -7.65986], [0, 0, 0], [2, 0.74, 16.4]);
        a.re('P4', [0.00021, 0.00021, -81.07979], [0, 0, 0], [2, 0.74, 16.52]);
        a.re('P5', [0.00028000000000000003, 0.00028000000000000003, -34.43972], [0, 0, 0], [2.62, 0.74, 16.4]);
        a.re('P6', [45.36035, 1.08035, -43.89965], [-0.79, 0, -1.57], [2.62, 0.74, 34.42]);
        a.re('P7', [44.37042, 0.00042, -45.099579999999996], [-0.79, 0, 0], [2.62, 0.74, 34.42]);
        a.re('P8', [15.90049, 0.00049, -33.59951], [-1.57, 0, 0], [2.62, 0.74, 34.42]);
        a.re('P9', [16.99, 1.06, -35.18], [-1.57, 0, -1.57], [2.62, 0.74, 32.24]);
        a.re('P10', [1.31007, 0.92007, -6.0999300000000005], [0, 0, -1.57], [2, 0.74, 16.4]);
        a.re('P11', [-1.3998599999999999, 0.92014, -6.09986], [0, 0, -1.57], [2, 0.74, 16.4]);
        a.re('P12', [47.570209999999996, 0.48021, -106.14979], [0, 0, 0], [2, 0.74, 23.28]);
        a.re('P13', [-8.33972, 0.05028, -57.77972], [0, 0, 0], [2, 0.74, 30.14]);
        a.re('P14', [8.32035, 0.05035, -57.779650000000004], [0, 0, 0], [2, 0.74, 30.14]);
        a.re('P15', [54.02042, 0.48042, -101.77958000000001], [-1.57, 0, 0], [4.66, 0.74, 6.98]);
        a.re('P16', [-2.0895099999999998, 0.48049, -92.80950999999999], [0, 0, 0], [2, 0.74, 6.98]);
        a.re('P17', [52.61, 0.48, -93.05], [0, 0, 0], [2, 0.74, 6.98]);
        a.re('P18', [-4.61993, 0.48007, -95.40993], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('P19', [-0.44986, 0.48014, -101.16986000000001], [-1.57, 0, 0], [4.66, 0.74, 6.98]);
        a.re('P20', [-7.14979, 0.48021, -100.31979], [0, 0, 0], [2, 0.74, 11.52]);
        a.re('P21', [50.13028, 0.48028, -95.52972], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('P22', [51.75035, 0.48034999999999994, -110.02965], [-1.57, 0, 0], [4.66, 0.74, 6.98]);
        a.re('P23', [-4.6795800000000005, 0.48042, -106.87958], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('P24', [2.08049, 0.48049, -100.87951], [0, 0, 0], [2, 0.74, 23.28]);
        a.re('P25', [-2.2, 0.48, -111.66], [0, 0, 0], [2, 0.74, 11.52]);
        a.re('P26', [58.41007, 0.48007, -101.39993], [0, 0, 0], [2, 0.74, 23.28]);
        a.re('P27', [50.130140000000004, 0.48014, -116.73986000000001], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('P28', [4.97021, 0.48021, -111.53979], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('P29', [0.41028, 0.48028, -116.39972], [-1.57, 0, 0], [2, 0.74, 6.98]);
        a.re('C0', [-6.089650000000001, 0.68035, -49.62965], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [1.95042, 0.68042, -56.11958], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-0.61951, 0.6804899999999999, -56.11951], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [0.62, 0.6799999999999999, -56.12], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [50.68006999999999, 0.68007, -61.23993], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [51.97014, 0.68014, -61.23986], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [-3.06979, 0.68021, -63.37979], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [-2.24972, 0.68028, -63.37972], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [-1.49965, 0.68035, -63.37965], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [-4.93958, 0.68042, -59.209579999999995], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [3.8504899999999997, 0.6804899999999999, -59.20951], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [4.51, 0.6799999999999999, -59.21], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [5.250069999999999, 0.68007, -59.20993000000001], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [5.82014, 0.68014, -59.20986], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [6.6502099999999995, 0.68021, -59.209790000000005], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [54.530280000000005, 0.68028, -61.23972], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [53.28035, 0.68035, -61.239650000000005], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [55.860420000000005, 0.68042, -61.23958], [0, 0, 0], [2, 2, 2]);
        a.re('C18', [61.58049, 0.6804899999999999, -79.25951], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [59, 0.6799999999999999, -66.3], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [60.240069999999996, 0.68007, -66.29993], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [-4.15986, 0.68014, -63.37986], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [-4.96979, 0.68021, -63.37979], [0, 0, 0], [2, 2, 2]);
        a.re('C23', [-5.71972, 0.68028, -63.37972], [0, 0, 0], [2, 2, 2]);
        a.re('C24', [-6.629650000000001, 0.68035, -63.37965], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [3.34042, 0.68042, -52.709579999999995], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [4.25049, 0.6804899999999999, -52.70951], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [5, 0.6799999999999999, -52.71], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [5.820069999999999, 0.68007, -52.70993000000001], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [6.57014, 0.68014, -52.70986], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [-0.54979, 0.68021, -49.64979], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [-1.29972, 0.68028, -49.649719999999995], [0, 0, 0], [2, 2, 2]);
        a.re('C32', [-2.1096500000000002, 0.68035, -49.64965], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [-2.8595800000000002, 0.68042, -49.64957999999999], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [-3.7695100000000004, 0.6804899999999999, -49.64951], [0, 0, 0], [2, 2, 2]);
        a.re('C35', [57.69, 0.6799999999999999, -66.3], [0, 0, 0], [2, 2, 2]);
        a.re('C36', [1.35007, 0.68007, -22.75993], [0, 0, 0], [2, 2, 2]);
        a.re('C37', [56.40014, 0.68014, -66.29986], [0, 0, 0], [2, 2, 2]);
        a.re('C38', [-0.50979, 0.68021, -18.07979], [0, 0, 0], [2, 2, 2]);
        a.re('C39', [46.54028, 0.68028, -72.40972], [0, 0, 0], [2, 2, 2]);
        a.re('C40', [-1.93965, 0.68035, -56.11965], [0, 0, 0], [2, 2, 2]);
        a.re('C41', [47.830420000000004, 0.68042, -72.40957999999999], [0, 0, 0], [2, 2, 2]);
        a.re('C42', [-3.2295100000000003, 0.6804899999999999, -56.11951], [0, 0, 0], [2, 2, 2]);
        a.re('C43', [50.38, 0.6799999999999999, -72.41], [0, 0, 0], [2, 2, 2]);
        a.re('C44', [3.20007, 0.68007, -63.76993], [0, 0, 0], [2, 2, 2]);
        a.re('C45', [0.7401399999999999, 0.68014, -63.76986], [0, 0, 0], [2, 2, 2]);
        a.re('C46', [1.86021, 0.68021, -63.76979], [0, 0, 0], [2, 2, 2]);
        a.re('C47', [2.44028, 0.68028, -63.76972], [0, 0, 0], [2, 2, 2]);
        a.re('C48', [1.2703499999999999, 0.68035, -63.76965], [0, 0, 0], [2, 2, 2]);
        a.re('C49', [2.6904199999999996, 0.68042, -17.05958], [0, 0, 0], [2, 2, 2]);
        a.re('C50', [-3.77951, 0.6804899999999999, -21.12951], [0, 0, 0], [2, 2, 2]);
        a.re('C51', [49.14, 0.6799999999999999, -72.41], [0, 0, 0], [2, 2, 2]);
        a.re('C52', [2.9900700000000002, 0.68007, -19.879929999999998], [0, 0, 0], [2, 2, 2]);
        a.re('C53', [51.72014, 0.68014, -72.40986], [0, 0, 0], [2, 2, 2]);
        a.re('C54', [2.36021, 0.68021, -24.429789999999997], [0, 0, 0], [2, 2, 2]);
        a.re('C55', [3.79028, 0.68028, -24.429720000000003], [0, 0, 0], [2, 2, 2]);
        a.re('C56', [57.54035, 0.68035, -76.06965], [0, 0, 0], [2, 2, 2]);
        a.re('C57', [54.970420000000004, 0.68042, -76.06958], [0, 0, 0], [2, 2, 2]);
        a.re('C58', [56.21049, 0.6804899999999999, -76.06951], [0, 0, 0], [2, 2, 2]);
        a.re('C59', [53.66, 0.6799999999999999, -76.07], [0, 0, 0], [2, 2, 2]);
        a.re('C60', [52.37007, 0.68007, -76.06993], [0, 0, 0], [2, 2, 2]);
        a.re('P30', [0.00014000000000000001, 0.00014000000000000001, -106.54986000000001], [0, 0, 0], [18.58, 0.74, 34.42]);
        a.re('P31', [54.42021, 0.00021, -104.68978999999999], [0, 0, 0], [18.58, 0.74, 30.22]);
        a.re('P32', [0.00028000000000000003, 0.00028000000000000003, -57.70972], [0, 0, 0], [18.58, 0.74, 30.22]);
        a.re('P33', [54.42035, 0.00035000000000000005, -70.91965], [0, 0, 0], [18.58, 0.74, 30.22]);
        a.re('P34', [54.42042000000001, 0.00042, -77.09958], [0, 0, 0], [1.2, 0.74, 30.22]);
        a.re('P35', [6.15049, 1.5604900000000002, -120.15951], [-0.79, 0, -1.57], [3.48, 0.74, 7.04]);
        a.re('P36', [9.03, 1.56, -116.93], [0, 0, -1.57], [3.48, 0.74, 11.2]);
        a.re('P37', [57.15007, 0.00007000000000000001, -117.27993000000001], [0, 0, 0], [6.28, 0.74, 22.22]);
        a.re('P38', [59.51014, 1.56014, -119.70986], [0.23, 0, 0], [0.66, 3.24, 16.16]);
        a.re('P39', [57.180209999999995, 1.5602099999999999, -126.54978999999999], [0, 0, 0], [6.24, 3.24, 5.34]);
        a.re('P40', [54.420280000000005, 0.040279999999999996, -57.56972], [0, 0, 0], [18.58, 0.74, 3.42]);
        a.re('P41', [55.59035, 1.56035, -122.97965], [-0.29, 0, 0], [0.66, 3.24, 11.22]);
        a.re('P42', [59.960420000000006, 1.56042, -122.62958], [0, 0, 0], [0.66, 3.24, 8.98]);
        a.re('P43', [54.37049, 1.5604900000000002, -123.50950999999999], [0, 0, 0], [0.66, 3.24, 8.98]);
    },
    physics_update: function() {},
    render_update: function() {}
}
