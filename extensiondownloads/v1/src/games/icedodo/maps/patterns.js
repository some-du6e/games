var map = {
    title: "Patterns",
    song: "env2",
    maker: "AnimeFan",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([1.25007, -0.27993, -117.21993], [0, 0, 0], [2, 0.32, 7.72], "1", 0, 0, 0.6, false, false);
        a.p([1.25014, -0.27986, -124.85986000000001], [0, 0, 0], [2, 0.32, 7.72], "1", 0, 0, 0.6, false, false);
        a.p([1.25021, -0.27979, -146.27979], [0, 0, 0], [5.46, 0.72, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([1.25028, -0.27972, -109.62971999999999], [0, 0, 0], [2, 0.32, 7.72], "1", 0, 0, 0.6, false, false);
        a.p([2.98035, -0.27965, -156.03965], [-0.39, 0, 0], [5.46, 0.68, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([7.99042, -0.27958, -163.70958000000002], [-0.75, 0, 0], [5.46, 0.68, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([1.25049, -0.27951, -132.19951], [0, 0, 0], [2, 0.32, 7.72], "1", 0, 0, 0.6, false, false);
        a.p([1.25, -0.28, -139.74], [0, 0, 0], [2, 0.32, 7.72], "1", 0, 0, 0.6, false, false);
        a.p([12.80007, -0.27993, -170.66993], [-0.51, 0, 0], [5.46, 0.68, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([14.36014, -0.27986, -178.24986], [0.03, 0, 0], [5.46, 0.68, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([12.66021, -0.27979, -185.89979], [0.3, 0, 0], [5.46, 0.68, 10.46], "1", 0, 0, 0.6, false, false);
        a.p([10.20028, -1.09972, -266.14972], [0, 0, 0], [4.68, 0.32, 26.68], "1", 0, 0, 0.6, false, false);
        a.p([10.20035, -1.09965, -221.16965], [0, 0, 0], [4.68, 0.32, 26.68], "1", 0, 0, 0.6, false, false);
        a.p([1.28, -0.41, -59.45], [0, 0, 0], [0.76, 0.7, 16.1], "2.0", 0, 0, 0.6, false, false);
        a.p([1.28007, -0.40993, -98.91993000000001], [0, 0, 0], [0.76, 0.7, 16.1], "2.0", 0, 0, 0.6, false, false);
        a.p([1.28014, -0.40985999999999995, -39.94986], [0, 0, 0], [0.76, 0.7, 16.1], "2.0", 0, 0, 0.6, false, false);
        a.p([1.2802099999999998, -0.40979, -78.10979], [0, 0, 0], [0.76, 0.7, 16.1], "2.0", 0, 0, 0.6, false, false);
        a.p([1.25028, -0.27972, -48.609719999999996], [0, 0, 0], [2, 0.32, 7.72], "2.0", 0, 0, 0.6, false, false);
        a.p([1.25035, -0.27965, -68.40965], [0, 0, 0], [2, 0.32, 7.72], "2.0", 0, 0, 0.6, false, false);
        a.p([1.25042, -0.27958, -88.97958], [0, 0, 0], [2, 0.32, 7.72], "2.0", 0, 0, 0.6, false, false);
        a.p([1.25049, -0.15951, -28.89951], [0, 0, 0], [2, 0.32, 7.72], "2.0", 0, 0, 0.6, false, false);
        a.p([0.76, 0, -12.1], [0, 0, 0], [1.38, 2, 2], "5.0", 0, 0, 0.6, false, false);
        a.p([1.99007, -0.15993000000000002, -4.83993], [-0.44, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([-1.02986, -0.15986, -4.34986], [0.32, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([-0.82979, -0.15979, -10.649790000000001], [-0.44, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([2.3902799999999997, -0.15972, -10.42972], [0.32, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([0.00035000000000000005, -0.15965, 1.71035], [0, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([0.16042, 0.00042, -2.6395800000000005], [0, 0, 0], [1.38, 2, 2], "5.0", 0, 0, 0.6, false, false);
        a.p([-0.10951000000000001, -0.15951, -16.619510000000002], [0.32, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([2.09, -0.16, -16.66], [-0.44, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([-0.18993, -0.15993000000000002, -22.20993], [-0.44, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([2.58014, -0.15986, -22.09986], [0.32, 0, 0], [2, 0.32, 7.72], "5.0", 0, 0, 0.6, false, false);
        a.p([1.12021, 0.00021, -22.64979], [0, 0, 0], [1.38, 2, 2], "5.0", 0, 0, 0.6, false, false);
        a.c([1.0103499999999999, 0.56035, -155.63965], true);
        a.c([5.25042, 0.5604199999999999, -158.28958], true);
        a.c([6.700489999999999, 0.5604899999999999, -165.34951], true);
        a.c([13.54, 0.5599999999999999, -170.81], true);
        a.c([13.54007, 0.56007, -180.52992999999998], true);
        a.c([13.54014, 0.56014, -186.52986], true);
        a.c([4.2702100000000005, -0.39979, -201.32979], true);
        a.c([10.01028, -0.14971999999999996, -205.91972], true);
        a.c([10.010349999999999, -0.24965000000000004, -194.98965], true);
        a.c([15.52042, -0.33958, -201.32958], true);
        a.c([10.010489999999999, -0.14950999999999992, -250.63951], true);
        a.c([10.01, -0.15000000000000002, -239.13], true);
        a.c([15.52007, -0.33992999999999995, -245.24992999999998], true);
        a.c([4.2701400000000005, -0.3998600000000001, -244.73986000000002], true);
        a.p([10.090209999999999, -1.7297900000000002, -200.30979], [0, 0, 0], [22.18, 1.86, 18.68], "1", 0, 0, 0.6, false, false);
        a.p([10.09028, -1.7297200000000001, -243.92972], [0, 0, 0], [22.18, 1.86, 18.68], "1", 0, 0, 0.6, false, false);
        a.e([10.100349999999999, -0.17965, -269.59965]);
    },
    post: function() {
        a.u('P13');
        a.u('P14');
        a.u('P15');
        a.u('P16');
        cc.set_monkey("speed", default_speed * 0.7);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -30.559720000000002) {
                    speed = default_speed * 1.0;
                    this.section_id += 1
                }
                break;
            case 1:
                a.rot('P15', 'z', 1.34);
                if (PZ < -50.01972000000001) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -52.24965) {
                    speed = default_speed * 1.0;
                    this.section_id += 1
                }
                break;
            case 3:
                a.rot('P13', 'z', -1.34);
                if (PZ < -71.70965) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -73.58958) {
                    speed = default_speed * 1.0;
                    this.section_id += 1
                }
                break;
            case 5:
                a.rot('P16', 'z', 1.34);
                if (PZ < -93.04958) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -94.75950999999999) {
                    speed = default_speed * 1.0;
                    this.section_id += 1
                }
                break;
            case 7:
                a.rot('P14', 'z', -1.34);
                if (PZ < -114.21951) {
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -114.97993) {
                    camera.maxZ = 15.0;
                    speed = default_speed * 0.6;
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -145.89993) {
                    camera.maxZ = cc.get("camera.maxZ", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -146.67986) {
                    camera.maxZ = 15.0;
                    speed = default_speed * 0.6;
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -177.59986) {
                    camera.maxZ = cc.get("camera.maxZ", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -178.27979) {
                    camera.maxZ = 15.0;
                    speed = default_speed * 0.6;
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -205.81979) {
                    camera.maxZ = cc.get("camera.maxZ", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -208.41958) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#0d4e4d");
                    light.diffuse = new BABYLON.Color3.FromHexString("#0d4e4d");
                    light.groundColor = new BABYLON.Color3.FromHexString("#0d4e4d");
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -234.35958) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -235.6) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#5c0e0e");
                    light.diffuse = new BABYLON.Color3.FromHexString("#5c0e0e");
                    light.groundColor = new BABYLON.Color3.FromHexString("#5c0e0e");
                    this.section_id += 1
                }
                break;
            case 17:
                if (PZ < -261.54) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -263.36951) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#0d4e4d");
                    light.diffuse = new BABYLON.Color3.FromHexString("#0d4e4d");
                    light.groundColor = new BABYLON.Color3.FromHexString("#0d4e4d");
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -289.30951000000005) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [1.25007, -0.27993, -117.21993], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P1', [1.25014, -0.27986, -124.85986000000001], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P2', [1.25021, -0.27979, -146.27979], [0, 0, 0], [5.46, 0.72, 10.46]);
        a.re('P3', [1.25028, -0.27972, -109.62971999999999], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P4', [2.98035, -0.27965, -156.03965], [-0.39, 0, 0], [5.46, 0.68, 10.46]);
        a.re('P5', [7.99042, -0.27958, -163.70958000000002], [-0.75, 0, 0], [5.46, 0.68, 10.46]);
        a.re('P6', [1.25049, -0.27951, -132.19951], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P7', [1.25, -0.28, -139.74], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P8', [12.80007, -0.27993, -170.66993], [-0.51, 0, 0], [5.46, 0.68, 10.46]);
        a.re('P9', [14.36014, -0.27986, -178.24986], [0.03, 0, 0], [5.46, 0.68, 10.46]);
        a.re('P10', [12.66021, -0.27979, -185.89979], [0.3, 0, 0], [5.46, 0.68, 10.46]);
        a.re('P11', [10.20028, -1.09972, -266.14972], [0, 0, 0], [4.68, 0.32, 26.68]);
        a.re('P12', [10.20035, -1.09965, -221.16965], [0, 0, 0], [4.68, 0.32, 26.68]);
        a.re('P13', [1.28, -0.41, -59.45], [0, 0, 0], [0.76, 0.7, 16.1]);
        a.re('P14', [1.28007, -0.40993, -98.91993000000001], [0, 0, 0], [0.76, 0.7, 16.1]);
        a.re('P15', [1.28014, -0.40985999999999995, -39.94986], [0, 0, 0], [0.76, 0.7, 16.1]);
        a.re('P16', [1.2802099999999998, -0.40979, -78.10979], [0, 0, 0], [0.76, 0.7, 16.1]);
        a.re('P17', [1.25028, -0.27972, -48.609719999999996], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P18', [1.25035, -0.27965, -68.40965], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P19', [1.25042, -0.27958, -88.97958], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P20', [1.25049, -0.15951, -28.89951], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P21', [0.76, 0, -12.1], [0, 0, 0], [1.38, 2, 2]);
        a.re('P22', [1.99007, -0.15993000000000002, -4.83993], [-0.44, 0, 0], [2, 0.32, 7.72]);
        a.re('P23', [-1.02986, -0.15986, -4.34986], [0.32, 0, 0], [2, 0.32, 7.72]);
        a.re('P24', [-0.82979, -0.15979, -10.649790000000001], [-0.44, 0, 0], [2, 0.32, 7.72]);
        a.re('P25', [2.3902799999999997, -0.15972, -10.42972], [0.32, 0, 0], [2, 0.32, 7.72]);
        a.re('P26', [0.00035000000000000005, -0.15965, 1.71035], [0, 0, 0], [2, 0.32, 7.72]);
        a.re('P27', [0.16042, 0.00042, -2.6395800000000005], [0, 0, 0], [1.38, 2, 2]);
        a.re('P28', [-0.10951000000000001, -0.15951, -16.619510000000002], [0.32, 0, 0], [2, 0.32, 7.72]);
        a.re('P29', [2.09, -0.16, -16.66], [-0.44, 0, 0], [2, 0.32, 7.72]);
        a.re('P30', [-0.18993, -0.15993000000000002, -22.20993], [-0.44, 0, 0], [2, 0.32, 7.72]);
        a.re('P31', [2.58014, -0.15986, -22.09986], [0.32, 0, 0], [2, 0.32, 7.72]);
        a.re('P32', [1.12021, 0.00021, -22.64979], [0, 0, 0], [1.38, 2, 2]);
        a.re('C0', [1.0103499999999999, 0.56035, -155.63965], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [5.25042, 0.5604199999999999, -158.28958], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [6.700489999999999, 0.5604899999999999, -165.34951], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [13.54, 0.5599999999999999, -170.81], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [13.54007, 0.56007, -180.52992999999998], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [13.54014, 0.56014, -186.52986], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [4.2702100000000005, -0.39979, -201.32979], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [10.01028, -0.14971999999999996, -205.91972], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [10.010349999999999, -0.24965000000000004, -194.98965], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [15.52042, -0.33958, -201.32958], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [10.010489999999999, -0.14950999999999992, -250.63951], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [10.01, -0.15000000000000002, -239.13], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [15.52007, -0.33992999999999995, -245.24992999999998], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [4.2701400000000005, -0.3998600000000001, -244.73986000000002], [0, 0, 0], [2, 2, 2]);
        a.re('P33', [10.090209999999999, -1.7297900000000002, -200.30979], [0, 0, 0], [22.18, 1.86, 18.68]);
        a.re('P34', [10.09028, -1.7297200000000001, -243.92972], [0, 0, 0], [22.18, 1.86, 18.68]);
        a.re('E0', [10.100349999999999, -0.17965, -269.59965], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
