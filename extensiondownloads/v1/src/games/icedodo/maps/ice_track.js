var map = {
    title: "Ice Track",
    song: "env2",
    maker: "Thero",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([28, 7.0000599999999995, -237.5]);
        a.y([27.62, 2.00012, -45.75], [0, -1.57, 0], [2, 13.8, 2], 2.0, 0);
        a.y([28, -1.99982, -136.02], [0, -1.57, 0], [3, 46.5, 3], 1, 0);
        a.c([28, 0.6003, -135], true);
        a.c([30, 0.6, -135], true);
        a.c([30.73, 6.600059999999999, -167.32], true);
        a.c([32, 0.60012, -135], true);
        a.c([24, 0.6001799999999999, -135], true);
        a.c([28, 0.60024, -135], true);
        a.c([23.17, 6.600299999999999, -164.7], true);
        a.c([24.37, 6.6, -172.62], true);
        a.c([29.82, 6.600059999999999, -178.11], true);
        a.c([23.98, 6.600119999999999, -183.41], true);
        a.c([28.35, 6.60018, -198.3], true);
        a.c([26, 6.80024, -210], true);
        a.c([34, 6.600299999999999, -185.7], true);
        a.c([30, 6.8, -220], true);
        a.c([26, 0.6000599999999999, -135], true);
        a.c([21.01, 6.600119999999999, -191.79], true);
        a.c([31.72, 6.60018, -193.69], true);
        a.c([28, 6.80024, -230], true);
        a.p([28, 5.000299999999999, -220], [0, 0, 0], [6, 2, 40], 2.0, 0);
        a.p([28, -0.75, -100], [0, 0, 0], [20, 2, 100], 2.0, 0);
        a.c([30, 6.600059999999999, -210], false);
        a.c([29, 6.600119999999999, -210], false);
        a.c([23.34, 0.6001799999999999, -119.84], false);
        a.c([30.46, 0.60024, -115.05], false);
        a.c([30.46, 0.6003, -115.05], false);
        a.c([26, 6.6, -220], false);
        a.c([29, 6.600059999999999, -230], false);
        a.c([30, 6.600119999999999, -230], false);
        a.c([26, 6.60018, -230], false);
        a.c([27, 6.600239999999999, -210], false);
        a.c([29, 6.600299999999999, -220], false);
        a.c([27, 6.6, -220], false);
        a.c([27.91, 6.600059999999999, -210], false);
        a.c([28, 6.600119999999999, -220], false);
        a.c([27, 6.60018, -230], false);
        a.c([27, 6.600239999999999, -220], false);
        a.c([27.91, 0.6003, -90.53], false);
        a.c([23.82, 0.6, -87.51], false);
        a.c([31.01, 0.6000599999999999, -84.85], false);
        a.c([28, 0.60012, -76.86], false);
        a.c([20, 0.6001799999999999, -73.57], false);
        a.c([30.66, 0.60024, -73.75], false);
        a.c([36.88, 0.6003, -82.28], false);
        a.c([32.17, 0.6, -93.37], false);
        a.c([24.98, 0.6000599999999999, -71.53], false);
        a.c([35.19, 0.60012, -71.18], false);
        a.c([27.02, 0.6001799999999999, -67.71], false);
        a.c([22.93, 0.60024, -63.09], false);
        a.c([28.79, 0.6003, -60.08], false);
        a.c([35.37, 0.6, -57.59], false);
        a.c([22.22, 0.6000599999999999, -109.46], false);
        a.p([14.75, -0.9997, -19], [-1.57, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.c([9, -0.6, -18], true);
        a.c([-0.5, -0.59994, -4], true);
        a.c([4.15, -0.5998800000000001, -14], true);
        a.c([0.95, -0.5998199999999999, -9], true);
        a.c([14.5, -0.59976, -19.19], true);
        a.c([22.29, -0.5997, -21.27], true);
        a.c([26.39, -0.6, -25.1], true);
        a.p([0, -0.99994, -4], [0, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.p([7.35, -0.99988, -17], [-1.05, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.p([26.99, -0.99982, -26.31], [-0.52, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.p([2, -0.99976, -11.5], [-0.52, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.y([34.98, -0.9997, -64.3], [0, 0, 0], [10, 6, 10], 1, 0);
        a.p([22, -1, -21], [-1.05, 0, 0], [2, 0.6, 8.4], 1, 0);
        a.p([28, 5.0000599999999995, -180], [0, 0, 0], [20, 2, 40], 1, 0);
        a.y([21.48, -0.99988, -80.68], [0, 0, 0], [10, 6, 10], 1, 0);
        a.y([33.05, -0.99982, -100], [0, 0, 0], [10, 6, 10], 1, 0);
        a.y([38, -0.99976, -135], [0, 0, 0], [10, 6, 10], 1, 0);
        a.y([22.95, -0.9997, -100], [0, 0, 0], [10, 6, 10], 1, 0);
        a.y([18, 0, -135], [0, 0, 0], [10, 6, 10], 1, 0);
        a.p([28, 0.00012, -124.86], [0, 0, 0], [0.6, 0.6, 13.8], 1, 0);
    },
    post: function() {
        a.m('Y1').unfreezeWorldMatrix();
        a.m('C0').unfreezeWorldMatrix();
        a.m('C1').unfreezeWorldMatrix();
        a.m('C2').unfreezeWorldMatrix();
        a.m('C3').unfreezeWorldMatrix();
        a.m('C4').unfreezeWorldMatrix();
        a.m('C5').unfreezeWorldMatrix();
        a.m('C6').unfreezeWorldMatrix();
        a.m('C7').unfreezeWorldMatrix();
        a.m('C8').unfreezeWorldMatrix();
        a.m('C9').unfreezeWorldMatrix();
        a.m('C10').unfreezeWorldMatrix();
        a.m('C11').unfreezeWorldMatrix();
        a.m('C12').unfreezeWorldMatrix();
        a.m('C13').unfreezeWorldMatrix();
        a.m('C14').unfreezeWorldMatrix();
        a.m('C15').unfreezeWorldMatrix();
        a.m('C16').unfreezeWorldMatrix();
        a.m('C17').unfreezeWorldMatrix();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -0.5999999999999996) {
                    speed = default_speed * 0.5;
                    steer = default_steer * 0.75;
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -30.200000000000003) {
                    speed = default_speed;
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -30.559999999999995) {
                    a.g(0, -1.0, 0);
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -36.04) {
                    a.g(0, 1, 0);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -54.44) {
                    speed = default_speed * 0.5;
                    steer = default_steer * -0.2;
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -92.18) {
                    speed = default_speed;
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -121.78000000000002) {
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('Y1', 'y', 0.3);
                if (PZ < -169.38000000000002) {
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -169.48000000000002) {
                    speed = default_speed * 0.8;
                    steer = default_steer * 0.5;
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -199.26) {
                    speed = default_speed;
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('Y0', [27.62, 2.00012, -45.75], [0, -1.57, 0], [2, 13.8, 2]);
        a.re('Y1', [28, -1.99982, -136.02], [0, -1.57, 0], [3, 46.5, 3]);
        a.re('C0', [28, 0.6003, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [30, 0.6, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [30.73, 6.600059999999999, -167.32], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [32, 0.60012, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [24, 0.6001799999999999, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [28, 0.60024, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [23.17, 6.600299999999999, -164.7], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [24.37, 6.6, -172.62], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [29.82, 6.600059999999999, -178.11], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [23.98, 6.600119999999999, -183.41], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [28.35, 6.60018, -198.3], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [26, 6.80024, -210], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [34, 6.600299999999999, -185.7], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [30, 6.8, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [26, 0.6000599999999999, -135], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [21.01, 6.600119999999999, -191.79], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [31.72, 6.60018, -193.69], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [28, 6.80024, -230], [0, 0, 0], [2, 2, 2]);
        a.re('P0', [28, 5.000299999999999, -220], [0, 0, 0], [6, 2, 40]);
        a.re('P1', [28, -0.75, -100], [0, 0, 0], [20, 2, 100]);
        a.re('C18', [30, 6.600059999999999, -210], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [29, 6.600119999999999, -210], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [23.34, 0.6001799999999999, -119.84], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [30.46, 0.60024, -115.05], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [30.46, 0.6003, -115.05], [0, 0, 0], [2, 2, 2]);
        a.re('C23', [26, 6.6, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C24', [29, 6.600059999999999, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [30, 6.600119999999999, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [26, 6.60018, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [27, 6.600239999999999, -210], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [29, 6.600299999999999, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [27, 6.6, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [27.91, 6.600059999999999, -210], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [28, 6.600119999999999, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C32', [27, 6.60018, -230], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [27, 6.600239999999999, -220], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [27.91, 0.6003, -90.53], [0, 0, 0], [2, 2, 2]);
        a.re('C35', [23.82, 0.6, -87.51], [0, 0, 0], [2, 2, 2]);
        a.re('C36', [31.01, 0.6000599999999999, -84.85], [0, 0, 0], [2, 2, 2]);
        a.re('C37', [28, 0.60012, -76.86], [0, 0, 0], [2, 2, 2]);
        a.re('C38', [20, 0.6001799999999999, -73.57], [0, 0, 0], [2, 2, 2]);
        a.re('C39', [30.66, 0.60024, -73.75], [0, 0, 0], [2, 2, 2]);
        a.re('C40', [36.88, 0.6003, -82.28], [0, 0, 0], [2, 2, 2]);
        a.re('C41', [32.17, 0.6, -93.37], [0, 0, 0], [2, 2, 2]);
        a.re('C42', [24.98, 0.6000599999999999, -71.53], [0, 0, 0], [2, 2, 2]);
        a.re('C43', [35.19, 0.60012, -71.18], [0, 0, 0], [2, 2, 2]);
        a.re('C44', [27.02, 0.6001799999999999, -67.71], [0, 0, 0], [2, 2, 2]);
        a.re('C45', [22.93, 0.60024, -63.09], [0, 0, 0], [2, 2, 2]);
        a.re('C46', [28.79, 0.6003, -60.08], [0, 0, 0], [2, 2, 2]);
        a.re('C47', [35.37, 0.6, -57.59], [0, 0, 0], [2, 2, 2]);
        a.re('C48', [22.22, 0.6000599999999999, -109.46], [0, 0, 0], [2, 2, 2]);
        a.re('P2', [14.75, -0.9997, -19], [-1.57, 0, 0], [2, 0.6, 8.4]);
        a.re('C49', [9, -0.6, -18], [0, 0, 0], [2, 2, 2]);
        a.re('C50', [-0.5, -0.59994, -4], [0, 0, 0], [2, 2, 2]);
        a.re('C51', [4.15, -0.5998800000000001, -14], [0, 0, 0], [2, 2, 2]);
        a.re('C52', [0.95, -0.5998199999999999, -9], [0, 0, 0], [2, 2, 2]);
        a.re('C53', [14.5, -0.59976, -19.19], [0, 0, 0], [2, 2, 2]);
        a.re('C54', [22.29, -0.5997, -21.27], [0, 0, 0], [2, 2, 2]);
        a.re('C55', [26.39, -0.6, -25.1], [0, 0, 0], [2, 2, 2]);
        a.re('P3', [0, -0.99994, -4], [0, 0, 0], [2, 0.6, 8.4]);
        a.re('P4', [7.35, -0.99988, -17], [-1.05, 0, 0], [2, 0.6, 8.4]);
        a.re('P5', [26.99, -0.99982, -26.31], [-0.52, 0, 0], [2, 0.6, 8.4]);
        a.re('P6', [2, -0.99976, -11.5], [-0.52, 0, 0], [2, 0.6, 8.4]);
        a.re('Y2', [34.98, -0.9997, -64.3], [0, 0, 0], [10, 6, 10]);
        a.re('P7', [22, -1, -21], [-1.05, 0, 0], [2, 0.6, 8.4]);
        a.re('P8', [28, 5.0000599999999995, -180], [0, 0, 0], [20, 2, 40]);
        a.re('Y3', [21.48, -0.99988, -80.68], [0, 0, 0], [10, 6, 10]);
        a.re('Y4', [33.05, -0.99982, -100], [0, 0, 0], [10, 6, 10]);
        a.re('Y5', [38, -0.99976, -135], [0, 0, 0], [10, 6, 10]);
        a.re('Y6', [22.95, -0.9997, -100], [0, 0, 0], [10, 6, 10]);
        a.re('Y7', [18, 0, -135], [0, 0, 0], [10, 6, 10]);
        a.re('P9', [28, 0.00012, -124.86], [0, 0, 0], [0.6, 0.6, 13.8]);
    },
    physics_update: function() {},
    render_update: function() {}
}
