var map = {
    title: "Celestial Magnetism",
    song: "env2",
    maker: "Carrots",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([-1.9997900000000002, -1.9997900000000002, -106.99978999999999], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -100.99972], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -118.99965], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -92.99958000000001], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99951, -1.99951, -116.99950999999999], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-2, -2, -113], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99993, -1.99993, -104.99993], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99986, -1.99986, -110.99986000000001], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -1.9997900000000002, -94.99978999999999], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -98.99972], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -96.99965], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -102.99958000000001], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99951, -1.99951, -114.99950999999999], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-2, -2, -109], [0, 0, 0], [3.8, 1.9, 1.9], 1.0, 0, 0, 0.6, false);
        a.p([-1.99993, -1.99993, -100.99993], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99986, -1.99986, -118.99986000000001], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -1.9997900000000002, -92.99978999999999], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -116.99972], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -112.99965], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -104.99958000000001], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99951, -1.99951, -110.99950999999999], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-2, -2, -95], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99993, -1.99993, -98.99993], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99986, -1.99986, -106.99986000000001], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -1.9997900000000002, -96.99978999999999], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -102.99972], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -114.99965], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -108.99958000000001], [0, 0, 0], [3.98, 1.98, 1.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99993, -1.99993, -94.99993], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99986, -1.99986, -92.99986000000001], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -1.9997900000000002, -96.99978999999999], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -98.99972], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -100.99965], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -102.99958000000001], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99951, -1.99951, -104.99950999999999], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-2, -2, -107], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99993, -1.99993, -108.99993], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99986, -1.99986, -110.99986000000001], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -1.9997900000000002, -112.99978999999999], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -1.9997200000000002, -114.99972], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99965, -1.99965, -116.99965], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([-1.99958, -1.99958, -118.99958000000001], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.y([-1.99951, -99.99950999999999, -105.99950999999999], [0, 0, 0], [30, 100, 30], 3.0, 0, 0, 0.6);
        a.p([-1.9997900000000002, -2.99979, -193.99979], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00028, -2.99972, -193.99972000000002], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-1.99965, -2.99965, -181.99965], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00042, -2.9995800000000004, -181.99957999999998], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-1.99951, -2.9995100000000003, -189.99951000000001], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-2, -3, -198], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-1.99993, -2.99993, -201.99992999999998], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-1.99986, -2.99986, -205.99986], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00021, -2.99979, -189.99979], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00028, -2.99972, -197.99972000000002], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00035, -2.99965, -201.99965], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00042, -2.9995800000000004, -205.99957999999998], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([2.00049, -2.9995100000000003, -185.99951000000001], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-2, -3, -186], [0, 0, 0], [3.9, 3.9, 3.9], 2.0, 0, 0, 0.6, false);
        a.p([-1.99993, -2.99993, -193.99992999999998], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99986, -2.99986, -181.99986], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997900000000002, -2.99979, -201.99979], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.9997200000000002, -2.99972, -189.99972000000002], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99965, -2.99965, -197.99965], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99958, -2.9995800000000004, -205.99957999999998], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00049, -2.9995100000000003, -193.99951000000001], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2, -3, -190], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00007, -2.99993, -197.99992999999998], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00014, -2.99986, -201.99986], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00021, -2.99979, -205.99979], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00028, -2.99972, -181.99972000000002], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([2.00035, -2.99965, -185.99965], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.p([-1.99958, -2.9995800000000004, -185.99957999999998], [0, 0, 0], [3.98, 3.98, 3.98], 3.0, 0, 0, 0.6, false);
        a.e([0.020489999999999998, -2.9995100000000003, -205.99951000000001]);
        a.p([0.00007000000000000001, -2.99993, -195.99992999999998], [0, 0, 0], [8, 4, 32], 2.0, 0, 0, 0.6, false);
        a.y([0.00021, -99.99978999999999, -195.99979], [0, 0, 0], [36, 100, 36], 3.0, 0, 0, 0.6);
        a.p([2.00049, -1.99951, -32.99951], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2, -2, -35], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00007, -1.99993, -36.99993], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00014, -1.99986, -38.99986], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00021, -1.9997900000000002, -40.999790000000004], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00028, -1.9997200000000002, -42.999719999999996], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00035, -1.99965, -46.99965], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00042, -1.99958, -44.999579999999995], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00049, -1.99951, -48.99951], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2, -2, -51], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00007, -1.99993, -52.999930000000006], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00014, -1.99986, -54.99986], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00021, -1.9997900000000002, -56.999790000000004], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([2.00028, -1.9997200000000002, -58.999719999999996], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00035000000000000005, -1.99965, -178.99965], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00042, -1.99958, -176.99957999999998], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00049, -1.99951, -174.99951000000001], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0, -2, -173], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00007000000000000001, -1.99993, -170.99992999999998], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00014000000000000001, -1.99986, -168.99986], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00021, -1.9997900000000002, -164.99979], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00028000000000000003, -1.9997200000000002, -166.99972000000002], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00035000000000000005, -1.99965, -162.99965], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00042, -1.99958, -160.99958], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00049, -1.99951, -158.99951], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0, -2, -157], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00007000000000000001, -1.99993, -154.99993], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00014000000000000001, -1.99986, -152.99986], [0, 0, 0], [4, 2, 2], 1.0, 0, 0, 0.6, false);
        a.p([0.00021, -2.99979, -15.99979], [0, 0, 0], [8, 4, 32], 2.0, 0, 0, 0.6, false);
        a.p([0.00028000000000000003, -2.99972, -75.99972], [0, 0, 0], [8, 4, 32], 2.0, 0, 0, 0.6, false);
        a.p([0.00035000000000000005, -2.99965, -135.99965], [0, 0, 0], [8, 4, 32], 2.0, 0, 0, 0.6, false);
    },
    post: function() {
        a.u('P0');
        a.u('P1');
        a.u('P2');
        a.u('P3');
        a.u('P4');
        a.u('P5');
        a.u('P6');
        a.u('P7');
        a.u('P8');
        a.u('P9');
        a.u('P10');
        a.u('P11');
        a.u('P12');
        a.u('P13');
        a.u('P14');
        a.u('P15');
        a.u('P16');
        a.u('P17');
        a.u('P18');
        a.u('P19');
        a.u('P20');
        a.u('P21');
        a.u('P22');
        a.u('P23');
        a.u('P24');
        a.u('P25');
        a.u('P26');
        a.u('P27');
        a.u('P28');
        a.u('P29');
        a.u('P30');
        a.u('P31');
        a.u('P32');
        a.u('P33');
        a.u('P34');
        a.u('P35');
        a.u('P36');
        a.u('P37');
        a.u('P38');
        a.u('P39');
        a.u('P40');
        a.u('P41');
        a.u('Y0');
        a.u('P42');
        a.u('P43');
        a.u('P44');
        a.u('P45');
        a.u('P46');
        a.u('P47');
        a.u('P48');
        a.u('P49');
        a.u('P50');
        a.u('P51');
        a.u('P52');
        a.u('P53');
        a.u('P54');
        a.u('P55');
        a.u('P56');
        a.u('P57');
        a.u('P58');
        a.u('P59');
        a.u('P60');
        a.u('P61');
        a.u('P62');
        a.u('P63');
        a.u('P64');
        a.u('P65');
        a.u('P66');
        a.u('P67');
        a.u('P68');
        a.u('P69');
        a.u('E0');
        a.u('P70');
        a.u('Y1');
        cc.set_monkey("scene.ambientColor", new BABYLON.Color3.FromHexString("#de7c5a"));
        cc.set_monkey("light.groundColor", new BABYLON.Color3.FromHexString("#de7c5a"));
        cc.set_monkey("light.specular", new BABYLON.Color3.FromHexString("#b10f2e"));
        cc.set_monkey("light.diffuse", new BABYLON.Color3.FromHexString("#b10f2e"));
        cc.set_monkey("camera.maxZ", 100.0);
        cc.set_monkey("light.intensity", 1.5);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -71.99986) {
                    this.section_id += 1
                }
                break;
            case 1:
                a.mov('Y0', 'y', 12.0);
                if (PZ < -77.99986) {
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -78) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#de7c5a");
                    light.groundColor = new BABYLON.Color3.FromHexString("#de7c5a");
                    light.specular = new BABYLON.Color3.FromHexString("#b10f2e");
                    light.diffuse = new BABYLON.Color3.FromHexString("#b10f2e");
                    camera.maxZ = 100.0;
                    light.intensity = 1.5;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#00022e");
                    light.diffuse = new BABYLON.Color3.FromHexString("#e87461");
                    this.section_id += 1
                }
                break;
            case 3:
                a.mov('Y0', 'y', 12.0);
                if (PZ < -83.80000000000001) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    light.specular = cc.get("light.specular", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    camera.maxZ = cc.get("camera.maxZ", null);
                    light.intensity = cc.get("light.intensity", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -83.80000000000001) {
                    this.section_id += 1
                }
                break;
            case 5:
                a.mov('P28', 'y', 200.0);
                a.mov('P29', 'y', 200.0);
                a.mov('P30', 'y', 200.0);
                a.mov('P31', 'y', 200.0);
                a.mov('P32', 'y', 200.0);
                a.mov('P33', 'y', 200.0);
                a.mov('P34', 'y', 200.0);
                a.mov('P35', 'y', 200.0);
                a.mov('P36', 'y', 200.0);
                a.mov('P37', 'y', 200.0);
                a.mov('P38', 'y', 200.0);
                a.mov('P39', 'y', 200.0);
                a.mov('P40', 'y', 200.0);
                a.mov('P41', 'y', 200.0);
                if (PZ < -84) {
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -83.99993) {
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('Y0', 'y', 12.0);
                if (PZ < -87.99993) {
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -87.99950999999999) {
                    speed = default_speed * 0.9;
                    a.g(null, 0.3, null);
                    this.section_id += 1
                }
                break;
            case 9:
                a.mov('P0', 'y', 0.1);
                a.rot('P0', 'x', -0.4);
                a.mov('P1', 'x', 0.05);
                a.mov('P1', 'y', 0.1);
                a.rot('P1', 'y', -0.4);
                a.rot('P1', 'z', 0.2);
                a.mov('P2', 'y', 0.06);
                a.rot('P2', 'x', 0.3);
                a.rot('P2', 'y', 0.2);
                a.rot('P2', 'z', 0.2);
                a.mov('P3', 'y', 0.07);
                a.rot('P3', 'x', -0.5);
                a.rot('P3', 'z', -0.1);
                a.mov('P4', 'y', 0.08);
                a.rot('P4', 'y', -0.3);
                a.rot('P4', 'z', -0.2);
                a.mov('P5', 'y', 0.1);
                a.mov('P5', 'x', -0.025);
                a.rot('P5', 'x', -0.2);
                a.rot('P5', 'z', 0.2);
                a.mov('P6', 'y', 0.1);
                a.mov('P6', 'x', -0.05);
                a.rot('P6', 'z', 0.2);
                a.mov('P7', 'y', 0.1);
                a.rot('P7', 'x', -0.2);
                a.rot('P7', 'y', -0.3);
                a.rot('P7', 'z', 0.2);
                a.mov('P8', 'y', 0.1);
                a.rot('P8', 'x', -0.2);
                a.rot('P8', 'y', 0.3);
                a.mov('P9', 'y', 0.1);
                a.rot('P9', 'x', -0.2);
                a.rot('P9', 'z', -0.3);
                a.mov('P10', 'y', 0.1);
                a.rot('P10', 'x', 0.1);
                a.rot('P10', 'y', -0.1);
                a.rot('P10', 'z', -0.1);
                a.mov('P11', 'y', 0.1);
                a.rot('P11', 'x', 0.2);
                a.rot('P11', 'z', -0.2);
                a.mov('P12', 'y', 0.1);
                a.rot('P12', 'x', 0.3);
                a.rot('P12', 'y', 0.1);
                a.mov('P13', 'y', 0.1);
                a.rot('P13', 'y', 0.2);
                a.rot('P13', 'z', -0.3);
                a.mov('P14', 'x', 0.05);
                a.mov('P14', 'y', 0.1);
                a.rot('P14', 'y', -0.4);
                a.rot('P14', 'z', 0.2);
                a.mov('P15', 'y', 0.06);
                a.rot('P15', 'x', 0.3);
                a.rot('P15', 'y', 0.2);
                a.rot('P15', 'z', 0.2);
                a.mov('P16', 'y', 0.07);
                a.rot('P16', 'x', -0.5);
                a.rot('P16', 'z', -0.1);
                a.mov('P17', 'y', 0.08);
                a.rot('P17', 'y', -0.3);
                a.rot('P17', 'z', -0.2);
                a.mov('P18', 'y', 0.1);
                a.mov('P18', 'x', -0.025);
                a.rot('P18', 'x', -0.2);
                a.rot('P18', 'z', 0.2);
                a.mov('P19', 'y', 0.1);
                a.mov('P19', 'x', -0.05);
                a.rot('P19', 'z', 0.2);
                a.mov('P20', 'y', 0.1);
                a.rot('P20', 'x', -0.2);
                a.rot('P20', 'y', -0.3);
                a.rot('P20', 'z', 0.2);
                a.mov('P21', 'y', 0.1);
                a.rot('P21', 'x', -0.2);
                a.rot('P21', 'y', 0.3);
                a.mov('P22', 'y', 0.1);
                a.rot('P22', 'x', -0.2);
                a.rot('P22', 'z', -0.3);
                a.mov('P23', 'y', 0.1);
                a.rot('P23', 'x', -0.4);
                a.mov('P24', 'y', 0.1);
                a.rot('P24', 'x', 0.1);
                a.rot('P24', 'y', -0.1);
                a.rot('P24', 'z', -0.1);
                a.mov('P25', 'y', 0.1);
                a.rot('P25', 'x', 0.2);
                a.rot('P25', 'z', -0.2);
                a.mov('P26', 'y', 0.1);
                a.rot('P26', 'x', 0.3);
                a.rot('P26', 'y', 0.1);
                a.mov('P27', 'y', 0.1);
                a.rot('P27', 'y', 0.2);
                a.rot('P27', 'z', -0.3);
                if (PZ < -119.99950999999999) {
                    speed = cc.get("speed", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -159.98958000000002) {
                    this.section_id += 1
                }
                break;
            case 11:
                a.mov('Y1', 'y', 12.0);
                if (PZ < -165.98958000000002) {
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -165.99972) {
                    this.section_id += 1
                }
                break;
            case 13:
                a.mov('Y1', 'y', 12.0);
                if (PZ < -171.79972) {
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -171.79986000000002) {
                    this.section_id += 1
                }
                break;
            case 15:
                a.mov('P70', 'y', 200.0);
                if (PZ < -171.99986) {
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -171.99965) {
                    this.section_id += 1
                }
                break;
            case 17:
                a.mov('Y1', 'y', 12.0);
                if (PZ < -175.99965) {
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -176) {
                    speed = default_speed * 0.9;
                    a.g(null, 0.5, null);
                    this.section_id += 1
                }
                break;
            case 19:
                a.mov('P42', 'x', -0.01);
                a.mov('P42', 'y', 0.1);
                a.rot('P42', 'x', -0.2);
                a.rot('P42', 'y', 0.3);
                a.mov('P43', 'x', 0.01);
                a.mov('P43', 'y', 0.1);
                a.rot('P43', 'x', 0.2);
                a.rot('P43', 'y', -0.3);
                a.mov('P44', 'y', 0.1);
                a.rot('P44', 'x', -0.5);
                a.rot('P44', 'y', -0.2);
                a.mov('P45', 'y', 0.1);
                a.rot('P45', 'x', -0.5);
                a.rot('P45', 'y', 0.2);
                a.mov('P46', 'x', -0.01);
                a.mov('P46', 'y', 0.1);
                a.rot('P46', 'y', -0.2);
                a.rot('P46', 'z', -0.2);
                a.mov('P47', 'x', -0.02);
                a.mov('P47', 'y', 0.1);
                a.rot('P47', 'x', 0.3);
                a.rot('P47', 'z', -0.3);
                a.mov('P48', 'x', -0.02);
                a.mov('P48', 'y', 0.1);
                a.rot('P48', 'y', 0.4);
                a.rot('P48', 'z', -0.2);
                a.mov('P49', 'x', -0.03);
                a.mov('P49', 'y', 0.1);
                a.rot('P49', 'x', -0.2);
                a.rot('P49', 'z', -0.4);
                a.mov('P50', 'x', 0.01);
                a.mov('P50', 'y', 0.1);
                a.rot('P50', 'y', 0.2);
                a.rot('P50', 'z', 0.2);
                a.mov('P51', 'x', 0.02);
                a.mov('P51', 'y', 0.1);
                a.rot('P51', 'x', -0.3);
                a.rot('P51', 'z', 0.3);
                a.mov('P52', 'x', 0.02);
                a.mov('P52', 'y', 0.1);
                a.rot('P52', 'y', -0.2);
                a.rot('P52', 'z', -0.4);
                a.mov('P53', 'x', 0.03);
                a.mov('P53', 'y', 0.1);
                a.rot('P53', 'x', 0.2);
                a.rot('P53', 'z', 0.4);
                a.mov('P54', 'y', 0.1);
                a.rot('P54', 'x', 0.5);
                a.rot('P54', 'z', -0.2);
                a.mov('P55', 'y', 0.1);
                a.rot('P55', 'x', 0.5);
                a.rot('P55', 'z', 0.2);
                a.mov('P56', 'x', -0.01);
                a.mov('P56', 'y', 0.1);
                a.rot('P56', 'x', -0.2);
                a.rot('P56', 'y', 0.3);
                a.mov('P57', 'y', 0.1);
                a.rot('P57', 'x', -0.5);
                a.rot('P57', 'y', -0.2);
                a.mov('P58', 'x', -0.02);
                a.mov('P58', 'y', 0.1);
                a.rot('P58', 'y', 0.4);
                a.rot('P58', 'z', -0.2);
                a.mov('P59', 'x', -0.01);
                a.mov('P59', 'y', 0.1);
                a.rot('P59', 'y', -0.2);
                a.rot('P59', 'z', -0.2);
                a.mov('P60', 'x', -0.02);
                a.mov('P60', 'y', 0.1);
                a.rot('P60', 'x', 0.3);
                a.rot('P60', 'z', -0.3);
                a.mov('P61', 'x', -0.03);
                a.mov('P61', 'y', 0.1);
                a.rot('P61', 'x', -0.2);
                a.rot('P61', 'z', -0.4);
                a.mov('P62', 'x', 0.01);
                a.mov('P62', 'y', 0.1);
                a.rot('P62', 'x', 0.2);
                a.rot('P62', 'y', -0.3);
                a.mov('P63', 'x', 0.01);
                a.mov('P63', 'y', 0.1);
                a.rot('P63', 'y', 0.2);
                a.rot('P63', 'z', 0.2);
                a.mov('P64', 'x', 0.02);
                a.mov('P64', 'y', 0.1);
                a.rot('P64', 'x', -0.3);
                a.rot('P64', 'z', 0.3);
                a.mov('P65', 'x', 0.02);
                a.mov('P65', 'y', 0.1);
                a.rot('P65', 'y', -0.2);
                a.rot('P65', 'z', -0.4);
                a.mov('P66', 'x', 0.03);
                a.mov('P66', 'y', 0.1);
                a.rot('P66', 'x', 0.2);
                a.rot('P66', 'z', 0.4);
                a.mov('P67', 'y', 0.1);
                a.rot('P67', 'x', -0.5);
                a.rot('P67', 'y', 0.2);
                a.mov('P68', 'y', 0.1);
                a.rot('P68', 'x', 0.5);
                a.rot('P68', 'z', -0.2);
                a.mov('P69', 'y', 0.1);
                a.rot('P69', 'x', 0.5);
                a.rot('P69', 'z', 0.2);
                a.mov('E0', 'y', 0.1);
                if (PZ < -216) {
                    speed = cc.get("speed", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [-1.9997900000000002, -1.9997900000000002, -106.99978999999999], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P1', [-1.9997200000000002, -1.9997200000000002, -100.99972], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P2', [-1.99965, -1.99965, -118.99965], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P3', [-1.99958, -1.99958, -92.99958000000001], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P4', [-1.99951, -1.99951, -116.99950999999999], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P5', [-2, -2, -113], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P6', [-1.99993, -1.99993, -104.99993], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P7', [-1.99986, -1.99986, -110.99986000000001], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P8', [-1.9997900000000002, -1.9997900000000002, -94.99978999999999], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P9', [-1.9997200000000002, -1.9997200000000002, -98.99972], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P10', [-1.99965, -1.99965, -96.99965], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P11', [-1.99958, -1.99958, -102.99958000000001], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P12', [-1.99951, -1.99951, -114.99950999999999], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P13', [-2, -2, -109], [0, 0, 0], [3.8, 1.9, 1.9]);
        a.re('P14', [-1.99993, -1.99993, -100.99993], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P15', [-1.99986, -1.99986, -118.99986000000001], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P16', [-1.9997900000000002, -1.9997900000000002, -92.99978999999999], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P17', [-1.9997200000000002, -1.9997200000000002, -116.99972], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P18', [-1.99965, -1.99965, -112.99965], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P19', [-1.99958, -1.99958, -104.99958000000001], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P20', [-1.99951, -1.99951, -110.99950999999999], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P21', [-2, -2, -95], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P22', [-1.99993, -1.99993, -98.99993], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P23', [-1.99986, -1.99986, -106.99986000000001], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P24', [-1.9997900000000002, -1.9997900000000002, -96.99978999999999], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P25', [-1.9997200000000002, -1.9997200000000002, -102.99972], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P26', [-1.99965, -1.99965, -114.99965], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P27', [-1.99958, -1.99958, -108.99958000000001], [0, 0, 0], [3.98, 1.98, 1.98]);
        a.re('P28', [-1.99993, -1.99993, -94.99993], [0, 0, 0], [4, 2, 2]);
        a.re('P29', [-1.99986, -1.99986, -92.99986000000001], [0, 0, 0], [4, 2, 2]);
        a.re('P30', [-1.9997900000000002, -1.9997900000000002, -96.99978999999999], [0, 0, 0], [4, 2, 2]);
        a.re('P31', [-1.9997200000000002, -1.9997200000000002, -98.99972], [0, 0, 0], [4, 2, 2]);
        a.re('P32', [-1.99965, -1.99965, -100.99965], [0, 0, 0], [4, 2, 2]);
        a.re('P33', [-1.99958, -1.99958, -102.99958000000001], [0, 0, 0], [4, 2, 2]);
        a.re('P34', [-1.99951, -1.99951, -104.99950999999999], [0, 0, 0], [4, 2, 2]);
        a.re('P35', [-2, -2, -107], [0, 0, 0], [4, 2, 2]);
        a.re('P36', [-1.99993, -1.99993, -108.99993], [0, 0, 0], [4, 2, 2]);
        a.re('P37', [-1.99986, -1.99986, -110.99986000000001], [0, 0, 0], [4, 2, 2]);
        a.re('P38', [-1.9997900000000002, -1.9997900000000002, -112.99978999999999], [0, 0, 0], [4, 2, 2]);
        a.re('P39', [-1.9997200000000002, -1.9997200000000002, -114.99972], [0, 0, 0], [4, 2, 2]);
        a.re('P40', [-1.99965, -1.99965, -116.99965], [0, 0, 0], [4, 2, 2]);
        a.re('P41', [-1.99958, -1.99958, -118.99958000000001], [0, 0, 0], [4, 2, 2]);
        a.re('Y0', [-1.99951, -99.99950999999999, -105.99950999999999], [0, 0, 0], [30, 100, 30]);
        a.re('P42', [-1.9997900000000002, -2.99979, -193.99979], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P43', [2.00028, -2.99972, -193.99972000000002], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P44', [-1.99965, -2.99965, -181.99965], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P45', [2.00042, -2.9995800000000004, -181.99957999999998], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P46', [-1.99951, -2.9995100000000003, -189.99951000000001], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P47', [-2, -3, -198], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P48', [-1.99993, -2.99993, -201.99992999999998], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P49', [-1.99986, -2.99986, -205.99986], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P50', [2.00021, -2.99979, -189.99979], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P51', [2.00028, -2.99972, -197.99972000000002], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P52', [2.00035, -2.99965, -201.99965], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P53', [2.00042, -2.9995800000000004, -205.99957999999998], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P54', [2.00049, -2.9995100000000003, -185.99951000000001], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P55', [-2, -3, -186], [0, 0, 0], [3.9, 3.9, 3.9]);
        a.re('P56', [-1.99993, -2.99993, -193.99992999999998], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P57', [-1.99986, -2.99986, -181.99986], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P58', [-1.9997900000000002, -2.99979, -201.99979], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P59', [-1.9997200000000002, -2.99972, -189.99972000000002], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P60', [-1.99965, -2.99965, -197.99965], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P61', [-1.99958, -2.9995800000000004, -205.99957999999998], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P62', [2.00049, -2.9995100000000003, -193.99951000000001], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P63', [2, -3, -190], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P64', [2.00007, -2.99993, -197.99992999999998], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P65', [2.00014, -2.99986, -201.99986], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P66', [2.00021, -2.99979, -205.99979], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P67', [2.00028, -2.99972, -181.99972000000002], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P68', [2.00035, -2.99965, -185.99965], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('P69', [-1.99958, -2.9995800000000004, -185.99957999999998], [0, 0, 0], [3.98, 3.98, 3.98]);
        a.re('E0', [0.020489999999999998, -2.9995100000000003, -205.99951000000001], [0, 0, 0], [1, 1, 1]);
        a.re('P70', [0.00007000000000000001, -2.99993, -195.99992999999998], [0, 0, 0], [8, 4, 32]);
        a.re('Y1', [0.00021, -99.99978999999999, -195.99979], [0, 0, 0], [36, 100, 36]);
        a.re('P71', [2.00049, -1.99951, -32.99951], [0, 0, 0], [4, 2, 2]);
        a.re('P72', [2, -2, -35], [0, 0, 0], [4, 2, 2]);
        a.re('P73', [2.00007, -1.99993, -36.99993], [0, 0, 0], [4, 2, 2]);
        a.re('P74', [2.00014, -1.99986, -38.99986], [0, 0, 0], [4, 2, 2]);
        a.re('P75', [2.00021, -1.9997900000000002, -40.999790000000004], [0, 0, 0], [4, 2, 2]);
        a.re('P76', [2.00028, -1.9997200000000002, -42.999719999999996], [0, 0, 0], [4, 2, 2]);
        a.re('P77', [2.00035, -1.99965, -46.99965], [0, 0, 0], [4, 2, 2]);
        a.re('P78', [2.00042, -1.99958, -44.999579999999995], [0, 0, 0], [4, 2, 2]);
        a.re('P79', [2.00049, -1.99951, -48.99951], [0, 0, 0], [4, 2, 2]);
        a.re('P80', [2, -2, -51], [0, 0, 0], [4, 2, 2]);
        a.re('P81', [2.00007, -1.99993, -52.999930000000006], [0, 0, 0], [4, 2, 2]);
        a.re('P82', [2.00014, -1.99986, -54.99986], [0, 0, 0], [4, 2, 2]);
        a.re('P83', [2.00021, -1.9997900000000002, -56.999790000000004], [0, 0, 0], [4, 2, 2]);
        a.re('P84', [2.00028, -1.9997200000000002, -58.999719999999996], [0, 0, 0], [4, 2, 2]);
        a.re('P85', [0.00035000000000000005, -1.99965, -178.99965], [0, 0, 0], [4, 2, 2]);
        a.re('P86', [0.00042, -1.99958, -176.99957999999998], [0, 0, 0], [4, 2, 2]);
        a.re('P87', [0.00049, -1.99951, -174.99951000000001], [0, 0, 0], [4, 2, 2]);
        a.re('P88', [0, -2, -173], [0, 0, 0], [4, 2, 2]);
        a.re('P89', [0.00007000000000000001, -1.99993, -170.99992999999998], [0, 0, 0], [4, 2, 2]);
        a.re('P90', [0.00014000000000000001, -1.99986, -168.99986], [0, 0, 0], [4, 2, 2]);
        a.re('P91', [0.00021, -1.9997900000000002, -164.99979], [0, 0, 0], [4, 2, 2]);
        a.re('P92', [0.00028000000000000003, -1.9997200000000002, -166.99972000000002], [0, 0, 0], [4, 2, 2]);
        a.re('P93', [0.00035000000000000005, -1.99965, -162.99965], [0, 0, 0], [4, 2, 2]);
        a.re('P94', [0.00042, -1.99958, -160.99958], [0, 0, 0], [4, 2, 2]);
        a.re('P95', [0.00049, -1.99951, -158.99951], [0, 0, 0], [4, 2, 2]);
        a.re('P96', [0, -2, -157], [0, 0, 0], [4, 2, 2]);
        a.re('P97', [0.00007000000000000001, -1.99993, -154.99993], [0, 0, 0], [4, 2, 2]);
        a.re('P98', [0.00014000000000000001, -1.99986, -152.99986], [0, 0, 0], [4, 2, 2]);
        a.re('P99', [0.00021, -2.99979, -15.99979], [0, 0, 0], [8, 4, 32]);
        a.re('P100', [0.00028000000000000003, -2.99972, -75.99972], [0, 0, 0], [8, 4, 32]);
        a.re('P101', [0.00035000000000000005, -2.99965, -135.99965], [0, 0, 0], [8, 4, 32]);
    },
    physics_update: function() {},
    render_update: function() {}
}
