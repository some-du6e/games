function doground() {
	return false;
}

function music() {
	return "music/env-rpm.mp3";
}
var map = {
    title: "Challenge",
    song: "env2",
    maker: "dododo73",
    spawn: [0, 0.5, 0],
    init: function() {

	function pup(a2, b, c, d, e, f, g, h, i, j) {
		plane_fn(a2,b,c,d,e,f,g,h,i,j);
	}
	function plane_fn(a2,b,c,d) {
		a.og("ice", -c, a2, b, d * 60, 0, 0, 2, 0.1, 4);
	}
	plane_fn(0, 0, 0, 0);
	plane_fn(0, -3.7, -0.35, 0.2);
	plane_fn(0, -7.3, -1.5, 0.4);
	plane_fn(0, -10.1, -3.0, 0.6);
	plane_fn(0, -14.2, -3.2, 0.4);
	plane_fn(0, -17.6, -5.2, 0.4);
	plane_fn(0, -21.0, -7.2, 0.4);
	plane_fn(0, -24.4, -6.2, 0.2);
	plane_fn(0, -27.0, -7.2, 0.2);
	plane_fn(0, -30.0, -8.2, 0.6);
	plane_fn(0, -33.0, -10.2, 0.8);
	plane_fn(0, -34.0, -12.7, 1.0);
	plane_fn(0, -37.0, -14.2, 0.6);
	plane_fn(0, -39.8, -15.0, 0.4);
	plane_fn(0, -42.8, -17.6, 0.6);
	plane_fn(0, -45.8, -20.0, 0.7);
	plane_fn(0, -49.2, -22.0, 0.7);
	plane_fn(0, -52.0, -24.0, 0.8);
	plane_fn(0, -54.4, -27.0, 0.9);
	plane_fn(0, -57.4, -27.2, 0.7);
	plane_fn(0, -59.4, -30, 0.5);
	plane_fn(0, -62.4, -31, 0.2);
	plane_fn(0, -65.4, -31, -0.1);
	plane_fn(0, -68.4, -30.5, -0.3);
	plane_fn(0, -71.4, -29.5, -0.4);
	plane_fn(0, -74.4, -31, -0.0);
	plane_fn(0, -77.4, -31, -0.0);
	plane_fn(0, -80.4, -31, -0.0);
	plane_fn(0, -83.4, -31, -0.0);
	plane_fn(0, -86.0, -31, -0.0);
	plane_fn(0, -89.7, -31.35, 0.2);
	plane_fn(0, -93.3, -32.5, 0.4);
	plane_fn(0, -96.1, -34.0, 0.6);
	plane_fn(0, -99.0, -35.0, 0.4);

	plane_fn(-0.1, -102.0, -35.0, 0.0);
	plane_fn(-0.2, -105.0, -36.0, 0.0);
	plane_fn(-0.3, -108.0, -37.0, 0.0);
	plane_fn(-0.4, -111.0, -38.0, 0.0);
	plane_fn(-0.5, -114.0, -39.0, 0.0);
	plane_fn(-0.6, -117.0, -40.0, 0.0);
	plane_fn(-0.7, -120.0, -41.0, 0.0);
	plane_fn(-0.7, -123.0, -41.0, 0.0);
	plane_fn(-0.7, -126.0, -42.0, 0.2);
	plane_fn(-0.7, -127.0, -43.0, 0.4);
	plane_fn(-0.7, -129.0, -45.0, 0.6);
	plane_fn(-0.7, -130.5, -47.0, 0.8);
	plane_fn(-0.7, -131.0, -50.0, 1.0);
	plane_fn(-0.7, -131.5, -54.0, 1.2);
	plane_fn(-0.7, -131.0, -57.0, 1.4);
	plane_fn(-0.7, -130.5, -59.0, 1.6);
	plane_fn(-0.7, -131.3, -62.0, 1.4);
	plane_fn(-0.7, -133.0, -64.0, 1.2);
	plane_fn(-0.7, -135.0, -66.0, 1.0);
	plane_fn(-0.7, -137.0, -68.0, 0.8);
	plane_fn(-0.7, -139.0, -70.0, 0.8);
	plane_fn(-0.7, -141.0, -72.0, 0.7);
	plane_fn(-0.7, -143.0, -74.0, 0.6);
	plane_fn(-0.7, -145.0, -75.0, 0.5);
	plane_fn(-0.7, -147.0, -75.5, 0.4);
	plane_fn(-0.7, -149.0, -76.0, 0.3);
	plane_fn(-0.7, -151.0, -77.0, 0.2);
	plane_fn(-0.7, -153.0, -79.0, 0.0);
	plane_fn(-0.7, -155.0, -81.0, 0.0);
	plane_fn(-0.7, -157.0, -82.5, 0.0);
	plane_fn(-0.7, -159.0, -83.0, 0.0);
	plane_fn(-0.7, -161.0, -83.0, 0.2);
	plane_fn(-0.7, -164.0, -83.0, 0.4);
	plane_fn(-0.7, -167.0, -84.2, 0.2);
	plane_fn(-0.7, -170.0, -83.0, 0.4);
	plane_fn(-0.7, -173.0, -84.0, 0.2);
	plane_fn(-0.7, -176.0, -83.0, 0.4);
	plane_fn(-0.7, -179.0, -82.0, -0.2);
	plane_fn(-0.7, -182.0, -82.0, 0.0);
	plane_fn(-0.7, -185.0, -82.0, 0.0);
	plane_fn(-0.7, -188.0, -82.0, 0.0);
	plane_fn(-0.7, -191.0, -82.0, 0.0);
	plane_fn(-0.7, -194.0, -82.0, 0.0);
	plane_fn(-0.7, -197.0, -82.0, 0.0);
	plane_fn(-0.7, -200.0, -82.0, 0.0);


    a.og_c(0.1, -14, -3.0);
    a.og_c(0.1, -18, -6.0);
    a.og_c(0.1, -28, -7.0);
    a.og_c(0.1, -32, -9.0);
    a.og_c(0.1, -45, -20.0);
    a.og_c(0.1, -50, -23.0);
    a.og_c(0.1, -76, -31.0);
    a.og_c(0.1, -79, -30.5);
    a.og_c(0.1, -79, -31.5);
    a.og_c(0.1, -82, -31.0);
    a.og_c(0.1, -85, -31.0);
    a.og_c(0.1, -34.0, -12.7);
    a.og_c(0.1, -52.0, -24.5);
    a.og_c(0.1, -65.4, -30.5);
    a.og_c(0.1, -90, -32.0);
    a.og_c(-0.6, -167.0, -84.2);
    a.og_c(-0.6, -188.0, -82.0);
    a.og_c(-0.6, -149.0, -76.0);
    a.og_c(-0.6, -139.0, -70.0);

	a.og_end(-82.0, -0.6, -200.0, 0);

},
	post: function() {
		cc.set_monkey("speed", 0.2);
		cc.set_monkey("steer", 0.03);
		cc.refresh();
	},
    section_id: 0,
    section_update: function() {
    },
    reset: function() {
        this.section_id = 0;
		cleanup.run(false);
		this.init();
    },
    physics_update: function() {},
    render_update: function() {
    	iv(player, scene);
    }
}

function iv(box, scene) {

}