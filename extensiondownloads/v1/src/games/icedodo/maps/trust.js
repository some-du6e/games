var map = {
    title: "Trust",
    song: "env2",
    maker: "uPilot",
    spawn: [0, 0.5, 0],
    init: function() {
        a.y([-1.12951, 0.65049, -632.75951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.02, 0.65, -632.76], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.15993, 0.65007, -632.75993], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.21986, 0.6501399999999999, -632.75986], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8902100000000001, 0.65021, -632.75979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8902800000000001, 0.6502800000000001, -627.65972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.219650000000001, 0.65035, -627.6596499999999], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.15958, 0.65042, -627.65958], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.02049, 0.65049, -627.65951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.13, 0.65, -627.66], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96007, 0.65007, -627.65993], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96014, 0.6501399999999999, -621.56986], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.12979, 0.65021, -621.56979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.0202800000000005, 0.6502800000000001, -621.56972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.1596499999999996, 0.65035, -621.5696499999999], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.21958, 0.65042, -621.56958], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8904900000000001, 0.65049, -621.56951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.89, 0.65, -616.12], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.219930000000001, 0.65007, -616.1199300000001], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.15986, 0.6501399999999999, -616.11986], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.0202100000000005, 0.65021, -616.11979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.1297199999999998, 0.6502800000000001, -616.11972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96035, 0.65035, -616.11965], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.9604199999999996, 0.65042, -610.11958], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.12951, 0.65049, -610.11951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.02, 0.65, -610.12], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.15993, 0.65007, -610.1199300000001], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.21986, 0.6501399999999999, -610.11986], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8902100000000001, 0.65021, -610.11979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8902800000000001, 0.6502800000000001, -603.34972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.219650000000001, 0.65035, -603.34965], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.15958, 0.65042, -603.34958], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.02049, 0.65049, -603.34951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.13, 0.65, -603.35], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96007, 0.65007, -603.34993], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96014, 0.6501399999999999, -603.3498599999999], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.12979, 0.65021, -603.34979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.0202800000000005, 0.6502800000000001, -603.34972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.1596499999999996, 0.65035, -603.34965], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.21958, 0.65042, -603.34958], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.8904900000000001, 0.65049, -603.34951], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([2.96, 0.65, -638.44], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-1.1299299999999999, 0.65007, -638.43993], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([5.0201400000000005, 0.6501399999999999, -638.43986], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-3.1597899999999997, 0.65021, -638.43979], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([-5.21972, 0.6502800000000001, -638.43972], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.y([0.89035, 0.65035, -638.4396499999999], [0, 0, 0], [2, 2, 2], "00ff00,0.5", 0, 0, 0.6, true, 1);
        a.c([-2.31958, -0.10958000000000001, -50.069579999999995], "-1.0");
        a.c([0.54049, 0.07048999999999994, -69.71951], "-1.0");
        a.c([0.36, -0.08999999999999997, -72.88], "-1.0");
        a.c([-0.19993, -0.08992999999999995, -72.87993], "-1.0");
        a.c([-0.5698599999999999, -0.29986, -44.71986], "-1.0");
        a.c([-0.24978999999999998, -0.08979000000000004, -69.73979], "-1.0");
        a.p([0.00028000000000000003, -2.72972, -398.04972000000004], [0, 0, 0], [37.32, 5.02, 210.84], "-1.0", 0, 0, 0.6, false, false);
        a.p([0.00035000000000000005, 52.85035, -685.1896499999999], [0, 0, 0], [150.4, 100.76, 13.76], "-1.0", 0, 0, 0.6, false, false);
        a.c([-1.50958, -0.29957999999999996, -44.71957999999999], "-1.0");
        a.p([0.00049, 4.990489999999999, -110.88950999999999], [0, 0, 0], [8.42, 2, 43.98], "-1.0", 0, 0, 0.6, false, false);
        a.p([0, 4.99, -121.68], [0, 0, 0], [8.42, 2, 43.98], "-1.0", 0, 0, 0.6, false, false);
        a.p([0.00007000000000000001, 4.99007, -110.88993], [0, 0, 0], [8.42, 2, 43.98], "-1.0", 0, 0, 0.6, false, false);
        a.p([0.00014000000000000001, -0.91986, -183.99986], [0, 0, 0], [8.42, 2, 12.92], "-1.0", 0, 0, 0.6, false, false);
        a.c([-2.34979, -0.27979, -44.71979], "-1.0");
        a.c([0.29028, -0.29972, -44.719719999999995], "-1.0");
        a.c([2.37035, -0.019650000000000056, -50.06965], "-1.0");
        a.p([0.00042, 4.990419999999999, -67.04957999999999], [0, 0, 0], [8.42, 2, 43.98], "-1.0", 0, 0, 0.6, false, false);
        a.p([0.00049, -0.80951, -22.74951], [0, 0, 0], [5.82, 1.78, 19.6], "2.0", 0, 0, 0.6, false, false);
        a.p([0, -2.73, -613.03], [0, 0, 0], [12.42, 5.02, 21.3], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00007000000000000001, -2.72993, -560.28993], [0, 0, 0], [21.44, 5.02, 41.54], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00014000000000000001, -2.72986, -633.35986], [0, 0, 0], [12.42, 5.02, 21.3], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00021, -2.72979, -591.87979], [0, 0, 0], [12.42, 5.02, 21.3], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00028000000000000003, -2.72972, -519.21972], [0, 0, 0], [21.44, 5.02, 41.54], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00035000000000000005, -0.80965, -69.18965], [0, 0, 0], [5.1, 1.78, 14.48], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00042, -0.80958, -40.07958], [0, 0, 0], [5.82, 1.78, 14.48], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00049, -0.80951, -83.65951], [0, 0, 0], [5.1, 1.78, 14.48], "2.0", 0, 0, 0.6, false, false);
        a.p([0, -0.81, -54.57], [0, 0, 0], [5.82, 1.78, 14.48], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00007000000000000001, -0.7999299999999999, -217.02992999999998], [0, 0, 0], [8.42, 2, 59.7], "2.0", 0, 0, 0.6, false, false);
        a.p([0.00014000000000000001, -0.91986, -153.61986000000002], [0, 0, 0], [8.42, 2, 47.5], "2.0", 0, 0, 0.6, true, false);
        a.p([0.00021, 14.47021, -261.98978999999997], [0, 0, 0], [8.42, 34.02, 30.4], "2.0", 0, 0, 0.6, true, false);
        a.p([2.8402800000000004, 2.46028, -632.61972], [0, 0, 0], [2, 0.48, 2], "5.0", 0, 0, 0.6, false, false);
        a.y([0.050140000000000004, 0.34014000000000005, -50.03986], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.7402099999999998, 0.34021, -63.709790000000005], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.7402799999999998, 0.34027999999999997, -69.73971999999999], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([-1.60965, 0.34035, -69.73965], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([-1.64958, 0.34042, -72.69958], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.70049, 0.34049, -72.69951], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.61, 0.34, -44.7], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([-1.6299299999999999, 0.34007, -62.90993], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([0.01014, 0.34014000000000005, -63.34986], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([0.010209999999999999, 0.34021, -53.61979], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.7402799999999998, 0.34027999999999997, -53.97972], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([-1.62965, 0.34035, -53.18965], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([1.74042, 0.34042, -58.639579999999995], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([-1.62951, 0.34049, -57.84951], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.y([0.01, 0.34, -58.28], [0, 0, 0], [2, 2, 2], "b22626", 0, 0, 0.6, true, 0.0);
        a.p([0.00007000000000000001, -0.8099299999999999, -5.5999300000000005], [0, 0, 0], [5.18, 1.78, 14.48], "2.0", 0, 0, 0.6, false, false);
        a.e([2.91014, 0.69014, -632.7198599999999]);
    },
    post: function() {
        cc.set_monkey("camera.maxZ", 60.0);
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#181818"));
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -1.1497899999999994) {
                    camera.maxZ = 60.0;
                    a.msg_set("Trust me to beat the map! ");
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -22.28979) {
                    camera.maxZ = cc.get("camera.maxZ", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -22.679859999999998) {
                    camera.maxZ = 60.0;
                    a.msg_set("Go into the cones! If you don't you'll die! ");
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -73.83985999999999) {
                    camera.maxZ = cc.get("camera.maxZ", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -74.16) {
                    speed = default_speed * 99.0;
                    rotation = 0.0 * Math.PI / 180;
                    steer = default_steer * 0.0;
                    light.intensity = 0.0;
                    a.g(null, -2.0, null);
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -128.46) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    light.intensity = cc.get("light.intensity", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -130.69965) {
                    a.jh(-10000.0);
                    a.msg_set("Don't Jump! ");
                    camera.maxZ = 300.0;
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -182.11965) {
                    a.jh(null);
                    a.msg_del();
                    camera.maxZ = cc.get("camera.maxZ", null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -184.69957999999997) {
                    speed = default_speed * 30.0;
                    rotation = 0.0 * Math.PI / 180;
                    steer = default_steer * 0.0;
                    a.g(null, 4.0, null);
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -223.05957999999998) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -226.83972) {
                    a.msg_set("Going up! ");
                    a.g(null, -0.3, null);
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -246.55972000000003) {
                    a.msg_del();
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -246.95958) {
                    a.jh(1.2);
                    a.js(1.2);
                    camera.maxZ = 130.0;
                    a.msg_set("Jump in the void! ");
                    speed = default_speed * 1.001;
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -279.37958) {
                    a.jh(null);
                    a.js(null);
                    camera.maxZ = cc.get("camera.maxZ", null);
                    a.msg_del();
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -300.71951) {
                    speed = default_speed * 99.0;
                    rotation = 0.0 * Math.PI / 180;
                    steer = default_steer * 0.0;
                    light.intensity = 0.0;
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -524.39951) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    light.intensity = cc.get("light.intensity", null);
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -526.96965) {
                    a.msg_set("Go into the right goal! The right goal has red above it ");
                    this.section_id += 1
                }
                break;
            case 17:
                if (PZ < -603.44965) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -603.82993) {
                    speed = default_speed * 0.97;
                    steer = default_steer * 1.1;
                    a.cam_d(4.29);
                    camera.maxZ = 300.0;
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -668.9699300000001) {
                    speed = cc.get("speed", null);
                    steer = cc.get("steer", null);
                    a.cam_d(null);
                    camera.maxZ = cc.get("camera.maxZ", null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('Y0', [-1.12951, 0.65049, -632.75951], [0, 0, 0], [2, 2, 2]);
        a.re('Y1', [5.02, 0.65, -632.76], [0, 0, 0], [2, 2, 2]);
        a.re('Y2', [-3.15993, 0.65007, -632.75993], [0, 0, 0], [2, 2, 2]);
        a.re('Y3', [-5.21986, 0.6501399999999999, -632.75986], [0, 0, 0], [2, 2, 2]);
        a.re('Y4', [0.8902100000000001, 0.65021, -632.75979], [0, 0, 0], [2, 2, 2]);
        a.re('Y5', [0.8902800000000001, 0.6502800000000001, -627.65972], [0, 0, 0], [2, 2, 2]);
        a.re('Y6', [-5.219650000000001, 0.65035, -627.6596499999999], [0, 0, 0], [2, 2, 2]);
        a.re('Y7', [-3.15958, 0.65042, -627.65958], [0, 0, 0], [2, 2, 2]);
        a.re('Y8', [5.02049, 0.65049, -627.65951], [0, 0, 0], [2, 2, 2]);
        a.re('Y9', [-1.13, 0.65, -627.66], [0, 0, 0], [2, 2, 2]);
        a.re('Y10', [2.96007, 0.65007, -627.65993], [0, 0, 0], [2, 2, 2]);
        a.re('Y11', [2.96014, 0.6501399999999999, -621.56986], [0, 0, 0], [2, 2, 2]);
        a.re('Y12', [-1.12979, 0.65021, -621.56979], [0, 0, 0], [2, 2, 2]);
        a.re('Y13', [5.0202800000000005, 0.6502800000000001, -621.56972], [0, 0, 0], [2, 2, 2]);
        a.re('Y14', [-3.1596499999999996, 0.65035, -621.5696499999999], [0, 0, 0], [2, 2, 2]);
        a.re('Y15', [-5.21958, 0.65042, -621.56958], [0, 0, 0], [2, 2, 2]);
        a.re('Y16', [0.8904900000000001, 0.65049, -621.56951], [0, 0, 0], [2, 2, 2]);
        a.re('Y17', [0.89, 0.65, -616.12], [0, 0, 0], [2, 2, 2]);
        a.re('Y18', [-5.219930000000001, 0.65007, -616.1199300000001], [0, 0, 0], [2, 2, 2]);
        a.re('Y19', [-3.15986, 0.6501399999999999, -616.11986], [0, 0, 0], [2, 2, 2]);
        a.re('Y20', [5.0202100000000005, 0.65021, -616.11979], [0, 0, 0], [2, 2, 2]);
        a.re('Y21', [-1.1297199999999998, 0.6502800000000001, -616.11972], [0, 0, 0], [2, 2, 2]);
        a.re('Y22', [2.96035, 0.65035, -616.11965], [0, 0, 0], [2, 2, 2]);
        a.re('Y23', [2.9604199999999996, 0.65042, -610.11958], [0, 0, 0], [2, 2, 2]);
        a.re('Y24', [-1.12951, 0.65049, -610.11951], [0, 0, 0], [2, 2, 2]);
        a.re('Y25', [5.02, 0.65, -610.12], [0, 0, 0], [2, 2, 2]);
        a.re('Y26', [-3.15993, 0.65007, -610.1199300000001], [0, 0, 0], [2, 2, 2]);
        a.re('Y27', [-5.21986, 0.6501399999999999, -610.11986], [0, 0, 0], [2, 2, 2]);
        a.re('Y28', [0.8902100000000001, 0.65021, -610.11979], [0, 0, 0], [2, 2, 2]);
        a.re('Y29', [0.8902800000000001, 0.6502800000000001, -603.34972], [0, 0, 0], [2, 2, 2]);
        a.re('Y30', [-5.219650000000001, 0.65035, -603.34965], [0, 0, 0], [2, 2, 2]);
        a.re('Y31', [-3.15958, 0.65042, -603.34958], [0, 0, 0], [2, 2, 2]);
        a.re('Y32', [5.02049, 0.65049, -603.34951], [0, 0, 0], [2, 2, 2]);
        a.re('Y33', [-1.13, 0.65, -603.35], [0, 0, 0], [2, 2, 2]);
        a.re('Y34', [2.96007, 0.65007, -603.34993], [0, 0, 0], [2, 2, 2]);
        a.re('Y35', [2.96014, 0.6501399999999999, -603.3498599999999], [0, 0, 0], [2, 2, 2]);
        a.re('Y36', [-1.12979, 0.65021, -603.34979], [0, 0, 0], [2, 2, 2]);
        a.re('Y37', [5.0202800000000005, 0.6502800000000001, -603.34972], [0, 0, 0], [2, 2, 2]);
        a.re('Y38', [-3.1596499999999996, 0.65035, -603.34965], [0, 0, 0], [2, 2, 2]);
        a.re('Y39', [-5.21958, 0.65042, -603.34958], [0, 0, 0], [2, 2, 2]);
        a.re('Y40', [0.8904900000000001, 0.65049, -603.34951], [0, 0, 0], [2, 2, 2]);
        a.re('Y41', [2.96, 0.65, -638.44], [0, 0, 0], [2, 2, 2]);
        a.re('Y42', [-1.1299299999999999, 0.65007, -638.43993], [0, 0, 0], [2, 2, 2]);
        a.re('Y43', [5.0201400000000005, 0.6501399999999999, -638.43986], [0, 0, 0], [2, 2, 2]);
        a.re('Y44', [-3.1597899999999997, 0.65021, -638.43979], [0, 0, 0], [2, 2, 2]);
        a.re('Y45', [-5.21972, 0.6502800000000001, -638.43972], [0, 0, 0], [2, 2, 2]);
        a.re('Y46', [0.89035, 0.65035, -638.4396499999999], [0, 0, 0], [2, 2, 2]);
        a.re('C0', [-2.31958, -0.10958000000000001, -50.069579999999995], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [0.54049, 0.07048999999999994, -69.71951], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [0.36, -0.08999999999999997, -72.88], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-0.19993, -0.08992999999999995, -72.87993], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-0.5698599999999999, -0.29986, -44.71986], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-0.24978999999999998, -0.08979000000000004, -69.73979], [0, 0, 0], [2, 2, 2]);
        a.re('P0', [0.00028000000000000003, -2.72972, -398.04972000000004], [0, 0, 0], [37.32, 5.02, 210.84]);
        a.re('P1', [0.00035000000000000005, 52.85035, -685.1896499999999], [0, 0, 0], [150.4, 100.76, 13.76]);
        a.re('C6', [-1.50958, -0.29957999999999996, -44.71957999999999], [0, 0, 0], [2, 2, 2]);
        a.re('P2', [0.00049, 4.990489999999999, -110.88950999999999], [0, 0, 0], [8.42, 2, 43.98]);
        a.re('P3', [0, 4.99, -121.68], [0, 0, 0], [8.42, 2, 43.98]);
        a.re('P4', [0.00007000000000000001, 4.99007, -110.88993], [0, 0, 0], [8.42, 2, 43.98]);
        a.re('P5', [0.00014000000000000001, -0.91986, -183.99986], [0, 0, 0], [8.42, 2, 12.92]);
        a.re('C7', [-2.34979, -0.27979, -44.71979], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [0.29028, -0.29972, -44.719719999999995], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [2.37035, -0.019650000000000056, -50.06965], [0, 0, 0], [2, 2, 2]);
        a.re('P6', [0.00042, 4.990419999999999, -67.04957999999999], [0, 0, 0], [8.42, 2, 43.98]);
        a.re('P7', [0.00049, -0.80951, -22.74951], [0, 0, 0], [5.82, 1.78, 19.6]);
        a.re('P8', [0, -2.73, -613.03], [0, 0, 0], [12.42, 5.02, 21.3]);
        a.re('P9', [0.00007000000000000001, -2.72993, -560.28993], [0, 0, 0], [21.44, 5.02, 41.54]);
        a.re('P10', [0.00014000000000000001, -2.72986, -633.35986], [0, 0, 0], [12.42, 5.02, 21.3]);
        a.re('P11', [0.00021, -2.72979, -591.87979], [0, 0, 0], [12.42, 5.02, 21.3]);
        a.re('P12', [0.00028000000000000003, -2.72972, -519.21972], [0, 0, 0], [21.44, 5.02, 41.54]);
        a.re('P13', [0.00035000000000000005, -0.80965, -69.18965], [0, 0, 0], [5.1, 1.78, 14.48]);
        a.re('P14', [0.00042, -0.80958, -40.07958], [0, 0, 0], [5.82, 1.78, 14.48]);
        a.re('P15', [0.00049, -0.80951, -83.65951], [0, 0, 0], [5.1, 1.78, 14.48]);
        a.re('P16', [0, -0.81, -54.57], [0, 0, 0], [5.82, 1.78, 14.48]);
        a.re('P17', [0.00007000000000000001, -0.7999299999999999, -217.02992999999998], [0, 0, 0], [8.42, 2, 59.7]);
        a.re('P18', [0.00014000000000000001, -0.91986, -153.61986000000002], [0, 0, 0], [8.42, 2, 47.5]);
        a.re('P19', [0.00021, 14.47021, -261.98978999999997], [0, 0, 0], [8.42, 34.02, 30.4]);
        a.re('P20', [2.8402800000000004, 2.46028, -632.61972], [0, 0, 0], [2, 0.48, 2]);
        a.re('Y47', [0.050140000000000004, 0.34014000000000005, -50.03986], [0, 0, 0], [2, 2, 2]);
        a.re('Y48', [1.7402099999999998, 0.34021, -63.709790000000005], [0, 0, 0], [2, 2, 2]);
        a.re('Y49', [1.7402799999999998, 0.34027999999999997, -69.73971999999999], [0, 0, 0], [2, 2, 2]);
        a.re('Y50', [-1.60965, 0.34035, -69.73965], [0, 0, 0], [2, 2, 2]);
        a.re('Y51', [-1.64958, 0.34042, -72.69958], [0, 0, 0], [2, 2, 2]);
        a.re('Y52', [1.70049, 0.34049, -72.69951], [0, 0, 0], [2, 2, 2]);
        a.re('Y53', [1.61, 0.34, -44.7], [0, 0, 0], [2, 2, 2]);
        a.re('Y54', [-1.6299299999999999, 0.34007, -62.90993], [0, 0, 0], [2, 2, 2]);
        a.re('Y55', [0.01014, 0.34014000000000005, -63.34986], [0, 0, 0], [2, 2, 2]);
        a.re('Y56', [0.010209999999999999, 0.34021, -53.61979], [0, 0, 0], [2, 2, 2]);
        a.re('Y57', [1.7402799999999998, 0.34027999999999997, -53.97972], [0, 0, 0], [2, 2, 2]);
        a.re('Y58', [-1.62965, 0.34035, -53.18965], [0, 0, 0], [2, 2, 2]);
        a.re('Y59', [1.74042, 0.34042, -58.639579999999995], [0, 0, 0], [2, 2, 2]);
        a.re('Y60', [-1.62951, 0.34049, -57.84951], [0, 0, 0], [2, 2, 2]);
        a.re('Y61', [0.01, 0.34, -58.28], [0, 0, 0], [2, 2, 2]);
        a.re('P21', [0.00007000000000000001, -0.8099299999999999, -5.5999300000000005], [0, 0, 0], [5.18, 1.78, 14.48]);
        a.re('E0', [2.91014, 0.69014, -632.7198599999999], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
