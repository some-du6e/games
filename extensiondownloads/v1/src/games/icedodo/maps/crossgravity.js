var map = {
    title: "Cross Gravity",
    song: "env2",
    maker: "Bearded Baby",
    spawn: [0, 0.5, 0],
    init: function() {
        a.c([-5.71, 7.16, -87.18]);
        a.c([-4.66, 7.16, -87.18]);
        a.c([-3.68, 7.16, -87.18]);
        a.c([-2.67, 7.16, -87.18]);
        a.c([-1.58, 7.16, -87.18]);
        a.c([-0.61, 7.16, -87.18]);
        a.c([0.37, 7.16, -87.18]);
        a.c([1.38, 7.16, -87.18]);
        a.c([2.21, 7.16, -87.18]);
        a.c([3.29, 7.16, -87.18]);
        a.c([4.31, 7.16, -87.18]);
        a.c([5.45, 7.16, -87.18]);
        a.c([4.18, -1.5, -102.66]);
        a.c([3.16, -1.5, -102.66]);
        a.c([2.05, -1.5, -102.66]);
        a.c([-4.2, -1.5, -102.66]);
        a.c([-3.03, -1.5, -102.66]);
        a.c([-1.87, -1.5, -102.66]);
        a.c([4.18, -1.5, -108.32]);
        a.c([3.05, -1.5, -108.32]);
        a.c([1.87, -1.5, -108.32]);
        a.c([0.74, -1.5, -108.32]);
        a.c([-4.39, -1.5, -108.32]);
        a.c([-0.53, -1.5, -108.32]);
        a.c([-3.59, -1.5, -108.32]);
        a.c([4.1, -1.5, -113.51]);
        a.c([2.73, -1.5, -113.51]);
        a.c([1.68, -1.5, -113.51]);
        a.c([-1.23, -1.5, -113.51]);
        a.c([-2.23, -1.5, -113.51]);
        a.c([-3.49, -1.5, -113.51]);
        a.c([-4.49, -1.5, -113.51]);
        a.c([2.73, -1.5, -118.41]);
        a.c([4.17, -1.5, -118.41]);
        a.c([1.28, -1.5, -118.41]);
        a.c([-0.03, -1.5, -118.41]);
        a.c([-4.22, -1.5, -118.41]);
        a.c([-3.08, -1.5, -118.41]);
        a.c([0.47, 14.01, -218.1]);
        a.p([0, -1, -7], [0, 0, 0], [10, 0.5, 20]);
        a.p([4.07, -0.75, -24.96], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-4, -0.75, -25.05], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-0.01, -0.75, -34.64], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([6.86, 3, -52.14], [0, 0, 0], [2, 10, 70]);
        a.p([-4.3, -0.75, -55.5], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-4.3, -0.75, -45.11], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([4.57, -0.75, -45.62], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-6.95, 3, -52.14], [0, 0, 0], [2, 10, 70]);
        a.p([-0.36, -0.75, -55.5], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([4.38, -0.75, -65.88], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-4.45, -0.75, -65.88], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([4.23, -0.75, -75.37], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([0.23, -0.75, -75.37], [0, 0.44, 0], [4, 0.4, 4]);
        a.p([-0.11, 4.97, -88.18], [-1.57, -1.57, 0], [2, 15.6, 9]);
        a.p([-0.05, 8.7, -52.14], [0, 0, -1.57], [2, 15.6, 70]);
        a.p([0, -2.27, -105.74], [0, 0, 0], [10, 0.5, 34]);
        a.p([0.05, 1.72, -142.14], [0, 0.21, 0], [10, 0.5, 40]);
        a.p([7.01, 13.64, -207.41], [0, 0, 0], [4.34, 0.5, 8.7]);
        a.p([-6.06, 13.64, -207.41], [0, 0, 0], [4.34, 0.5, 8.7]);
        a.p([-8.28, 15.73, -207.41], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([9.2, 15.73, -207.41], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([4.85, 15.73, -207.41], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([2.83, 15.73, -213.62], [0.79, 0, -1.57], [4.34, 0.22, 6.34]);
        a.p([1.29, 13.64, -217.42], [0.79, 0, 0], [3.04, 0.5, 21.74]);
        a.p([0.06, 13.64, -217.55], [-0.79, 0, 0], [3.04, 0.5, 21.74]);
        a.p([-3.78, 15.73, -207.41], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([-1.72, 15.73, -213.62], [-0.79, 0, -1.57], [4.34, 0.22, 6.34]);
        a.p([-1.72, 15.73, -222.42], [0.79, 0, -1.57], [4.34, 0.22, 6.34]);
        a.p([2.83, 15.73, -222.42], [-0.79, 0, -1.57], [4.34, 0.22, 6.34]);
        a.p([-4.75, 15.73, -214.95], [-0.79, 0, -1.57], [4.34, 0.22, 9.14]);
        a.p([6.05, 15.73, -214.83], [0.79, 0, -1.57], [4.34, 0.22, 9.14]);
        a.p([6.01, 15.73, -221.02], [-0.79, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([-4.47, 15.73, -220.98], [0.79, 0, -1.57], [4.34, 0.22, 8.26]);
        a.p([-5.95, 13.69, -231.18], [0, 0, 0], [4, 0.5, 15]);
        a.p([7.02, 13.67, -231.18], [0, 0, 0], [4, 0.5, 15]);
        a.p([-5.95, 20, -246.86], [0, 0, 0], [4, 0.5, 15]);
        a.p([7.13, 20, -246.86], [0, 0, 0], [4, 0.5, 15]);
        a.p([-2.07, 30, -262.36], [0, 0, 0], [4, 0.5, 15]);
        a.p([3.35, 30, -262.36], [0, 0, 0], [4, 0.5, 15]);
        a.p([-2.21, 40, -278.47], [0, 0, 0], [4, 0.5, 15]);
        a.p([3.16, 40, -278.47], [0, 0, 0], [4, 0.5, 15]);
        a.p([-7.49, 15.73, -228.09], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([0.66, 30, -301.42], [0, 0, 0], [10, 0.5, 30]);
        a.p([9.02, 15.73, -228.09], [0, 0, -1.57], [4.34, 0.22, 8.7]);
        a.p([0.22, 3.14, -87.18], [0, -0.26, 0], [14, 5, 2]);
        a.e([0.83, 30.54, -315.35]);
    },
    post: function() {},
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -16.869999999999997) {
                    update.set_gravity(default_gravity * 0.0);
                    speed = default_speed * 1.3;
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -88.87) {
                    update.set_gravity(default_gravity);
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -96.17) {
                    steer = default_steer * -1.0;
                    speed = default_speed * 0.5;
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -122.17) {
                    steer = default_steer;
                    speed = default_speed;
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -149.59) {
                    speed = default_speed * 1.3;
                    update.set_gravity(default_gravity * -0.1);
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -189.59) {
                    speed = default_speed;
                    update.set_gravity(default_gravity);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -238.24) {
                    update.set_gravity(default_gravity * -0.3);
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -286.24) {
                    update.set_gravity(default_gravity);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
    },
    physics_update: function() {},
    render_update: function() {}
}