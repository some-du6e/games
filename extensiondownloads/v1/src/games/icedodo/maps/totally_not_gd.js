var map = {
    title: "Totally Not GD",
    song: "env2",
    maker: "catfishpie",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([0.00021, 29.67021, -280.66979], [0, 0, 0], [2, 32.74, 167.36], "007a06", 0, 0, 0.6, true, false);
        a.p([0.00028, 14.04028, -261.26972], [0, 0, 0], [2, 4.46, 3.68], "007a06", 0, 0, 0.6, true, false);
        a.p([0.00035, 13.21035, -267.07965], [0, 0, 0], [2, 4.46, 3.68], "007a06", 0, 0, 0.6, true, false);
        a.p([-0.06958, 13.43042, -273.51958], [0, 0, 0], [2, 6.44, 3.68], "007a06", 0, 0, 0.6, true, false);
        a.p([0.00049, -17.80951, -42.20951], [0, 0, 0], [2, 32.74, 167.36], "0900bd", 0, 0, 0.6, true, false);
        a.p([0, -1.15, -34.58], [0, 0, 0], [2, 2, 4.1], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00007, -0.30993, -47.94993], [0, 0, 0], [2, 4.46, 3.86], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00014, 1.81014, -68.65986], [0, 0, 0], [2, 0.72, 9.42], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00021, 0.43021, -76.40979], [0, 0, 0], [2, 0.72, 3.7], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00028, 0.43028, -41.37972], [0, 0, 0], [2, 0.72, 4.26], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00035, 1.81035, -86.92965], [0, 0, 0], [2, 0.72, 12.32], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00042, 3.37042, -96.57958], [0, 0, 0], [2, 0.72, 2.18], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00049, -0.30951, -114.39951], [0, 0, 0], [2, 2.92, 22.54], "0900bd", 0, 0, 0.6, true, false);
        a.p([0, 1.92, -215.57], [0, 0, 0], [2, 0.72, 2.4], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00007, -0.30993, -223.66993], [0, 0, 0], [2, 4.46, 3.66], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00014, -17.80986, -280.80986], [0, 0, 0], [2, 32.74, 167.36], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00021, 1.92021, -286.28979], [0, 0, 0], [2, 0.72, 18.48], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00028, 1.92028, -306.30972], [0, 0, 0], [2, 0.72, 13.94], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00035, 1.93035, -60.14965], [0, 0, 0], [2.98, 2.38, 3.28], "ffe600,0.0", 0, 0, 0.6, true, true);
        a.p([0.00042, 1.67042, -100.39958], [0, 0, 0], [2.7, 2.16, 2.16], "ffe600,0.0", 0, 0, 0.6, true, true);
        a.p([0.00049, 1.93049, -54.68951], [0, 0, 0], [3.06, 2.44, 3.46], "ffe600,0.0", 0, 0, 0.6, true, true);
        a.p([0.00035, -1.35965, -69.46965], [0, 0, 0], [1.24, 0.72, 67.74], "00000a", 9999.0, 0, 0.6, false, false);
        a.p([0.00042, -1.35958, -217.25958], [0, 0, 0], [1.24, 0.72, 12.82], "00000a", 9999.0, 0, 0.6, false, false);
        a.p([0.00049, 13.18049, -265.63951], [0, 0, 0], [1.24, 0.72, 12.82], "00000a", 9999.0, 0, 0.6, false, false);
        a.p([0, 5.89, -197.66], [0, 0, 0], [1.2, 3.4, 0.98], "0900bd,0.4", 0, 0, 0.6, false, true);
        a.p([0.00007, 1.91007, -125.16993], [0, 0, 0], [1.2, 3.4, 0.98], "0900bd,0.4", 0, 0, 0.6, false, true);
        a.p([0.00014, -1.17986, -103.09986], [0, 0, 0], [2, 7.04, 0.98], "0900bd", 9999.0, 0, 0.6, false, false);
        a.p([0.00021, 8.83021, -76.40979], [0, 0, 0], [2, 11.14, 0.82], "0900bd", 9999.0, 0, 0.6, false, false);
        a.p([0.00028, -0.69972, -297.32972], [0, 0, 0], [2, 7.04, 0.98], "0900bd", 9999.0, 0, 0.6, false, false);
        a.p([0.00035, 12.99035, -204.38965], [0, 0, 0], [2, 10.82, 14.52], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00042, -1.16958, -204.38958], [0, 0, 0], [2, 10.82, 14.52], "0900bd", 0, 0, 0.6, true, false);
        a.p([0.00049, 8.58049, -118.39951], [0, 0, 0], [2, 10.82, 14.52], "0900bd", 0, 0, 0.6, false, false);
        a.p([0, -17.81, -161.4], [0, 0, 0], [2, 32.74, 71.46], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([0.00007, 0.79007, -145.60993], [0, 0, 0], [2, 5.62, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([0.00014, 10.52014, -152.31986], [0, 0, 0], [2, 7.04, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([0.00021, 5.88021, -164.10979], [0, 0, 0], [2, 1.2, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([0.00028, 0.62028, -176.06972], [0, 0, 0], [2, 7.04, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([-0.05965, 11.66035, -191.10965], [0, -2.09, 0], [2, 14.54, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([-0.05958, 0.17042, -191.16958], [0, 2.09, 0], [2, 14.54, 0.98], "6300a1", 9999.0, 0, 0.6, false, false);
        a.p([0.00049, 20.74049, -158.33951], [0, 0, 0], [2, 14.92, 77.78], "6300a1", 9999.0, 0, 0.6, false, false);
        a.y([0, 2.26, -60.26], [0, 0, -1.57], [1.26, 0.4, 1.26], "ffe600,0.5", 0, 0, 0.6, true, 1);
        a.y([0.00007, 2.01007, -100.39993], [0, 0, -1.57], [1.26, 0.4, 1.26], "ffe600,0.5", 0, 0, 0.6, true, 1);
        a.y([0.00014, 2.32014, -54.77986], [0, 0, -1.57], [1.26, 0.4, 1.26], "ffe600,0.5", 0, 0, 0.6, true, 1);
        a.p([0.00021, 6.46021, -161.41979], [0, 0, 0], [1, 18.34, 72.5], "00000a,0.0", 0, 0, 0.6, true, true);
        a.c([0.00035, -0.8596499999999999, -10.56965], true);
        a.c([0.00042, -0.8595800000000001, -19.72958], true);
        a.c([0.00049, -0.8595100000000001, -20.79951], true);
        a.c([0, 2.65, -285.46], true);
        a.c([0.00007, -0.85993, -32.17993], true);
        a.c([0.00014, 2.7201400000000002, -87.60986], true);
        a.c([0.00021, 2.7202100000000002, -68.38979], true);
        a.c([0.00028, 2.62028, -103.13972], true);
        a.c([0.00035, 2.31035, -224.87965], true);
        a.c([0.00042, -0.92958, -234.83958], true);
        a.c([0.00049, 2.65049, -286.40951], true);
        a.c([0, 2.65, -287.33], true);
        a.c([0.00007, 3.10007, -297.36993], true);
        a.e([0.00014, 3.46014, -311.26986]);
    },
    post: function() {
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#0b00d1"));
        cc.set_monkey("cameraDownAngle", 0.0 * Math.PI / 180);
        cc.set_monkey("cameraRightAngle", -90.0 * Math.PI / 180);
        cc.set_monkey("radius", 4.0);
        cc.set_monkey("steer", default_steer * 0.0);
        cc.set_monkey("speed", default_speed * 0.5);
        cc.set_monkey("jumpSpeed", 0.0);
        cc.set_monkey("player.scaling", new BABYLON.Vector3(2.0, 1.0, null));
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -0.6799299999999988) {
                    a.jh(0.6);
                    scene.clearColor = new BABYLON.Color3.FromHexString("#0b00d1");
                    a.g(null, 0.5, null);
                    a.d(null, null, 1.0);
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -125.89993) {
                    a.jh(null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -126.09972) {
                    a.jh(1.0);
                    scene.clearColor = new BABYLON.Color3.FromHexString("#9d00ff");
                    a.g(null, 0.2, null);
                    a.d(null, null, 3.0);
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -197.43972000000002) {
                    a.jh(null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -197.54986) {
                    a.jh(0.6);
                    scene.clearColor = new BABYLON.Color3.FromHexString("#0b00d1");
                    a.g(null, 0.5, null);
                    a.d(null, null, 1.0);
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -238.12985999999998) {
                    a.jh(null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -238.26000000000002) {
                    a.jh(0.6);
                    scene.clearColor = new BABYLON.Color3.FromHexString("#00cc0a");
                    a.g(null, -0.5, null);
                    a.d(null, null, 1.0);
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -275.06) {
                    a.jh(null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -275.48978999999997) {
                    a.jh(0.6);
                    scene.clearColor = new BABYLON.Color3.FromHexString("#0b00d1");
                    a.g(null, 0.5, null);
                    a.d(null, null, 1.0);
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -316.06979) {
                    a.jh(null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.g(null, null, null);
                    a.d(null, null, null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [0.00021, 29.67021, -280.66979], [0, 0, 0], [2, 32.74, 167.36]);
        a.re('P1', [0.00028, 14.04028, -261.26972], [0, 0, 0], [2, 4.46, 3.68]);
        a.re('P2', [0.00035, 13.21035, -267.07965], [0, 0, 0], [2, 4.46, 3.68]);
        a.re('P3', [-0.06958, 13.43042, -273.51958], [0, 0, 0], [2, 6.44, 3.68]);
        a.re('P4', [0.00049, -17.80951, -42.20951], [0, 0, 0], [2, 32.74, 167.36]);
        a.re('P5', [0, -1.15, -34.58], [0, 0, 0], [2, 2, 4.1]);
        a.re('P6', [0.00007, -0.30993, -47.94993], [0, 0, 0], [2, 4.46, 3.86]);
        a.re('P7', [0.00014, 1.81014, -68.65986], [0, 0, 0], [2, 0.72, 9.42]);
        a.re('P8', [0.00021, 0.43021, -76.40979], [0, 0, 0], [2, 0.72, 3.7]);
        a.re('P9', [0.00028, 0.43028, -41.37972], [0, 0, 0], [2, 0.72, 4.26]);
        a.re('P10', [0.00035, 1.81035, -86.92965], [0, 0, 0], [2, 0.72, 12.32]);
        a.re('P11', [0.00042, 3.37042, -96.57958], [0, 0, 0], [2, 0.72, 2.18]);
        a.re('P12', [0.00049, -0.30951, -114.39951], [0, 0, 0], [2, 2.92, 22.54]);
        a.re('P13', [0, 1.92, -215.57], [0, 0, 0], [2, 0.72, 2.4]);
        a.re('P14', [0.00007, -0.30993, -223.66993], [0, 0, 0], [2, 4.46, 3.66]);
        a.re('P15', [0.00014, -17.80986, -280.80986], [0, 0, 0], [2, 32.74, 167.36]);
        a.re('P16', [0.00021, 1.92021, -286.28979], [0, 0, 0], [2, 0.72, 18.48]);
        a.re('P17', [0.00028, 1.92028, -306.30972], [0, 0, 0], [2, 0.72, 13.94]);
        a.re('P18', [0.00035, 1.93035, -60.14965], [0, 0, 0], [2.98, 2.38, 3.28]);
        a.re('P19', [0.00042, 1.67042, -100.39958], [0, 0, 0], [2.7, 2.16, 2.16]);
        a.re('P20', [0.00049, 1.93049, -54.68951], [0, 0, 0], [3.06, 2.44, 3.46]);
        a.re('P21', [0.00035, -1.35965, -69.46965], [0, 0, 0], [1.24, 0.72, 67.74]);
        a.re('P22', [0.00042, -1.35958, -217.25958], [0, 0, 0], [1.24, 0.72, 12.82]);
        a.re('P23', [0.00049, 13.18049, -265.63951], [0, 0, 0], [1.24, 0.72, 12.82]);
        a.re('P24', [0, 5.89, -197.66], [0, 0, 0], [1.2, 3.4, 0.98]);
        a.re('P25', [0.00007, 1.91007, -125.16993], [0, 0, 0], [1.2, 3.4, 0.98]);
        a.re('P26', [0.00014, -1.17986, -103.09986], [0, 0, 0], [2, 7.04, 0.98]);
        a.re('P27', [0.00021, 8.83021, -76.40979], [0, 0, 0], [2, 11.14, 0.82]);
        a.re('P28', [0.00028, -0.69972, -297.32972], [0, 0, 0], [2, 7.04, 0.98]);
        a.re('P29', [0.00035, 12.99035, -204.38965], [0, 0, 0], [2, 10.82, 14.52]);
        a.re('P30', [0.00042, -1.16958, -204.38958], [0, 0, 0], [2, 10.82, 14.52]);
        a.re('P31', [0.00049, 8.58049, -118.39951], [0, 0, 0], [2, 10.82, 14.52]);
        a.re('P32', [0, -17.81, -161.4], [0, 0, 0], [2, 32.74, 71.46]);
        a.re('P33', [0.00007, 0.79007, -145.60993], [0, 0, 0], [2, 5.62, 0.98]);
        a.re('P34', [0.00014, 10.52014, -152.31986], [0, 0, 0], [2, 7.04, 0.98]);
        a.re('P35', [0.00021, 5.88021, -164.10979], [0, 0, 0], [2, 1.2, 0.98]);
        a.re('P36', [0.00028, 0.62028, -176.06972], [0, 0, 0], [2, 7.04, 0.98]);
        a.re('P37', [-0.05965, 11.66035, -191.10965], [0, -2.09, 0], [2, 14.54, 0.98]);
        a.re('P38', [-0.05958, 0.17042, -191.16958], [0, 2.09, 0], [2, 14.54, 0.98]);
        a.re('P39', [0.00049, 20.74049, -158.33951], [0, 0, 0], [2, 14.92, 77.78]);
        a.re('Y0', [0, 2.26, -60.26], [0, 0, -1.57], [1.26, 0.4, 1.26]);
        a.re('Y1', [0.00007, 2.01007, -100.39993], [0, 0, -1.57], [1.26, 0.4, 1.26]);
        a.re('Y2', [0.00014, 2.32014, -54.77986], [0, 0, -1.57], [1.26, 0.4, 1.26]);
        a.re('P40', [0.00021, 6.46021, -161.41979], [0, 0, 0], [1, 18.34, 72.5]);
        a.re('C0', [0.00035, -0.8596499999999999, -10.56965], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [0.00042, -0.8595800000000001, -19.72958], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [0.00049, -0.8595100000000001, -20.79951], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [0, 2.65, -285.46], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [0.00007, -0.85993, -32.17993], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [0.00014, 2.7201400000000002, -87.60986], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [0.00021, 2.7202100000000002, -68.38979], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [0.00028, 2.62028, -103.13972], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [0.00035, 2.31035, -224.87965], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [0.00042, -0.92958, -234.83958], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [0.00049, 2.65049, -286.40951], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [0, 2.65, -287.33], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [0.00007, 3.10007, -297.36993], [0, 0, 0], [2, 2, 2]);
        a.re('E0', [0.00014, 3.46014, -311.26986], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
