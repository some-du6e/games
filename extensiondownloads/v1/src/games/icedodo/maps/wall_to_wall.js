var map = {
    title: "Wall To Wall",
    song: "env2",
    maker: "ABC123",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([0.00014, 0.00014, -2.71986], [0, 0, 0], [2, 0.42, 6.16], "000000", 0, 0, 0.6, false, false);
        a.p([1.49021, 7.21021, -163.52979], [0, 0, 0], [5.3, 0.42, 6.16], "000000", 0, 0, 0.6, false, false);
        a.p([1.49028, 7.17028, -200.24972], [0, 0, 0], [5.3, 0.42, 6.16], "000000", 0, 0, 0.6, false, false);
        a.p([3.84035, 7.70035, -109.50965], [0, 0, -0.19], [0.52, 7.78, 32.36], "005dc7,0.3", 99999999.0, 0, 0.6, false, false);
        a.p([-0.66958, 8.40042, -58.29958], [3.14, -0.02, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.10951, 4.54049, -51.04951], [3.14, -0.26, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.24, 5.56, -58.38], [3.14, -0.02, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.28993, 6.09007, -65.93993], [3.14, -0.13, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.72986, 9.03014, -65.93986], [3.14, -0.15, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.22979, 6.58021, -73.53979], [3.11, 0, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.56972, 7.59028, -51.08972], [3.14, -0.21, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([-0.68965, 9.55035, -73.51965], [3.11, 0, -0.15], [2.5, 0.86, 7.76], "005dc7", 99999999.0, 0, 0.6, false, false);
        a.p([3.68042, 10.93042, -181.77958], [0, 0, -0.19], [0.52, 7.78, 32.36], "07ab0d,0.3", 0, 0, 0.6, false, false);
        a.p([0.20049, 6.18049, -133.47951], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-0.07, 7, -142.46], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-0.50993, 10.82007, -142.45993], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-0.71986, 11.96014, -151.41986], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-0.11979, 8.16021, -151.41979], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-0.35972, 9.39028, -133.47972], [3.14, 0.01, 0], [2.5, 0.86, 7.76], "4a057f", 99999999.0, 0, 0.6, false, false);
        a.p([-1.22965, 10.47035, -181.98965], [0, 0, 0.13], [0.52, 7.78, 32.36], "4a057f,0.3", 0, 0, 0.6, false, false);
        a.p([1.32042, 3.82042, -26.35958], [0, 0, -0.19], [0.52, 7.78, 32.36], "c31d1d,0.3", 0, 0, 0.6, false, false);
        a.p([0.58049, 2.59049, -38.59951], [0, 0, 0], [0.86, 0.86, 3.48], "e0d100", 99999999.0, 0, 0.6, false, false);
        a.p([1.39, 6.36, -12.58], [0, 0, 0], [0.86, 0.86, 3.48], "e0d100", 99999999.0, 0, 0.6, false, false);
        a.p([0.58007, 1.97007, -18.31993], [0, 0, 0], [0.86, 0.86, 3.48], "e0d100", 99999999.0, 0, 0.6, false, false);
        a.p([0.92014, 4.39014, -25.22986], [0, 0, 0], [0.86, 0.86, 3.48], "e0d100", 99999999.0, 0, 0.6, false, false);
        a.p([1.31021, 6.20021, -32.71979], [0, 0, 0], [0.86, 0.86, 3.48], "e0d100", 99999999.0, 0, 0.6, false, false);
        a.p([-1.44972, 6.58028, -63.01972], [0, 0, 0.13], [0.52, 7.78, 32.36], "e0d100,0.3", 0, 0, 0.6, false, false);
        a.p([-1.44965, 9.54035, -145.57965], [0, 0, 0.13], [0.52, 7.78, 32.36], "f0800a,0.3", 0, 0, 0.6, false, false);
        a.p([2.66042, 5.49042, -93.82958], [0.65, 0.17, -0.22], [1.34, 2.06, 2.34], "f0800a", 0, 0, 0.6, false, false);
        a.p([2.50049, 6.40049, -102.30951], [0, 0.32, -0.28], [1.62, 2.06, 5.78], "f0800a", 0, 0, 0.6, false, false);
        a.p([2.79, 7.53, -107.74], [0, 0.09, -0.28], [1.62, 2.06, 5.78], "f0800a", 0, 0, 0.6, false, false);
        a.p([2.92007, 7.97007, -113.50993], [0, 0.09, -0.28], [1.62, 2.06, 5.78], "f0800a", 0, 0, 0.6, false, false);
        a.p([3.05014, 8.42014, -119.00986], [0, 0.09, -0.28], [1.62, 2.06, 5.78], "f0800a", 0, 0, 0.6, false, false);
        a.p([2.24021, 5.59021, -97.23979], [0, 0, -0.28], [1.62, 2.06, 5.78], "f0800a", 0, 0, 0.6, false, false);
        a.p([3.05028, 8.62028, -123.69972], [0, -0.01, -0.28], [1.62, 2.04, 4.18], "f0800a", 0, 0, 0.6, false, false);
        a.p([0.00035, 1.48035, -8.22965], [0, 0.56, 0], [2, 0.42, 6.16], "0.0", 0, 0, 0.6, false, false);
        a.p([0.00042, 5.15042, -44.73958], [0, 0, 0], [3.82, 0.42, 6.16], "0.0", 0, 0, 0.6, false, false);
        a.p([1.15049, 4.73049, -86.05951], [0, 0, 0], [5.3, 0.42, 16.36], "0.0", 0, 0, 0.6, false, false);
        a.p([1.49, 7.21, -126.93], [0, 0, 0], [5.3, 0.42, 6.16], "0.0", 0, 0, 0.6, false, false);
        a.e([1.45014, 8.17014, -202.93986]);
    },
    post: function() {
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -9.42972) {
                    steer = default_steer * 2.0;
                    a.g(-3.0, null, null);
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -40.749719999999996) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -47.08) {
                    steer = default_steer * 2.0;
                    a.g(3.0, null, null);
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -78.4) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -92.57965) {
                    steer = default_steer * 2.0;
                    a.g(-3.0, null, null);
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -123.89965) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -129.63993) {
                    steer = default_steer * 2.0;
                    a.g(3.0, null, null);
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -160.95992999999999) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -162.23993) {
                    steer = default_steer * 2.0;
                    a.g(null, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -167.39993) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -167.94993) {
                    steer = default_steer * 2.0;
                    a.g(-3.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -171.52992999999998) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -171.66958) {
                    steer = default_steer * 2.0;
                    a.g(3.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -175.54958) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -175.79986) {
                    steer = default_steer * 2.0;
                    a.g(-3.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -179.37985999999998) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -179.62951) {
                    steer = default_steer * 2.0;
                    a.g(3.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 17:
                if (PZ < -183.50951) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -183.74979) {
                    steer = default_steer * 2.0;
                    a.g(-3.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 19:
                if (PZ < -197.34979) {
                    steer = cc.get("steer", null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [0.00014, 0.00014, -2.71986], [0, 0, 0], [2, 0.42, 6.16]);
        a.re('P1', [1.49021, 7.21021, -163.52979], [0, 0, 0], [5.3, 0.42, 6.16]);
        a.re('P2', [1.49028, 7.17028, -200.24972], [0, 0, 0], [5.3, 0.42, 6.16]);
        a.re('P3', [3.84035, 7.70035, -109.50965], [0, 0, -0.19], [0.52, 7.78, 32.36]);
        a.re('P4', [-0.66958, 8.40042, -58.29958], [3.14, -0.02, -0.15], [2.5, 0.86, 7.76]);
        a.re('P5', [-0.10951, 4.54049, -51.04951], [3.14, -0.26, -0.15], [2.5, 0.86, 7.76]);
        a.re('P6', [-0.24, 5.56, -58.38], [3.14, -0.02, -0.15], [2.5, 0.86, 7.76]);
        a.re('P7', [-0.28993, 6.09007, -65.93993], [3.14, -0.13, -0.15], [2.5, 0.86, 7.76]);
        a.re('P8', [-0.72986, 9.03014, -65.93986], [3.14, -0.15, -0.15], [2.5, 0.86, 7.76]);
        a.re('P9', [-0.22979, 6.58021, -73.53979], [3.11, 0, -0.15], [2.5, 0.86, 7.76]);
        a.re('P10', [-0.56972, 7.59028, -51.08972], [3.14, -0.21, -0.15], [2.5, 0.86, 7.76]);
        a.re('P11', [-0.68965, 9.55035, -73.51965], [3.11, 0, -0.15], [2.5, 0.86, 7.76]);
        a.re('P12', [3.68042, 10.93042, -181.77958], [0, 0, -0.19], [0.52, 7.78, 32.36]);
        a.re('P13', [0.20049, 6.18049, -133.47951], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P14', [-0.07, 7, -142.46], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P15', [-0.50993, 10.82007, -142.45993], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P16', [-0.71986, 11.96014, -151.41986], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P17', [-0.11979, 8.16021, -151.41979], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P18', [-0.35972, 9.39028, -133.47972], [3.14, 0.01, 0], [2.5, 0.86, 7.76]);
        a.re('P19', [-1.22965, 10.47035, -181.98965], [0, 0, 0.13], [0.52, 7.78, 32.36]);
        a.re('P20', [1.32042, 3.82042, -26.35958], [0, 0, -0.19], [0.52, 7.78, 32.36]);
        a.re('P21', [0.58049, 2.59049, -38.59951], [0, 0, 0], [0.86, 0.86, 3.48]);
        a.re('P22', [1.39, 6.36, -12.58], [0, 0, 0], [0.86, 0.86, 3.48]);
        a.re('P23', [0.58007, 1.97007, -18.31993], [0, 0, 0], [0.86, 0.86, 3.48]);
        a.re('P24', [0.92014, 4.39014, -25.22986], [0, 0, 0], [0.86, 0.86, 3.48]);
        a.re('P25', [1.31021, 6.20021, -32.71979], [0, 0, 0], [0.86, 0.86, 3.48]);
        a.re('P26', [-1.44972, 6.58028, -63.01972], [0, 0, 0.13], [0.52, 7.78, 32.36]);
        a.re('P27', [-1.44965, 9.54035, -145.57965], [0, 0, 0.13], [0.52, 7.78, 32.36]);
        a.re('P28', [2.66042, 5.49042, -93.82958], [0.65, 0.17, -0.22], [1.34, 2.06, 2.34]);
        a.re('P29', [2.50049, 6.40049, -102.30951], [0, 0.32, -0.28], [1.62, 2.06, 5.78]);
        a.re('P30', [2.79, 7.53, -107.74], [0, 0.09, -0.28], [1.62, 2.06, 5.78]);
        a.re('P31', [2.92007, 7.97007, -113.50993], [0, 0.09, -0.28], [1.62, 2.06, 5.78]);
        a.re('P32', [3.05014, 8.42014, -119.00986], [0, 0.09, -0.28], [1.62, 2.06, 5.78]);
        a.re('P33', [2.24021, 5.59021, -97.23979], [0, 0, -0.28], [1.62, 2.06, 5.78]);
        a.re('P34', [3.05028, 8.62028, -123.69972], [0, -0.01, -0.28], [1.62, 2.04, 4.18]);
        a.re('P35', [0.00035, 1.48035, -8.22965], [0, 0.56, 0], [2, 0.42, 6.16]);
        a.re('P36', [0.00042, 5.15042, -44.73958], [0, 0, 0], [3.82, 0.42, 6.16]);
        a.re('P37', [1.15049, 4.73049, -86.05951], [0, 0, 0], [5.3, 0.42, 16.36]);
        a.re('P38', [1.49, 7.21, -126.93], [0, 0, 0], [5.3, 0.42, 6.16]);
        a.re('E0', [1.45014, 8.17014, -202.93986], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
