var map = {
    title: "Space Canyon",
    song: "env2",
    maker: "Carrots",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([-0.88, -5.02, -15.57], [0, 0, 0], [6, 0.5, 40]);
        a.p([2.55, 4.59, -25.46], [0, 0, 0], [1, 20, 60]);
        a.p([-4.09, 4.59, -25.46], [0, 0, 0], [1, 20, 60]);
        a.p([10.6, 4.59, -80.8], [-0.52, 0, 0], [1, 20, 60]);
        a.p([16.91, 4.59, -80.8], [-0.52, 0, 0], [1, 20, 60]);
        a.p([25.31, 4.59, -121.46], [0, 0, 0], [1, 20, 30]);
        a.p([20.27, 4.59, -144.47], [0.52, 0, 0], [1, 20, 20]);
        a.p([6.86, 4.59, -158.1], [1.05, 0, 0], [1, 20, 20]);
        a.p([-10.74, 4.59, -162.73], [1.57, 0, 0], [1, 20, 20]);
        a.p([-53.7, 8.73, -142.95], [2.09, 0, 0], [1, 20, 80]);
        a.p([-97.84, 4.59, -121.61], [-1.4, 0, 0], [1, 20, 20]);
        a.p([31.82, 4.59, -121.46], [0, 0, 0], [1, 20, 30]);
        a.p([25.99, 4.59, -146.35], [0.52, 0, 0], [1, 20, 24]);
        a.p([10.17, 4.59, -162.39], [1.05, 0, 0], [1, 20, 24]);
        a.p([-10.74, 4.59, -168.46], [1.57, 0, 0], [1, 20, 22]);
        a.p([-54.4, 4.59, -149.79], [2.09, 0, 0], [1, 20, 80]);
        a.p([-98.7, 4.59, -128.27], [-1.4, 0, 0], [1, 20, 20]);
        a.p([-124.95, 4.59, -126.31], [-1.92, 0, 0], [1, 20, 40]);
        a.p([-108.65, 8.76, -124.29], [-1.58, 0.01, 0], [4, 0.54, 16]);
        a.p([-126.16, 4.08, -210.79], [0, 0, 0], [1, 40, 160]);
        a.p([-108.35, 4.59, -206.17], [0, 0, 0], [1, 40, 160]);
        a.p([-0.63, -3.64, -48.8], [0, 0, 0], [1.5, 0.5, 16]);
        a.p([-0.63, -3.8, -40.09], [0.52, 0.26, 0.09], [1.5, 0.5, 16]);
        a.p([-0.63, -3.8, -40.09], [-0.52, 0.26, 0], [1.5, 0.5, 16]);
        a.p([2.47, -4.14, -58.53], [0.61, 0, 0.36], [14, 2, 2]);
        a.p([3.52, -2.51, -63.28], [-4.84, -0.17, 0.35], [14, 2, 2]);
        a.p([7.4, -0.31, -70.93], [-0.52, 0, 0], [14, 2, 6]);
        a.p([17.47, 0.66, -83.71], [-2.13, -0.79, -0.12], [34, 2, 2]);
        a.p([26.27, 0.89, -103.79], [0, 0, 0], [1.5, 0.5, 16]);
        a.p([27.06, 2.25, -119.58], [-0.12, 0.17, 0], [1.5, 0.5, 16]);
        a.p([28.73, -10.7, -129.87], [0, 0, 0], [1, 30, 1]);
        a.p([28.73, -9.24, -141.64], [0, 0, 0], [1, 30, 1]);
        a.p([17.35, -6.49, -154.09], [0, 0, 0], [1, 30, 1]);
        a.p([3.1, -4.61, -161.05], [0, 0, 0], [1, 30, 1]);
        a.p([-11.55, -4.04, -165.84], [0, 0, 0], [1, 30, 1]);
        a.p([-19.05, -4.04, -163.14], [0, 0, 0], [1, 30, 1]);
        a.p([29.67, 3.39, -135.71], [0.09, 0.3, 0], [1.5, 0.54, 5]);
        a.p([22.84, 5.31, -146.8], [0.61, 0.3, 0], [1.5, 0.54, 12]);
        a.p([10.13, 7.72, -156.94], [1.09, 0.24, 0], [1.5, 0.54, 10]);
        a.p([-3.39, 9.03, -164.64], [1.31, 0.09, 0], [1.5, 0.54, 10]);
        a.p([-25.87, 9.29, -163.01], [1.92, 0, 0], [1.5, 0.54, 8]);
        a.p([-39.68, 8.65, -157.21], [2.09, 0, -1.57], [1, 30, 1]);
        a.p([-32.62, 9.29, -159.49], [2.18, 0.17, 0], [1.5, 0.54, 8]);
        a.p([-46.95, 9.29, -150.7], [2.09, 0, 0], [1.5, 0.54, 14]);
        a.p([-56.74, 8.22, -144.14], [-1.22, 0.26, -0.79], [1.5, 2, 24]);
        a.p([-68.33, 6.98, -138.62], [-0.91, -0.26, -0.79], [2, 2, 20]);
        a.p([-79.71, 7.63, -131.66], [2.09, 0, 0], [6, 0.54, 12]);
        a.p([-94.44, 9.12, -125.59], [-1.4, 0, 0], [6, 0.54, 14]);
        a.p([-86.97, 8.59, -128.79], [1.93, 0.52, 0], [1.5, 0.54, 4]);
        a.p([-117.4, 12.53, -165.85], [-1.57, 0, -0.17], [6, 0.54, 4]);
        a.p([-117.76, 9.12, -128.32], [-2.13, -0.09, 0], [4, 0.54, 14]);
        a.p([-119.61, 13.86, -180.83], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-122.92, 10.3, -138.13], [-3.28, -0.09, 0], [4, 0.54, 16]);
        a.p([-120.2, 11.28, -150.26], [-3.5, -0.09, 0], [4, 0.54, 10]);
        a.p([-117.94, 11.92, -159.53], [-3.25, -0.09, 0], [4, 0.54, 10]);
        a.p([-119.61, 13.86, -180.83], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-114.26, 14.17, -189.43], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-114.26, 14.17, -189.43], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-118.29, 11.18, -203.42], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-118.29, 11.18, -203.42], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-112.54, 14.61, -202.64], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-112.54, 14.61, -202.64], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-111.5, 8.83, -219.03], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-111.5, 8.83, -219.03], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-120.91, 8.83, -219.03], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-120.91, 8.83, -219.03], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-117.93, 6.65, -231.51], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-117.93, 6.65, -231.51], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-109.57, 13.68, -226.63], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-109.57, 13.68, -226.63], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-119.82, 3.46, -243.55], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-119.82, 3.46, -243.55], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-109.57, 0.56, -256.45], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-109.57, 0.56, -256.45], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-117.85, -2.87, -264.36], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-117.85, -2.87, -264.36], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-112.7, -7.23, -253.69], [-0.79, -1.57, -1.57], [4, 4, 4]);
        a.p([-112.7, -7.23, -253.69], [-0.79, -0.79, -0.79], [4, 4, 4]);
        a.p([-116.7, 0.87, -283.88], [0, 0, 0], [6, 8, 1]);
        a.p([-116.7, -4.74, -282.47], [0, -0.79, 0], [6, 8, 1]);
        a.y([28.67, 2.41, -129.92], [0, 0, 0], [8, 1, 8]);
        a.y([28.67, 3.87, -141.69], [0, 0, 0], [8, 1, 8]);
        a.y([17.29, 6.62, -154.14], [0, 0, 0], [8, 1, 8]);
        a.y([3.04, 8.51, -161.1], [0, 0, 0], [8, 1, 8]);
        a.y([-11.61, 9.07, -165.89], [0, 0, 0], [8, 1, 8]);
        a.y([-19.1, 9.07, -163.19], [0, 0, 0], [8, 1, 8]);
        a.y([-39.04, 8.4, -155.29], [2.09, 0, -1.57], [8, 1, 8]);
        a.e([-116.67, -2.63, -283.12]);
    },
    post: function() {},
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -168.11) {
                    update.set_gravity(default_gravity * 0.03);
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -288.11) {
                    update.set_gravity(default_gravity);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
    },
    physics_update: function() {},
    render_update: function() {}
}


