var map = {
    title: "Dark Realm",
    song: "env2",
    maker: "<rytai3",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([98.2, 27.040239999999997, -786.87]);
        a.p([61.59, 6.20006, -399.37], [0, 0, 0], [10.98, 2, 1.98], 1, 0, 0, 0.6);
        a.p([3.24, -1.45988, -376.85], [0, 0, 0], [10.98, 2, 32.54], 1, 0, 0, 0.6);
        a.p([86.07, 8.08018, -392.54], [0, 0, 0.57], [14.74, 2.68, 3.74], 1, 0, 0, 0.6);
        a.p([0, 2.7302400000000002, -166.41], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.p([-1.77, -0.8297, -166.41], [0, 0, 0], [1.86, 5.54, 90.16], 2.0, 0, 0, 0.6);
        a.p([1.64, -0.83, -166.41], [0, 0, 0], [1.86, 5.54, 90.16], 2.0, 0, 0, 0.6);
        a.p([0, -0.82994, -166.41], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.p([0, 2.73012, -255.98], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.y([-1.25, -2.64982, -346.41], [0, -1.58, 0], [4.18, 34.52, 4.18], 2.0, 0, 0, 0.6);
        a.p([36.27, 5.96024, -401.3], [-1.62, 0.04, 0], [2.2, 1.04, 15.12], 2.0, 0, 0, 0.6);
        a.p([49.39, 6.4203, -399.75], [-1.62, 0.04, 0], [2.2, 1.04, 15.12], 2.0, 0, 0, 0.6);
        a.p([98.55, 31.58, -557.48], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.p([98.55, 28.01006, -647.05], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.p([100.19, 28.01012, -647.05], [0, 0, 0], [1.86, 5.54, 90.16], 2.0, 0, 0, 0.6);
        a.p([96.78, 28.010180000000002, -647.05], [0, 0, 0], [1.86, 5.54, 90.16], 2.0, 0, 0, 0.6);
        a.p([98.55, 31.58024, -647.05], [0, 0, 0], [4.68, 2, 90.16], 2.0, 0, 0, 0.6);
        a.p([69.94, 6.2002999999999995, -402.97], [0.79, 0, 0], [10.98, 2, 1.98], 2.0, 0, 0, 0.6);
        a.p([69.94, 6.2, -395.85], [-0.79, 0, 0], [10.98, 2, 1.98], 2.0, 0, 0, 0.6);
        a.p([78.16, 6.20006, -406.33], [0, 0, 0], [10.98, 2, 1.98], 2.0, 0, 0, 0.6);
        a.p([86.07, 7.900119999999999, -406.65], [0, 0, 0.57], [14.74, 2.68, 3.74], 2.0, 0, 0, 0.6);
        a.p([102.78, 11.94018, -399.88], [0, 0, 0], [22.38, 2, 19.36], 2.0, 0, 0, 0.6);
        a.p([123.49, 14.92024, -400.63], [2.12, 0, 0], [22.38, 9.7, 3.76], 2.0, 0, 0, 0.6);
        a.p([124.36, 11.9403, -399.88], [0, 0, 0], [22.38, 2, 19.36], 2.0, 0, 0, 0.6);
        a.p([113.14, 14.92, -404.91], [0, 0, 0], [1.96, 9.7, 9.62], 2.0, 0, 0, 0.6);
        a.p([102.78, 14.920060000000001, -399.88], [0, 0, 0], [22.38, 9.7, 3.76], 2.0, 0, 0, 0.6);
        a.p([121.77, 20.910120000000003, -435.79], [1.58, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([117.07, 11.94018, -448.24], [0, 0, 0], [39.82, 2, 42.46], 2.0, 0, 0, 0.6);
        a.p([110.37, 20.910239999999998, -436.66], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([129.92, 20.910300000000003, -443.97], [3.15, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([131.45, 20.91, -451.92], [1.58, 0, 0], [3.1, 17.7, 11.54], 2.0, 0, 0, 0.6);
        a.p([104.11, 20.910059999999998, -435.79], [1.58, 0, 0], [3.1, 17.7, 14.7], 2.0, 0, 0, 0.6);
        a.p([123.65, 20.910120000000003, -445.56], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([121.77, 20.91018, -434.38], [1.58, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([98.3, 20.910239999999998, -444.56], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([98.3, 20.910300000000003, -462.07], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([98.3, 20.91, -479.42], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([78.16, 6.20006, -392.54], [0, 0, 0], [10.98, 2, 1.98], 2.0, 0, 0, 0.6);
        a.p([110.37, 20.910120000000003, -446.66], [1.57, 0, 0], [3.1, 17.7, 15.72], 2.0, 0, 0, 0.6);
        a.p([115.45, 20.91018, -455.93], [0, 0, 0], [3.1, 17.7, 19.36], 2.0, 0, 0, 0.6);
        a.p([127.2, 20.910239999999998, -455.69], [1.57, 0, 0], [3.1, 17.7, 15.72], 2.0, 0, 0, 0.6);
        a.p([98.09, 13.6603, -392.55], [0, 0, 0], [3.44, 2, 4.92], 3.0, 100000000.0, 0, 0.6);
        a.p([105.69, 13.66, -398.94], [0, 0, 0], [3.44, 2, 4.92], 3.0, 100000000.0, 0, 0.6);
        a.p([111.24, 13.660060000000001, -405.96], [0, 0, 0], [3.44, 2, 4.92], 3.0, 100000000.0, 0, 0.6);
        a.p([0, -1.33988, -316.51], [0, 0, 0], [10.98, 2, 32.54], 3.0, 0, 0, 0.6);
        a.p([-1.77, -0.82982, -255.98], [0, 0, 0], [1.86, 5.54, 90.16], 3.0, 0, 0, 0.6);
        a.p([1.64, -0.8297599999999999, -255.98], [0, 0, 0], [1.86, 5.54, 90.16], 3.0, 0, 0, 0.6);
        a.p([0, -0.8297, -255.98], [0, 0, 0], [4.68, 2, 90.16], 3.0, 0, 0, 0.6);
        a.p([22.62, 1.98, -401.3], [-1.61, 0.53, -0.02], [3.76, 1.04, 15.14], 3.0, 0, 0, 0.6);
        a.p([8.96, -1.04994, -394.29], [-0.68, 0, 0], [3.76, 1.04, 15.14], 3.0, 0, 0, 0.6);
        a.p([98.55, 28.01012, -557.48], [0, 0, 0], [4.68, 2, 90.16], 3.0, 0, 0, 0.6);
        a.p([100.19, 28.010180000000002, -557.48], [0, 0, 0], [1.86, 5.54, 90.16], 3.0, 0, 0, 0.6);
        a.p([96.78, 28.01024, -557.48], [0, 0, 0], [1.86, 5.54, 90.16], 3.0, 0, 0, 0.6);
        a.p([98.55, 28.0103, -530.49], [0, 0, 0], [4.68, 2, 90.16], 3.0, 0, 0, 0.6);
        a.p([115.77, 11.94, -418], [0, 0, 0], [4.44, 2, 19.36], 3.0, 0, 0, 0.6);
        a.p([125.9, 20.680059999999997, -441.18], [0, 2.01, 0], [3.1, 3.18, 19.36], 3.0, 0, 0, 0.6);
        a.c([-1.25, 0.23024, -328.74], true);
        a.c([-1.25, 0.2303, -317.47], true);
        a.c([-1.25, 0.22999999999999998, -310.81], true);
        a.c([42.75, 7.2500599999999995, -399.66], true);
        a.p([0, -0.82988, -15.65], [0, 0, 0], [7.68, 2, 34.76], 1, 0, 0, 0.6);
        a.p([-4.49, 1.3001800000000001, -16.94], [-0.19, 0, 0], [1.1, 6.78, 34.76], 1, 0, 0, 0.6);
        a.p([4.18, 1.30024, -16.94], [0.19, 0, 0], [1.1, 6.78, 34.76], 1, 0, 0, 0.6);
        a.s([-1.25, -5.4497, -360.98], 11.44, 3.0, 0, 0, 0.6);
        a.y([15.17, -1.08, -401.71], [0, 0, 0], [9.28, 1.14, 9.28], 2.0, 0, 0, 0.6);
        a.p([0, -0.82994, -77.37], [0, 0, 0], [4.68, 2, 90.16], 1, 0, 0, 0.6);
        a.p([1.64, -0.82988, -77.37], [0, 0, 0], [1.86, 5.54, 90.16], 1, 0, 0, 0.6);
        a.p([-1.77, -0.82982, -77.37], [0, 0, 0], [1.86, 5.54, 90.16], 1, 0, 0, 0.6);
        a.p([0, 2.7302400000000002, -77.37], [0, 0, 0], [4.68, 2, 90.16], 1, 0, 0, 0.6);
        a.p([98.55, 31.5803, -736.1], [0, 0, 0], [4.68, 2, 90.16], 1, 0, 0, 0.6);
        a.p([96.78, 28.01, -736.1], [0, 0, 0], [1.86, 5.54, 90.16], 1, 0, 0, 0.6);
        a.p([100.19, 28.01006, -736.1], [0, 0, 0], [1.86, 5.54, 90.16], 1, 0, 0, 0.6);
        a.p([98.55, 28.01012, -736.1], [0, 0, 0], [4.68, 2, 90.16], 1, 0, 0, 0.6);
        a.p([98.55, 25.75018, -774.84], [0, 0, 0], [4.68, 2, 90.16], 1, 0, 0, 0.6);
    },
    post: function() {},
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -32.870000000000005) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now entering the dark realm");
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -133.69) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -134.01) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now entering the dark realm");
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -234.82999999999998) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -235.40000000000003) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now entering the dark realm");
                    this.section_id += 1
                }
                break;
            case 5:
                if (PZ < -298.8) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -383.57000000000005) {
                    steer = default_steer * 2.0;
                    this.section_id += 1
                }
                break;
            case 7:
                if (PZ < -408.37) {
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -426.90999999999997) {
                    steer = default_steer * 3.0;
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -467.73) {
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -514.67) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now exiting the dark realm");
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -578.07) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -578.64) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now exiting the dark realm");
                    this.section_id += 1
                }
                break;
            case 13:
                if (PZ < -679.4599999999999) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -679.7800000000001) {
                    speed = default_speed * 5.0;
                    a.msg_set("Now exiting the dark realm");
                    this.section_id += 1
                }
                break;
            case 15:
                if (PZ < -780.6) {
                    speed = default_speed;
                    a.msg_del();
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [61.59, 6.20006, -399.37], [0, 0, 0], [10.98, 2, 1.98]);
        a.re('P1', [3.24, -1.45988, -376.85], [0, 0, 0], [10.98, 2, 32.54]);
        a.re('P2', [86.07, 8.08018, -392.54], [0, 0, 0.57], [14.74, 2.68, 3.74]);
        a.re('P3', [0, 2.7302400000000002, -166.41], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P4', [-1.77, -0.8297, -166.41], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P5', [1.64, -0.83, -166.41], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P6', [0, -0.82994, -166.41], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P7', [0, 2.73012, -255.98], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('Y0', [-1.25, -2.64982, -346.41], [0, -1.58, 0], [4.18, 34.52, 4.18]);
        a.re('P8', [36.27, 5.96024, -401.3], [-1.62, 0.04, 0], [2.2, 1.04, 15.12]);
        a.re('P9', [49.39, 6.4203, -399.75], [-1.62, 0.04, 0], [2.2, 1.04, 15.12]);
        a.re('P10', [98.55, 31.58, -557.48], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P11', [98.55, 28.01006, -647.05], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P12', [100.19, 28.01012, -647.05], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P13', [96.78, 28.010180000000002, -647.05], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P14', [98.55, 31.58024, -647.05], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P15', [69.94, 6.2002999999999995, -402.97], [0.79, 0, 0], [10.98, 2, 1.98]);
        a.re('P16', [69.94, 6.2, -395.85], [-0.79, 0, 0], [10.98, 2, 1.98]);
        a.re('P17', [78.16, 6.20006, -406.33], [0, 0, 0], [10.98, 2, 1.98]);
        a.re('P18', [86.07, 7.900119999999999, -406.65], [0, 0, 0.57], [14.74, 2.68, 3.74]);
        a.re('P19', [102.78, 11.94018, -399.88], [0, 0, 0], [22.38, 2, 19.36]);
        a.re('P20', [123.49, 14.92024, -400.63], [2.12, 0, 0], [22.38, 9.7, 3.76]);
        a.re('P21', [124.36, 11.9403, -399.88], [0, 0, 0], [22.38, 2, 19.36]);
        a.re('P22', [113.14, 14.92, -404.91], [0, 0, 0], [1.96, 9.7, 9.62]);
        a.re('P23', [102.78, 14.920060000000001, -399.88], [0, 0, 0], [22.38, 9.7, 3.76]);
        a.re('P24', [121.77, 20.910120000000003, -435.79], [1.58, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P25', [117.07, 11.94018, -448.24], [0, 0, 0], [39.82, 2, 42.46]);
        a.re('P26', [110.37, 20.910239999999998, -436.66], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P27', [129.92, 20.910300000000003, -443.97], [3.15, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P28', [131.45, 20.91, -451.92], [1.58, 0, 0], [3.1, 17.7, 11.54]);
        a.re('P29', [104.11, 20.910059999999998, -435.79], [1.58, 0, 0], [3.1, 17.7, 14.7]);
        a.re('P30', [123.65, 20.910120000000003, -445.56], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P31', [121.77, 20.91018, -434.38], [1.58, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P32', [98.3, 20.910239999999998, -444.56], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P33', [98.3, 20.910300000000003, -462.07], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P34', [98.3, 20.91, -479.42], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P35', [78.16, 6.20006, -392.54], [0, 0, 0], [10.98, 2, 1.98]);
        a.re('P36', [110.37, 20.910120000000003, -446.66], [1.57, 0, 0], [3.1, 17.7, 15.72]);
        a.re('P37', [115.45, 20.91018, -455.93], [0, 0, 0], [3.1, 17.7, 19.36]);
        a.re('P38', [127.2, 20.910239999999998, -455.69], [1.57, 0, 0], [3.1, 17.7, 15.72]);
        a.re('P39', [98.09, 13.6603, -392.55], [0, 0, 0], [3.44, 2, 4.92]);
        a.re('P40', [105.69, 13.66, -398.94], [0, 0, 0], [3.44, 2, 4.92]);
        a.re('P41', [111.24, 13.660060000000001, -405.96], [0, 0, 0], [3.44, 2, 4.92]);
        a.re('P42', [0, -1.33988, -316.51], [0, 0, 0], [10.98, 2, 32.54]);
        a.re('P43', [-1.77, -0.82982, -255.98], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P44', [1.64, -0.8297599999999999, -255.98], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P45', [0, -0.8297, -255.98], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P46', [22.62, 1.98, -401.3], [-1.61, 0.53, -0.02], [3.76, 1.04, 15.14]);
        a.re('P47', [8.96, -1.04994, -394.29], [-0.68, 0, 0], [3.76, 1.04, 15.14]);
        a.re('P48', [98.55, 28.01012, -557.48], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P49', [100.19, 28.010180000000002, -557.48], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P50', [96.78, 28.01024, -557.48], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P51', [98.55, 28.0103, -530.49], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P52', [115.77, 11.94, -418], [0, 0, 0], [4.44, 2, 19.36]);
        a.re('P53', [125.9, 20.680059999999997, -441.18], [0, 2.01, 0], [3.1, 3.18, 19.36]);
        a.re('C0', [-1.25, 0.23024, -328.74], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-1.25, 0.2303, -317.47], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-1.25, 0.22999999999999998, -310.81], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [42.75, 7.2500599999999995, -399.66], [0, 0, 0], [2, 2, 2]);
        a.re('P54', [0, -0.82988, -15.65], [0, 0, 0], [7.68, 2, 34.76]);
        a.re('P55', [-4.49, 1.3001800000000001, -16.94], [-0.19, 0, 0], [1.1, 6.78, 34.76]);
        a.re('P56', [4.18, 1.30024, -16.94], [0.19, 0, 0], [1.1, 6.78, 34.76]);
        a.re('S0', [-1.25, -5.4497, -360.98], [0, 0, 0], [11.44, 11.44, 11.44]);
        a.re('Y1', [15.17, -1.08, -401.71], [0, 0, 0], [9.28, 1.14, 9.28]);
        a.re('P57', [0, -0.82994, -77.37], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P58', [1.64, -0.82988, -77.37], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P59', [-1.77, -0.82982, -77.37], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P60', [0, 2.7302400000000002, -77.37], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P61', [98.55, 31.5803, -736.1], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P62', [96.78, 28.01, -736.1], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P63', [100.19, 28.01006, -736.1], [0, 0, 0], [1.86, 5.54, 90.16]);
        a.re('P64', [98.55, 28.01012, -736.1], [0, 0, 0], [4.68, 2, 90.16]);
        a.re('P65', [98.55, 25.75018, -774.84], [0, 0, 0], [4.68, 2, 90.16]);
    },
    physics_update: function() {},
    render_update: function() {}
}
