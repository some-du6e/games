var map = {
    title: "Ambush",
    song: "env2",
    maker: "Xdoomination & skilledandkilled",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([29.84, -0.7, -314.91]);
        a.c([0.5, -4.399940000000001, -46.82], true);
        a.c([0.1, -3.89988, -39.6], true);
        a.c([-0.5, -4.89982, -54.05], true);
        a.c([0.5, -5.899760000000001, -63.48], true);
        a.c([0.5, -6.899700000000001, -71.61], true);
        a.c([-0.5, -7.6, -79.01], true);
        a.c([0.5, -8.39994, -88.31], true);
        a.c([0.3, -9.19988, -97.25], true);
        a.c([-0.5, -9.89982, -105.63], true);
        a.c([-0.5, -10.599760000000002, -115.11], true);
        a.c([-0.5, -11.6997, -122.46], true);
        a.c([0.5, -12.4, -128.2], true);
        a.c([-0.5, -13.19994, -134.09], true);
        a.c([0.82, -0.8998800000000001, -10.75], true);
        a.c([0.24, -0.89982, -10.86], true);
        a.c([-0.78, -0.89976, -15.66], true);
        a.c([-0.04, -0.8997, -15.89], true);
        a.c([32.48, -5.859940000000001, -313.31], true);
        a.c([30.91, -5.859880000000001, -313.31], true);
        a.c([30.91, -5.85982, -312.86], true);
        a.c([31.61, -5.8597600000000005, -312.86], true);
        a.c([29.09, -6.4397, -314.84], true);
        a.c([29.09, -6.44, -314.16], true);
        a.c([29.09, -6.439940000000001, -315.57], true);
        a.c([29.09, -6.4398800000000005, -313.17], true);
        a.c([29.09, -6.43982, -312.5], true);
        a.c([29.82, -6.439760000000001, -312.5], true);
        a.c([30.23, -6.4397, -312.5], true);
        a.c([31.57, -5.86, -313.31], true);
        a.c([32.39, -5.859940000000001, -312.86], true);
        a.c([4.86, -8.59988, -171.36], true);
        a.c([11.57, -8.59982, -170.45], true);
        a.c([3.43, -3.03976, -161.65], true);
        a.c([4.86, -9.899700000000001, -178.54], true);
        a.c([-0.36, -8.4, -171.02], true);
        a.c([9.14, -8.39994, -169.6], true);
        a.c([15.52, -7.799880000000002, -167.02], true);
        a.c([5.06, -6.21982, -156.22], true);
        a.c([8.15, -6.99976, -163.68], true);
        a.c([1.36, -6.2197000000000005, -156.86], true);
        a.c([11.38, -7, -163.68], true);
        a.c([6.29, -7.799940000000001, -167.38], true);
        a.c([9.91, -7.799880000000002, -167.38], true);
        a.c([-0.5, -3.03982, -160], true);
        a.c([15, -6.99976, -163.68], true);
        a.c([14.93, -5.399700000000001, -151.87], true);
        a.c([11.77, -7, -163.68], true);
        a.c([11.11, -5.399940000000001, -151.87], true);
        a.c([14.32, -6.219880000000001, -157.2], true);
        a.c([1.7, -8.39982, -171.53], true);
        a.c([8.48, -9.899760000000002, -178.54], true);
        a.c([15.19, -8.5997, -170.45], true);
        a.c([8.48, -8.6, -171.36], true);
        a.c([15.85, -6.21994, -157.2], true);
        a.c([11.77, -6.219880000000001, -157.2], true);
        a.c([8.15, -6.21982, -157.2], true);
        a.c([7.78, -5.399760000000001, -151.87], true);
        a.c([4.98, -5.399700000000001, -151.87], true);
        a.c([-0.62, -5.4, -151.87], true);
        a.c([13.16, -5.399940000000001, -151.87], true);
        a.c([1.97, -5.399880000000001, -151.87], true);
        a.c([1.7, -8.39982, -169.6], true);
        a.c([1.7, -8.39976, -169.6], true);
        a.p([23.32, -1.50994, -201.75], [-0.04, 0, 0], [10, 2, 10.1], 2.0, 0);
        a.p([15.32, -1.48988, -186.01], [-0.57, 0, 0], [10, 2, 37.58], 2.0, 0);
        a.p([11.85, -12.39982, -145.9], [0, -1.57, 0], [40.54, 2, 21], 2.0, 0);
        a.p([26.92, -12.39976, -287.43], [0, -1.57, 0], [40.54, 2, 21], 2.0, 0);
        a.p([8.04, -1.4997, -162.31], [0, 0, 0], [19.16, 2, 39.06], 2.0, 0);
        a.p([26, -1.5, -45], [-1.58, 1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([-26, -1.49994, -45], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.49988, -15], [-1.58, 1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.49982, -75], [-1.58, 1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.49976, -105], [-1.58, 1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([27.93, -1.9997, -307.36], [0, 0, 0], [40.54, 2, 39.06], 2.0, 0);
        a.p([-26, -1.5, -30], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([-26, -1.49994, -15], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([-26, -1.49988, -75], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([-26, -1.49982, -105], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.49976, -60], [-1.58, 1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([26, -1.4997, -135], [-1.58, 1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.5, -120], [-1.58, 1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([25.92, -1.49994, -247.03], [-0.06, 0, 0], [0.6, 2, 104.4], 3.0, 0);
        a.p([-26, -1.49988, -60], [-1.58, -1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([-26, -1.49982, -120], [-1.58, -1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([26, -1.49976, -90], [-1.58, 1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([-26, -1.4997, -135], [-1.58, -1.12, 0.03], [10, 2, 60], 2.0, 0);
        a.p([26, -1.5, -30], [-1.58, 1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([-26, -1.49994, -30], [-1.58, -1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([-26, -1.49988, -90], [-1.58, -1.12, 0.03], [10, 2, 60], 3.0, 0);
        a.p([0, -1.50982, -19.61], [0, 0, 0], [2, 2, 42.7], 1, 0);
        a.p([0, -1.49976, -55.56], [0, 0, 0], [2, 2, 62], 1, 0);
        a.p([0, -1.5097, -113.31], [0, 0, 0], [2, 2, 62], 1, 0);
    },
    post: function() {
        a.m('C0').unfreezeWorldMatrix();
        a.m('C1').unfreezeWorldMatrix();
        a.m('C2').unfreezeWorldMatrix();
        a.m('C3').unfreezeWorldMatrix();
        a.m('C4').unfreezeWorldMatrix();
        a.m('C5').unfreezeWorldMatrix();
        a.m('C6').unfreezeWorldMatrix();
        a.m('C7').unfreezeWorldMatrix();
        a.m('C8').unfreezeWorldMatrix();
        a.m('C9').unfreezeWorldMatrix();
        a.m('C10').unfreezeWorldMatrix();
        a.m('C11').unfreezeWorldMatrix();
        a.m('C12').unfreezeWorldMatrix();
        a.m('C13').unfreezeWorldMatrix();
        a.m('C14').unfreezeWorldMatrix();
        a.m('C15').unfreezeWorldMatrix();
        a.m('C16').unfreezeWorldMatrix();
        a.m('C17').unfreezeWorldMatrix();
        a.m('C18').unfreezeWorldMatrix();
        a.m('C19').unfreezeWorldMatrix();
        a.m('C20').unfreezeWorldMatrix();
        a.m('C21').unfreezeWorldMatrix();
        a.m('C22').unfreezeWorldMatrix();
        a.m('C23').unfreezeWorldMatrix();
        a.m('C24').unfreezeWorldMatrix();
        a.m('C25').unfreezeWorldMatrix();
        a.m('C26').unfreezeWorldMatrix();
        a.m('C27').unfreezeWorldMatrix();
        a.m('C28').unfreezeWorldMatrix();
        a.m('C29').unfreezeWorldMatrix();
        a.m('C30').unfreezeWorldMatrix();
        a.m('C31').unfreezeWorldMatrix();
        a.m('C32').unfreezeWorldMatrix();
        a.m('C33').unfreezeWorldMatrix();
        a.m('C34').unfreezeWorldMatrix();
        a.m('C35').unfreezeWorldMatrix();
        a.m('C36').unfreezeWorldMatrix();
        a.m('C37').unfreezeWorldMatrix();
        a.m('C38').unfreezeWorldMatrix();
        a.m('C39').unfreezeWorldMatrix();
        a.m('C40').unfreezeWorldMatrix();
        a.m('C41').unfreezeWorldMatrix();
        a.m('C42').unfreezeWorldMatrix();
        a.m('C43').unfreezeWorldMatrix();
        a.m('C44').unfreezeWorldMatrix();
        a.m('C45').unfreezeWorldMatrix();
        a.m('C46').unfreezeWorldMatrix();
        a.m('C47').unfreezeWorldMatrix();
        a.m('C48').unfreezeWorldMatrix();
        a.m('C49').unfreezeWorldMatrix();
        a.m('C50').unfreezeWorldMatrix();
        a.m('C51').unfreezeWorldMatrix();
        a.m('C52').unfreezeWorldMatrix();
        a.m('C53').unfreezeWorldMatrix();
        a.m('C54').unfreezeWorldMatrix();
        a.m('C55').unfreezeWorldMatrix();
        a.m('C56').unfreezeWorldMatrix();
        a.m('C57').unfreezeWorldMatrix();
        a.m('C58').unfreezeWorldMatrix();
        a.m('C59').unfreezeWorldMatrix();
        a.m('C60').unfreezeWorldMatrix();
        a.m('C61').unfreezeWorldMatrix();
        a.m('C62').unfreezeWorldMatrix();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -7.730000000000004) {
                    this.section_id += 1
                }
                break;
            case 1:
                a.mov('C0', 'y', 0.1);
                a.mov('C1', 'y', 0.1);
                a.mov('C2', 'y', 0.1);
                a.mov('C3', 'y', 0.1);
                a.mov('C4', 'y', 0.1);
                a.mov('C5', 'y', 0.1);
                a.mov('C6', 'y', 0.1);
                a.mov('C7', 'y', 0.1);
                a.mov('C8', 'y', 0.1);
                a.mov('C9', 'y', 0.1);
                a.mov('C10', 'y', 0.1);
                a.mov('C11', 'y', 0.1);
                a.mov('C12', 'y', 0.1);
                a.mov('C13', 'y', 0.1);
                a.mov('C14', 'y', 0.1);
                a.mov('C15', 'y', 0.1);
                a.mov('C16', 'y', 0.1);
                if (PZ < -144.51) {
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -146.66000000000003) {
                    this.section_id += 1
                }
                break;
            case 3:
                a.mov('C30', 'y', 0.4);
                a.mov('C31', 'y', 0.4);
                a.mov('C32', 'y', 0.4);
                a.mov('C33', 'y', 0.4);
                a.mov('C34', 'y', 0.4);
                a.mov('C35', 'y', 0.4);
                a.mov('C36', 'y', 0.4);
                a.mov('C37', 'y', 0.4);
                a.mov('C38', 'y', 0.4);
                a.mov('C39', 'y', 0.4);
                a.mov('C40', 'y', 0.4);
                a.mov('C41', 'y', 0.4);
                a.mov('C42', 'y', 0.4);
                a.mov('C43', 'y', 0.4);
                a.mov('C44', 'y', 0.4);
                a.mov('C45', 'y', 0.4);
                a.mov('C46', 'y', 0.4);
                a.mov('C47', 'y', 0.4);
                a.mov('C48', 'y', 0.4);
                a.mov('C49', 'y', 0.4);
                a.mov('C50', 'y', 0.4);
                a.mov('C51', 'y', 0.4);
                a.mov('C52', 'y', 0.4);
                a.mov('C53', 'y', 0.4);
                a.mov('C54', 'y', 0.4);
                a.mov('C55', 'y', 0.4);
                a.mov('C56', 'y', 0.4);
                a.mov('C57', 'y', 0.4);
                a.mov('C58', 'y', 0.4);
                a.mov('C59', 'y', 0.4);
                a.mov('C60', 'y', 0.4);
                a.mov('C61', 'y', 0.4);
                a.mov('C62', 'y', 0.4);
                if (PZ < -283.44) {
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -289.93) {
                    steer = default_steer * 1.4;
                    this.section_id += 1
                }
                break;
            case 5:
                a.mov('C17', 'y', 0.2);
                a.mov('C18', 'y', 0.2);
                a.mov('C19', 'y', 0.2);
                a.mov('C20', 'y', 0.2);
                a.mov('C21', 'y', 0.2);
                a.mov('C22', 'y', 0.2);
                a.mov('C23', 'y', 0.2);
                a.mov('C24', 'y', 0.2);
                a.mov('C25', 'y', 0.2);
                a.mov('C26', 'y', 0.2);
                a.mov('C27', 'y', 0.2);
                a.mov('C28', 'y', 0.2);
                a.mov('C29', 'y', 0.2);
                if (PZ < -325.72999999999996) {
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('C0', [0.5, -4.399940000000001, -46.82], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [0.1, -3.89988, -39.6], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [-0.5, -4.89982, -54.05], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [0.5, -5.899760000000001, -63.48], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [0.5, -6.899700000000001, -71.61], [0, 0, 0], [2, 2, 2]);
        a.re('C5', [-0.5, -7.6, -79.01], [0, 0, 0], [2, 2, 2]);
        a.re('C6', [0.5, -8.39994, -88.31], [0, 0, 0], [2, 2, 2]);
        a.re('C7', [0.3, -9.19988, -97.25], [0, 0, 0], [2, 2, 2]);
        a.re('C8', [-0.5, -9.89982, -105.63], [0, 0, 0], [2, 2, 2]);
        a.re('C9', [-0.5, -10.599760000000002, -115.11], [0, 0, 0], [2, 2, 2]);
        a.re('C10', [-0.5, -11.6997, -122.46], [0, 0, 0], [2, 2, 2]);
        a.re('C11', [0.5, -12.4, -128.2], [0, 0, 0], [2, 2, 2]);
        a.re('C12', [-0.5, -13.19994, -134.09], [0, 0, 0], [2, 2, 2]);
        a.re('C13', [0.82, -0.8998800000000001, -10.75], [0, 0, 0], [2, 2, 2]);
        a.re('C14', [0.24, -0.89982, -10.86], [0, 0, 0], [2, 2, 2]);
        a.re('C15', [-0.78, -0.89976, -15.66], [0, 0, 0], [2, 2, 2]);
        a.re('C16', [-0.04, -0.8997, -15.89], [0, 0, 0], [2, 2, 2]);
        a.re('C17', [32.48, -5.859940000000001, -313.31], [0, 0, 0], [2, 2, 2]);
        a.re('C18', [30.91, -5.859880000000001, -313.31], [0, 0, 0], [2, 2, 2]);
        a.re('C19', [30.91, -5.85982, -312.86], [0, 0, 0], [2, 2, 2]);
        a.re('C20', [31.61, -5.8597600000000005, -312.86], [0, 0, 0], [2, 2, 2]);
        a.re('C21', [29.09, -6.4397, -314.84], [0, 0, 0], [2, 2, 2]);
        a.re('C22', [29.09, -6.44, -314.16], [0, 0, 0], [2, 2, 2]);
        a.re('C23', [29.09, -6.439940000000001, -315.57], [0, 0, 0], [2, 2, 2]);
        a.re('C24', [29.09, -6.4398800000000005, -313.17], [0, 0, 0], [2, 2, 2]);
        a.re('C25', [29.09, -6.43982, -312.5], [0, 0, 0], [2, 2, 2]);
        a.re('C26', [29.82, -6.439760000000001, -312.5], [0, 0, 0], [2, 2, 2]);
        a.re('C27', [30.23, -6.4397, -312.5], [0, 0, 0], [2, 2, 2]);
        a.re('C28', [31.57, -5.86, -313.31], [0, 0, 0], [2, 2, 2]);
        a.re('C29', [32.39, -5.859940000000001, -312.86], [0, 0, 0], [2, 2, 2]);
        a.re('C30', [4.86, -8.59988, -171.36], [0, 0, 0], [2, 2, 2]);
        a.re('C31', [11.57, -8.59982, -170.45], [0, 0, 0], [2, 2, 2]);
        a.re('C32', [3.43, -3.03976, -161.65], [0, 0, 0], [2, 2, 2]);
        a.re('C33', [4.86, -9.899700000000001, -178.54], [0, 0, 0], [2, 2, 2]);
        a.re('C34', [-0.36, -8.4, -171.02], [0, 0, 0], [2, 2, 2]);
        a.re('C35', [9.14, -8.39994, -169.6], [0, 0, 0], [2, 2, 2]);
        a.re('C36', [15.52, -7.799880000000002, -167.02], [0, 0, 0], [2, 2, 2]);
        a.re('C37', [5.06, -6.21982, -156.22], [0, 0, 0], [2, 2, 2]);
        a.re('C38', [8.15, -6.99976, -163.68], [0, 0, 0], [2, 2, 2]);
        a.re('C39', [1.36, -6.2197000000000005, -156.86], [0, 0, 0], [2, 2, 2]);
        a.re('C40', [11.38, -7, -163.68], [0, 0, 0], [2, 2, 2]);
        a.re('C41', [6.29, -7.799940000000001, -167.38], [0, 0, 0], [2, 2, 2]);
        a.re('C42', [9.91, -7.799880000000002, -167.38], [0, 0, 0], [2, 2, 2]);
        a.re('C43', [-0.5, -3.03982, -160], [0, 0, 0], [2, 2, 2]);
        a.re('C44', [15, -6.99976, -163.68], [0, 0, 0], [2, 2, 2]);
        a.re('C45', [14.93, -5.399700000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C46', [11.77, -7, -163.68], [0, 0, 0], [2, 2, 2]);
        a.re('C47', [11.11, -5.399940000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C48', [14.32, -6.219880000000001, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C49', [1.7, -8.39982, -171.53], [0, 0, 0], [2, 2, 2]);
        a.re('C50', [8.48, -9.899760000000002, -178.54], [0, 0, 0], [2, 2, 2]);
        a.re('C51', [15.19, -8.5997, -170.45], [0, 0, 0], [2, 2, 2]);
        a.re('C52', [8.48, -8.6, -171.36], [0, 0, 0], [2, 2, 2]);
        a.re('C53', [15.85, -6.21994, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C54', [11.77, -6.219880000000001, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C55', [8.15, -6.21982, -157.2], [0, 0, 0], [2, 2, 2]);
        a.re('C56', [7.78, -5.399760000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C57', [4.98, -5.399700000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C58', [-0.62, -5.4, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C59', [13.16, -5.399940000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C60', [1.97, -5.399880000000001, -151.87], [0, 0, 0], [2, 2, 2]);
        a.re('C61', [1.7, -8.39982, -169.6], [0, 0, 0], [2, 2, 2]);
        a.re('C62', [1.7, -8.39976, -169.6], [0, 0, 0], [2, 2, 2]);
        a.re('P0', [23.32, -1.50994, -201.75], [-0.04, 0, 0], [10, 2, 10.1]);
        a.re('P1', [15.32, -1.48988, -186.01], [-0.57, 0, 0], [10, 2, 37.58]);
        a.re('P2', [11.85, -12.39982, -145.9], [0, -1.57, 0], [40.54, 2, 21]);
        a.re('P3', [26.92, -12.39976, -287.43], [0, -1.57, 0], [40.54, 2, 21]);
        a.re('P4', [8.04, -1.4997, -162.31], [0, 0, 0], [19.16, 2, 39.06]);
        a.re('P5', [26, -1.5, -45], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P6', [-26, -1.49994, -45], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P7', [26, -1.49988, -15], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P8', [26, -1.49982, -75], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P9', [26, -1.49976, -105], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P10', [27.93, -1.9997, -307.36], [0, 0, 0], [40.54, 2, 39.06]);
        a.re('P11', [-26, -1.5, -30], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P12', [-26, -1.49994, -15], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P13', [-26, -1.49988, -75], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P14', [-26, -1.49982, -105], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P15', [26, -1.49976, -60], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P16', [26, -1.4997, -135], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P17', [26, -1.5, -120], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P18', [25.92, -1.49994, -247.03], [-0.06, 0, 0], [0.6, 2, 104.4]);
        a.re('P19', [-26, -1.49988, -60], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P20', [-26, -1.49982, -120], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P21', [26, -1.49976, -90], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P22', [-26, -1.4997, -135], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P23', [26, -1.5, -30], [-1.58, 1.12, 0.03], [10, 2, 60]);
        a.re('P24', [-26, -1.49994, -30], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P25', [-26, -1.49988, -90], [-1.58, -1.12, 0.03], [10, 2, 60]);
        a.re('P26', [0, -1.50982, -19.61], [0, 0, 0], [2, 2, 42.7]);
        a.re('P27', [0, -1.49976, -55.56], [0, 0, 0], [2, 2, 62]);
        a.re('P28', [0, -1.5097, -113.31], [0, 0, 0], [2, 2, 62]);
    },
    physics_update: function() {},
    render_update: function() {}
}
