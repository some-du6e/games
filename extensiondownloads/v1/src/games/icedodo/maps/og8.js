var map = {
    title: "999999",
    song: "env2",
    maker: "dododo73",
    spawn: [0, 0.5, 0],
    init: function() {

	function pup(a2, b, c, d, e, f, g, h, i, j) {
		a.og(a2,b,c,d,e,f,g,h,i,j);
	}
	a.og('green', 0,0,0,0,0,0,2 ,0.1 ,4 ); //0
	a.og('green', 0,0,-4.011,0,0,0,0.4 ,0.1 ,4 );
	a.og('green', 0.317,0,-5.406,140.003,0,0,0.4 ,0.1 ,1.843 );
	a.og('green', 0.646,0,-6.742,0,0,0,0.4 ,0.1 ,4 );
	a.og('green', 0,0,-10.197,0,0,0,2 ,0.1 ,4 );
	a.og('fire', -0.112,0.075,-10.197,0,0,0,0.624 ,0.391 ,0.522 );
	a.og('green', 0,-0.323,-14.019,0,-9.221,0,2 ,0.1 ,4 );
	a.og('green', 0,-0.572,-17.47,0,0,0,2 ,0.1 ,4 );
	//a.og('water', 0,-1.887,-17.47,0,0,0,250.976 ,3.159 ,250 );
	a.og('green', 0,-0.323,-21,0,9.221,0,2 ,0.1 ,4 );
	a.og('green', 0,0,-24.948,0,0,0,2 ,0.1 ,4 ); //9
	a.og('green', 0.885,0,-28.176,29.542,0,0,2 ,0.1 ,4 );
	a.og('green', 3.081,0,-31.05,45.2,0,0,2 ,0.1 ,4 );
	a.og('green', 6.132,0,-33.207,63.232,0,0,2 ,0.1 ,4 );
	a.og('green', 14.01,0,-34.065,90,0,0,2 ,0.1 ,13.081 );
	a.og('invisible', 14.01,0.4,-39.364,90,0,14.802,9.195 ,0.1 ,12.78 );
	a.og('green', 21.895,0,-34.929,63.232,0,0,2 ,0.1 ,4 );
	a.og('green', 24.526,0,-37.119,39.993,0,0,2 ,0.1 ,4 );
	a.og('green', 26.004,0,-40.112,25.812,0,0,2 ,0.1 ,4 );
	a.og('green', 26.767,0,-43.523,0,0,0,2 ,0.1 ,4 );
	a.og('green', 26.767,0.14,-46.985,0,5.091,0,2 ,0.1 ,4 ); // 9
	a.og('green', 27.114,0.475,-50.738,12.211,4.976,1.075,2 ,0.1 ,4 );
	a.og('green', 28.35,0.761,-53.951,30.084,4.408,2.549,2 ,0.1 ,4 );
	a.og('green', 30.579,1.022,-56.881,42.425,3.762,3.432,2 ,0.1 ,4 );
	a.og('fire', 25.365,0.223,-40.421,25.812,0,0,0.501 ,0.516 ,0.569 ); // 3
	a.og('fire', 26.656,0.223,-39.797,25.812,0,0,0.501 ,0.516 ,0.569 ); // 4
	a.og('fire', 27.223,0.223,-43.526,0,0,0,0.501 ,0.516 ,0.569 ); // 5
	a.og('fire', 27.473,0.334,-46.845,0,5.091,0,0.501 ,0.516 ,0.569 ); // 6
	a.og('fire', 26.324,0.663,-50.536,12.211,4.976,1.075,0.501 ,0.516 ,0.569 ); // 7
	a.og('green', 32.541,1.097,-59.047,42.425,3.762,6.656,2 ,0.1 ,2 );
	a.og('green', 33.836,1.157,-60.48,42.425,3.762,8.92,2 ,0.1 ,2 );
	a.og('green', 35.13,1.144,-61.954,42.425,3.762,15.282,2 ,0.1 ,2 ); // 0
	a.og('green', 36.855,1.523,-64.747,42.425,3.762,15.282,0.482 ,0.1 ,4.198 );
	a.og('green', 38.338,1.493,-65.679,42.425,3.762,8.92,0.482 ,0.1 ,4.198 );
	a.og('green', 39.716,1.52,-66.591,42.425,3.762,6.656,0.482 ,0.1 ,4.198 );
	a.og('green', 40.992,1.575,-67.445,42.425,3.762,3.771,0.482 ,0.1 ,4.198 );
	a.og('green', 42.146,1.634,-68.128,42.425,3.762,0,0.482 ,0.1 ,4.198 );
	a.og('green', 43.839,1.808,-70.17,29.035,3.66,-0.871,0.5 ,0.1 ,1.252 );
	a.og('green', 44.227,1.876,-71.212,12.412,3.259,-1.881,1.0 ,0.1 ,1.252 );
	a.og('green', 44.345,1.906,-72.379,0,0,0,1.5 ,0.1 ,1.252 );
	a.og('green', 44.722,1.906,-73.427,0,0,0,2 ,0.1 ,1.252 );
	a.og('green', 45.627,1.906,-75.778,0,0,0,2 ,0.1 ,4 ); // 0
	a.og('green', 46.104,1.906,-79.213,0,0,0,2 ,0.1 ,4 );
	a.og('green', 46.696,1.906,-82.574,0,0,0,2 ,0.1 ,4 );
	a.og('green', 46.696,1.906,-88.291,0,0,0,2 ,0.1 ,4 );
	a.og('green', 46.696,1.906,-85.602,0,0,0,2 ,0.1 ,4 ); // grow X; 4;
	a.og('green', 46.218,1.906,-92.004,-16.143,0,0,2 ,0.1 ,4 );
	a.og('green', 44.277,1.906,-94.701,-16.143,0,0,1.723 ,0.1 ,4 );
	a.og('green', 44.195,1.906,-98.083,14.125,0,0,1.723 ,0.1 ,4 );
	a.og('green', 42.989,1.906,-98.386,-22.697,0,0,1.723 ,0.1 ,4 );
	a.og('green', 44.081,1.906,-101.385,-21.394,0,0,1.723 ,0.1 ,4 );
	a.og('green', 41.981,1.906,-104.352,-46.944,0,0,1.723 ,0.1 ,4 ); // 0
	a.og('green', 45.312,1.906,-101.432,20.008,0,0,1.723 ,0.1 ,4 );
	a.og('green', 43.724,1.906,-104.54,11.763,0,0,1.723 ,0.1 ,4 );
	a.og('green', 42.857,1.906,-109.075,-16.296,0,0,1.378 ,0.1 ,6.251 );
	a.og('green', 42.967,1.906,-113.323,-16.296,0,0,1.378 ,0.1 ,1.927 );
	a.og('green', 40.506,1.906,-112.604,-16.296,0,0,1.378 ,0.1 ,1.927 ); // extend Z; // 5
	a.og('green', 40.203,1.906,-118.153,-16.296,0,0,1.378 ,0.1 ,6.251 );
	a.og('green', 40.894,1.906,-122.585,8.82,0,0,1.378 ,0.1 ,10.1 );
	a.og('green', 41.358,1.906,-127.829,-16.296,0,0,1.378 ,0.1 ,6.251 );
	a.og('green', 38.76,1.906,-131.583,-38.197,0,0,0.985 ,0.1 ,6.251 );
	a.og('green', 36.513,1.906,-135.462,-22.787,0,0,0.985 ,0.1 ,6.251 );
	a.og('green', 35.214,1.906,-139.763,0,0,0,1.04 ,0.1 ,3.36 );
	a.og('green', 35.214,2.229,-143.581,0,9.064,0,1.04 ,0.1 ,4.501 );
	a.og('green', 34.631,2.619,-146.028,0,9.064,0,1.24 ,0.1 ,2.867 );
	a.og('green', 35.294,2.845,-147.448,0,9.064,0,1.24 ,0.1 ,2.867 );
	a.og('green', 36.07,3.14,-149.292,0,9.064,0,1.24 ,0.1 ,2.867 );
	a.og('green', 35.567,3.458,-151.286,0,9.064,0,1.24 ,0.1 ,2.867 );
	a.og('green', 34.632,3.636,-152.403,0,9.064,0,1.24 ,0.1 ,2.867 );
	a.og('green', 34.632,3.778,-155.821,0,0,0,1.04 ,0.1 ,4.924 );
	a.og('green', 34.632,3.778,-161.824,0,0,0,2.737 ,0.1 ,7.207 );
	a.og('fire', 33.94,4.016,-161.824,0,0,0,0.99 ,0.914 ,0.219 );
	a.og('fire', 35.506,4.016,-164.271,0,0,0,0.505 ,0.914 ,0.219 );
	a.og('green', 33.9,3.778,-167.488,0,0,0,1.122 ,0.1 ,5.658 );
	a.og('green', 32.431,3.778,-173.704,0,0,0,2.896 ,0.1 ,8.868 );
	a.og('fire', 32.431,4.124,-170.987,0,0,0,1.613 ,1.084 ,0.275 );
	a.og('fire', 33.308,4.124,-175.512,0,0,0,1.613 ,1.084 ,0.275 );
	a.og('green', 31.575,3.778,-180.611,0,0,0,1.519 ,0.1 ,7.059 );

	a.og_c(0.1, -12.0, 0.4);
    a.og_c(0.1, -29.0, -2.2);
    a.og_c(0.1, -30.0, -1.2);
    a.og_c(0.1, -32.0, -3.2);
    a.og_c(0.1, -33.0, -4.2);
    a.og_c(0.1, -33.0, -5.2);
    a.og_c(0.1, -34.0, -6.2);
    a.og_c(0.1, -34.0, -7.2);
    a.og_c(0.1, -34.0, -8.2);
    a.og_c(0.1, -34.0, -9.2);
    a.og_c(0.1, -34.0, -10.2);
    a.og_c(0.1, -34.0, -11.2);
    a.og_c(0.1, -34.0, -12.2);
    a.og_c(0.1, -34.0, -13.2);
    a.og_c(0.1, -34.0, -14.2);
    a.og_c(0.1, -34.0, -15.2);
    a.og_c(0.1, -34.0, -16.2);
    a.og_c(0.1, -34.0, -17.2);


	a.og_end(-31.575, 3.878, -181.611, 0);

	this.P23Y = scene.getMeshByName("P23").position.y - 0.1;
	this.P24Y = scene.getMeshByName("P24").position.y - 0.1;
	this.P25Y = scene.getMeshByName("P25").position.y - 0.1;
	this.P26Y = scene.getMeshByName("P26").position.y - 0.1;
	this.P27Y = scene.getMeshByName("P27").position.y - 0.1;

	this.sinNumber = 0.0;

	},
	post: function() {
		cc.set_monkey("speed", 0.2);
		cc.set_monkey("steer", 0.03);
		cc.refresh();
	},
    section_id: 0,
    section_update: function() {
    	let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -13) {
                    a.og('fall', 12.422,3.939,-41.008,0,0,0,2.785 ,0.5 ,3.528 );
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -25) {
                    a.og('fall', 15.422,3.939,-41.008,0,0,0,2.785 ,0.5 ,3.528 );
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -28) {
                    a.og('fall', 18.422,3.939,-41.008,0,0,0,2.785 ,0.5 ,3.528 );
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
		cleanup.run(false);
		this.init();
    },
    physics_update: function() {},
    render_update: function() {
    	iv(player, scene);
    }
}

function iv(box, scene) {
	if (box.position.z < -105) {
		scene.getMeshByName("P55").position.z -= 0.07 * 0.5;
		scene.getMeshByName("P55").position.x -= 0.05 * 0.5;
	}
	if (box.position.z < -80) {
		scene.getMeshByName("P44").position.x += 0.1 * 0.5;
		//scene.getMeshByName("P44").scaling.x -= 0.1;

		//P.scaling = new BABYLON.Vector3(sizeX,sizeY,sizeZ);
	}
	if (box.position.z < -30) {
		map.sinNumber += 0.8 * 0.5;
		scene.getMeshByName("P23").position.y = map.P23Y - Math.sin(map.sinNumber) / 10;
		scene.getMeshByName("P24").position.y = map.P24Y - Math.sin(map.sinNumber) / 10;
		scene.getMeshByName("P25").position.y = map.P25Y - Math.sin(map.sinNumber) / 10;
		scene.getMeshByName("P26").position.y = map.P26Y - Math.sin(map.sinNumber) / 10;
		scene.getMeshByName("P27").position.y = map.P27Y - Math.sin(map.sinNumber) / 10;

	}
}
