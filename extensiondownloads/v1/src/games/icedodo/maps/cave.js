var map = {
    title: "Cave",
    song: "env2",
    maker: "Ghoullsh",
    spawn: [0, 0.5, 0],
    init: function() {
        a.p([1.27014, 8.31014, -216.92986000000002], [-0.13, 0, 0], [11.6, 2, 23.34], 1, 1000.0, 0, 0.6, false);
        a.e([-1.16965, -6.379650000000001, -317.62965]);
        a.e([-1.16958, -9.039579999999999, -317.62958]);
        a.e([-1.1695099999999998, -6.37951, -322.55951]);
        a.e([-1.17, -9.04, -322.56]);
        a.e([-5.5999300000000005, -6.379930000000001, -320.44993]);
        a.e([-5.59986, -9.03986, -320.44986]);
        a.e([-1.1697899999999999, -6.379790000000001, -320.15979]);
        a.e([-1.1697199999999999, -9.039719999999999, -320.15972]);
        a.e([1.60035, -6.379650000000001, -322.03965]);
        a.e([-5.59958, -6.37958, -322.82957999999996]);
        a.e([-5.59951, -9.03951, -322.82951]);
        a.e([1.6, -6.38, -320.06]);
        a.e([-1.16993, -6.379930000000001, -325.56993]);
        a.e([-1.1698600000000001, -9.03986, -325.56986]);
        a.p([-5.609719999999999, 3.3802800000000004, -123.63972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-4.61965, 2.8203500000000004, -116.94965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-2.24958, 2.82042, -116.94958000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-2.63951, 3.16049, -121.00950999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-4.84, 3.85, -129.37], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-7.289930000000001, 3.85007, -129.36993], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 1000.0, 0, 0.6, false);
        a.p([-4.52986, 0.62014, -114.03986], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.1697900000000003, 0.62021, -114.03979], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.5197199999999995, 1.18028, -120.73971999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.75965, 1.65035, -126.45965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-7.19958, 3.6004199999999997, -126.29958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.52951, 2.57049, -113.87951], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.17, 2.57, -113.88], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.55993, 2.90007, -117.93993], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.75986, 3.60014, -126.29986000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.51979, 3.12021, -120.56979], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.98972, 2.69028, -115.37971999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.97965, 3.25035, -122.06965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.6195800000000005, 2.6904199999999996, -115.37958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.009510000000001, 3.03049, -119.43950999999998], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.21, 3.72, -127.79], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-8.659930000000001, 3.72007, -127.78993], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.31986, -0.67986, -117.23986000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.9497899999999997, -0.67979, -117.23979], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.3497199999999996, -0.34972000000000003, -121.29972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-7.98965, 0.35034999999999994, -129.65965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.3095799999999995, -0.12958, -123.93958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.4795100000000003, 1.0504900000000001, -119.17951], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.08, 2.08, -131.59], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.839930000000001, 1.60007, -125.86993000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.52986, -0.93986, -114.16986000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.1697900000000003, -0.93979, -114.16978999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.55972, -0.59972, -118.22972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.75965, 0.09035, -126.58965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-7.19958, 0.09042, -126.58958000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.51951, -0.37951, -120.85950999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.85, -0.51, -119.31], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.47993, -0.50993, -119.30993000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.87986, -0.17986000000000002, -123.36986], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.839790000000001, 0.040209999999999996, -125.99978999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.83972, 3.5502800000000003, -125.70972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.8496500000000005, 2.9903500000000003, -119.01965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.4795800000000003, 2.99042, -119.01958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-3.8795100000000002, 3.3304899999999997, -123.07950999999998], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.08, 4.02, -131.43], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-8.51993, 4.0200700000000005, -131.42993], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.91986, -0.80986, -115.66986000000001], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.5497900000000002, -0.80979, -115.66978999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.93972, -0.47972000000000004, -119.72972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.1396500000000005, 0.22035, -128.07965000000002], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-7.58958, 0.22042, -128.07958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.90951, -0.25951, -122.35950999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.55, 0.75, -115.54], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.93993, 1.08007, -119.59993], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.91986, 0.7501399999999999, -115.53986], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 0, 0, 0.6, false);
        a.p([-5.31979, 0.88021, -117.10978999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-2.9497199999999997, 0.8802800000000001, -117.10972], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-5.549650000000001, 1.90035, -129.52965], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-7.98958, 1.90042, -129.52958], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-6.30951, 1.43049, -123.80950999999999], [0.25, 0.08, 0.02], [2, 2, 2], 2.0, 5.0, 0, 0.6, false);
        a.p([-4.75, -1.52, -144.36], [0, 0, 0], [8.28, 2, 72.86], 3.0, 0, 0, 0.6, false);
        a.p([-1.94993, -1.51993, -227.47993], [0, 0, 0], [12.06, 2, 72.86], 3.0, 0, 0, 0.6, false);
        a.p([0.00028000000000000003, 0.00028000000000000003, 0.00028000000000000003], [0, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([0.00035000000000000005, 4.91035, -38.559650000000005], [0, 0.39, 0], [3.88, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([3.6004199999999997, 4.910419999999999, -38.559580000000004], [-0.24, 0.39, 0], [3.88, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([-3.40951, 4.910489999999999, -38.55951], [0.23, 0.39, 0], [3.88, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([-1.26, 4.91, -38.56], [0.16, 0.39, 0], [3.88, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([1.6200700000000001, 4.91007, -38.55993], [-0.1, 0.39, 0], [3.88, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([0.00014000000000000001, 9.75014, -79.32986], [0, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([-3.55979, 9.75021, -78.67979], [-0.1, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([-1.55972, 9.75028, -79.32972], [-0.03, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([3.0703500000000004, 9.75035, -79.32965], [0.11, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([0.9704200000000001, 9.75042, -79.32957999999999], [0.05, 0, 0], [4.42, 2, 57.08], 1, 0, 0, 0.6, false);
        a.p([-7.95951, 12.60049, -85.18950999999998], [-0.07, 0, 0], [6.06, 8.64, 44.8], 1, 0, 0, 0.6, false);
        a.p([-6.45, 16.54, -84.41], [0, 0, -0.75], [9.08, 8.64, 43.22], 1, 0, 0, 0.6, false);
        a.p([-4.19993, 9.75007, -120.66993000000001], [0.27, 0, 0], [4.42, 2, 28.62], 1, 0, 0, 0.6, false);
        a.p([5.83014, 12.60014, -85.17986], [0.08, 0, 0], [5.54, 8.64, 46.42], 1, 0, 0, 0.6, false);
        a.p([4.19021, 16.66021, -85.17979], [0, 0, -0.75], [9.08, 8.64, 45.78], 1, 0, 0, 0.6, false);
        a.p([-1.92972, 20.12028, -85.17972], [0, 0, 0], [11.3, 4.92, 45.1], 1, 0, 0, 0.6, false);
        a.p([-6.19965, 9.75035, -145.92965], [-0.13, 0, 0], [4.42, 2, 28.62], 1, 0, 0, 0.6, false);
        a.p([-5.089580000000001, 3.34042, -158.97958], [0, 0.39, 0], [5.2, 1.86, 27.76], 1, 0, 0, 0.6, false);
        a.p([-3.88951, 8.52049, -185.86951000000002], [-0.09, 0, 0], [4.42, 2, 28.62], 1, 0, 0, 0.6, false);
        a.p([-4.53, 8.4, -197.91], [0, 0, 0], [3.68, 2, 17.76], 1, 0, 0, 0.6, false);
        a.p([0.44006999999999996, 8.40007, -197.90992999999997], [-0.41, 0, 0], [3.68, 2, 17.76], 1, 0, 0, 0.6, false);
        a.p([-3.28986, 9.00014, -279.98986], [0, 0, 0], [10.98, 6.62, 45.1], 1, 0, 0, 0.6, false);
        a.p([3.15021, 5.84021, -279.98978999999997], [0, 0, -0.75], [9.08, 8.64, 45.78], 1, 0, 0, 0.6, false);
        a.p([3.44028, 2.03028, -280.56972], [0.08, 0, 0], [7.42, 8.64, 46.46], 1, 0, 0, 0.6, false);
        a.p([-7.94965, 6.06035, -279.98965], [0, 0, -0.75], [9.08, 8.64, 43.22], 1, 0, 0, 0.6, false);
        a.p([-9.27958, 2.03042, -280.99958], [-0.07, 0, 0], [6.62, 8.64, 44.82], 1, 0, 0, 0.6, false);
        a.p([-1.94993, -1.51993, -294.19993], [0, 0, 0], [12.06, 2, 72.86], 1, 0, 0, 0.6, false);
    },
    post: function() {
        a.u('E0');
        a.u('E1');
        a.u('E2');
        a.u('E3');
        a.u('E4');
        a.u('E5');
        a.u('E6');
        a.u('E7');
        a.u('E8');
        a.u('E9');
        a.u('E10');
        a.u('E11');
        a.u('E12');
        a.u('E13');
        a.u('P1');
        a.u('P2');
        a.u('P3');
        a.u('P4');
        a.u('P5');
        a.u('P6');
        a.u('P7');
        a.u('P8');
        a.u('P9');
        a.u('P10');
        a.u('P11');
        a.u('P12');
        a.u('P13');
        a.u('P14');
        a.u('P15');
        a.u('P16');
        a.u('P17');
        a.u('P18');
        a.u('P19');
        a.u('P20');
        a.u('P21');
        a.u('P22');
        a.u('P23');
        a.u('P24');
        a.u('P25');
        a.u('P26');
        a.u('P27');
        a.u('P28');
        a.u('P29');
        a.u('P30');
        a.u('P31');
        a.u('P32');
        a.u('P33');
        a.u('P34');
        a.u('P35');
        a.u('P36');
        a.u('P37');
        a.u('P38');
        a.u('P39');
        a.u('P40');
        a.u('P41');
        a.u('P42');
        a.u('P43');
        a.u('P44');
        a.u('P45');
        a.u('P46');
        a.u('P47');
        a.u('P48');
        a.u('P49');
        a.u('P50');
        a.u('P51');
        a.u('P52');
        a.u('P53');
        a.u('P54');
        a.u('P55');
        a.u('P56');
        a.u('P57');
        a.u('P58');
        a.u('P59');
        a.u('P60');
        cc.set_monkey("scene.ambientColor", new BABYLON.Color3.FromHexString("#4b0bab"));
        cc.set_monkey("light.groundColor", new BABYLON.Color3.FromHexString("#4b0bab"));
        cc.set_monkey("light.specular", new BABYLON.Color3.FromHexString("#4b0bab"));
        cc.set_monkey("light.diffuse", new BABYLON.Color3.FromHexString("#4b0bab"));
        cc.set_monkey("camera.fov mul2", 1.5);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -63.18000000000001) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#000000");
                    light.groundColor = new BABYLON.Color3.FromHexString("#000000");
                    light.specular = new BABYLON.Color3.FromHexString("#000000");
                    light.diffuse = new BABYLON.Color3.FromHexString("#000000");
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -91.56) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    light.specular = cc.get("light.specular", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -91.71986000000001) {
                    a.msg_set("GET DOWN ");
                    this.section_id += 1
                }
                break;
            case 3:
                if (PZ < -98.37986000000001) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -98.81979) {
                    a.msg_set("GET DOWN ");
                    this.section_id += 1
                }
                break;
            case 5:
                a.mov('P1', 'y', 0.4);
                a.mov('P1', 'x', -0.5);
                a.rot('P1', 'y', 0.5);
                a.mov('P2', 'y', 0.4);
                a.mov('P2', 'x', -0.5);
                a.rot('P2', 'y', 0.5);
                a.mov('P3', 'y', 0.4);
                a.mov('P3', 'x', -0.5);
                a.rot('P3', 'y', 0.5);
                a.mov('P4', 'y', 0.4);
                a.mov('P4', 'x', -0.5);
                a.rot('P4', 'y', 0.5);
                a.mov('P5', 'y', 0.4);
                a.mov('P5', 'x', -0.5);
                a.rot('P5', 'y', 0.5);
                a.mov('P6', 'y', 0.4);
                a.mov('P6', 'x', -0.5);
                a.rot('P6', 'y', 0.5);
                a.mov('P7', 'y', 0.5);
                a.mov('P7', 'x', -0.2);
                a.rot('P7', 'x', 0.1);
                a.rot('P7', 'y', 0.7);
                a.mov('P8', 'y', 0.5);
                a.mov('P8', 'x', -0.2);
                a.rot('P8', 'x', 0.1);
                a.rot('P8', 'y', 0.7);
                a.mov('P9', 'y', 0.5);
                a.mov('P9', 'x', -0.2);
                a.rot('P9', 'x', 0.1);
                a.rot('P9', 'y', 0.7);
                a.mov('P10', 'y', 0.5);
                a.mov('P10', 'x', -0.2);
                a.rot('P10', 'x', 0.1);
                a.rot('P10', 'y', 0.7);
                a.mov('P11', 'y', 0.5);
                a.mov('P11', 'x', 0.2);
                a.rot('P11', 'x', 0.3);
                a.rot('P11', 'y', 0.4);
                a.mov('P12', 'y', 0.5);
                a.mov('P12', 'x', 0.2);
                a.rot('P12', 'x', 0.3);
                a.rot('P12', 'y', 0.4);
                a.mov('P13', 'y', 0.5);
                a.mov('P13', 'x', 0.2);
                a.rot('P13', 'x', 0.3);
                a.rot('P13', 'y', 0.4);
                a.mov('P14', 'y', 0.5);
                a.mov('P14', 'x', 0.2);
                a.rot('P14', 'x', 0.3);
                a.rot('P14', 'y', 0.4);
                a.mov('P15', 'y', 0.5);
                a.mov('P15', 'x', 0.2);
                a.rot('P15', 'x', 0.3);
                a.rot('P15', 'y', 0.4);
                a.mov('P16', 'y', 0.5);
                a.mov('P16', 'x', 0.2);
                a.rot('P16', 'x', 0.3);
                a.rot('P16', 'y', 0.4);
                a.mov('P17', 'y', 0.6);
                a.mov('P17', 'x', 1.0);
                a.rot('P17', 'x', 0.3);
                a.mov('P18', 'y', 0.6);
                a.mov('P18', 'x', 1.0);
                a.rot('P18', 'x', 0.3);
                a.mov('P19', 'y', 0.6);
                a.mov('P19', 'x', 1.0);
                a.rot('P19', 'x', 0.3);
                a.mov('P20', 'y', 0.6);
                a.mov('P20', 'x', 1.0);
                a.rot('P20', 'x', 0.3);
                a.mov('P21', 'y', 0.6);
                a.mov('P21', 'x', 1.0);
                a.rot('P21', 'x', 0.3);
                a.mov('P22', 'y', 0.6);
                a.mov('P22', 'x', 1.0);
                a.rot('P22', 'x', 0.3);
                a.mov('P23', 'y', 0.6);
                a.rot('P23', 'x', 0.7);
                a.mov('P24', 'y', 0.6);
                a.rot('P24', 'x', 0.7);
                a.mov('P25', 'y', 0.6);
                a.rot('P25', 'x', 0.7);
                a.mov('P26', 'y', 0.6);
                a.rot('P26', 'x', 0.7);
                a.mov('P27', 'y', 0.6);
                a.rot('P27', 'x', 0.7);
                a.mov('P28', 'y', 0.7);
                a.rot('P28', 'x', 4.0);
                a.mov('P29', 'y', 0.7);
                a.rot('P29', 'x', 4.0);
                a.mov('P30', 'y', 0.7);
                a.rot('P30', 'x', 4.0);
                a.mov('P31', 'y', 0.7);
                a.rot('P31', 'z', 0.8);
                a.mov('P32', 'y', 0.7);
                a.rot('P32', 'z', 0.8);
                a.mov('P33', 'y', 0.7);
                a.rot('P33', 'z', 0.8);
                a.mov('P34', 'y', 0.7);
                a.rot('P34', 'z', 0.8);
                a.mov('P35', 'y', 0.7);
                a.rot('P35', 'z', 0.8);
                a.mov('P36', 'y', 0.7);
                a.rot('P36', 'z', 0.8);
                a.mov('P37', 'y', 0.8);
                a.rot('P37', 'x', 4.0);
                a.mov('P38', 'y', 0.8);
                a.rot('P38', 'x', 4.0);
                a.mov('P39', 'y', 0.8);
                a.rot('P39', 'x', 4.0);
                a.mov('P40', 'y', 0.8);
                a.rot('P40', 'x', 4.0);
                a.mov('P41', 'y', 0.9);
                a.mov('P41', 'z', -0.5);
                a.rot('P41', 'z', 0.8);
                a.mov('P42', 'y', 0.9);
                a.mov('P42', 'z', -0.5);
                a.rot('P42', 'z', 0.8);
                a.mov('P43', 'y', 0.9);
                a.mov('P43', 'z', -0.5);
                a.rot('P43', 'z', 0.8);
                a.mov('P44', 'y', 0.9);
                a.mov('P44', 'z', -0.5);
                a.rot('P44', 'z', 0.8);
                a.mov('P45', 'y', 0.9);
                a.mov('P45', 'z', -0.5);
                a.rot('P45', 'z', 0.8);
                a.mov('P46', 'y', 0.9);
                a.mov('P46', 'z', -0.5);
                a.rot('P46', 'z', 0.8);
                a.mov('P47', 'y', 0.9);
                a.rot('P47', 'z', 0.1);
                a.mov('P48', 'y', 0.9);
                a.rot('P48', 'z', 0.1);
                a.mov('P49', 'y', 0.9);
                a.rot('P49', 'z', 0.1);
                a.mov('P50', 'y', 0.9);
                a.rot('P50', 'z', 0.1);
                a.mov('P51', 'y', 0.9);
                a.rot('P51', 'z', 0.1);
                a.mov('P52', 'y', 0.9);
                a.rot('P52', 'z', 0.1);
                a.mov('P53', 'y', 1.0);
                a.mov('P53', 'z', -0.6);
                a.rot('P53', 'x', 0.5);
                a.rot('P53', 'y', 0.5);
                a.rot('P53', 'z', 0.5);
                a.mov('P54', 'y', 1.0);
                a.mov('P54', 'z', -0.6);
                a.rot('P54', 'x', 0.5);
                a.rot('P54', 'y', 0.5);
                a.rot('P54', 'z', 0.5);
                a.mov('P55', 'y', 1.0);
                a.mov('P55', 'z', -0.6);
                a.rot('P55', 'x', 0.5);
                a.rot('P55', 'y', 0.5);
                a.rot('P55', 'z', 0.5);
                a.mov('P56', 'y', 1.5);
                a.rot('P56', 'z', 5.0);
                a.mov('P57', 'y', 1.5);
                a.rot('P57', 'z', 5.0);
                a.mov('P58', 'y', 1.5);
                a.rot('P58', 'z', 5.0);
                a.mov('P59', 'y', 1.5);
                a.rot('P59', 'z', 5.0);
                a.mov('P60', 'y', 1.5);
                a.rot('P60', 'z', 5.0);
                if (PZ < -114.73978999999999) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -115.11972) {
                    this.section_id += 1
                }
                break;
            case 7:
                a.mov('P1', 'y', 0.4);
                a.mov('P1', 'x', -0.5);
                a.rot('P1', 'y', 0.5);
                a.mov('P2', 'y', 0.4);
                a.mov('P2', 'x', -0.5);
                a.rot('P2', 'y', 0.5);
                a.mov('P3', 'y', 0.4);
                a.mov('P3', 'x', -0.5);
                a.rot('P3', 'y', 0.5);
                a.mov('P4', 'y', 0.4);
                a.mov('P4', 'x', -0.5);
                a.rot('P4', 'y', 0.5);
                a.mov('P5', 'y', 0.4);
                a.mov('P5', 'x', -0.5);
                a.rot('P5', 'y', 0.5);
                a.mov('P6', 'y', 0.4);
                a.mov('P6', 'x', -0.5);
                a.rot('P6', 'y', 0.5);
                a.mov('P7', 'y', 0.5);
                a.mov('P7', 'x', -0.2);
                a.rot('P7', 'x', 0.1);
                a.rot('P7', 'y', 0.7);
                a.mov('P8', 'y', 0.5);
                a.mov('P8', 'x', -0.2);
                a.rot('P8', 'x', 0.1);
                a.rot('P8', 'y', 0.7);
                a.mov('P9', 'y', 0.5);
                a.mov('P9', 'x', -0.2);
                a.rot('P9', 'x', 0.1);
                a.rot('P9', 'y', 0.7);
                a.mov('P10', 'y', 0.5);
                a.mov('P10', 'x', -0.2);
                a.rot('P10', 'x', 0.1);
                a.rot('P10', 'y', 0.7);
                a.mov('P11', 'y', 0.5);
                a.mov('P11', 'x', 0.2);
                a.rot('P11', 'x', 0.3);
                a.rot('P11', 'y', 0.4);
                a.mov('P12', 'y', 0.5);
                a.mov('P12', 'x', 0.2);
                a.rot('P12', 'x', 0.3);
                a.rot('P12', 'y', 0.4);
                a.mov('P13', 'y', 0.5);
                a.mov('P13', 'x', 0.2);
                a.rot('P13', 'x', 0.3);
                a.rot('P13', 'y', 0.4);
                a.mov('P14', 'y', 0.5);
                a.mov('P14', 'x', 0.2);
                a.rot('P14', 'x', 0.3);
                a.rot('P14', 'y', 0.4);
                a.mov('P15', 'y', 0.5);
                a.mov('P15', 'x', 0.2);
                a.rot('P15', 'x', 0.3);
                a.rot('P15', 'y', 0.4);
                a.mov('P16', 'y', 0.5);
                a.mov('P16', 'x', 0.2);
                a.rot('P16', 'x', 0.3);
                a.rot('P16', 'y', 0.4);
                a.mov('P17', 'y', 0.6);
                a.mov('P17', 'x', 1.0);
                a.rot('P17', 'x', 0.3);
                a.mov('P18', 'y', 0.6);
                a.mov('P18', 'x', 1.0);
                a.rot('P18', 'x', 0.3);
                a.mov('P19', 'y', 0.6);
                a.mov('P19', 'x', 1.0);
                a.rot('P19', 'x', 0.3);
                a.mov('P20', 'y', 0.6);
                a.mov('P20', 'x', 1.0);
                a.rot('P20', 'x', 0.3);
                a.mov('P21', 'y', 0.6);
                a.mov('P21', 'x', 1.0);
                a.rot('P21', 'x', 0.3);
                a.mov('P22', 'y', 0.6);
                a.mov('P22', 'x', 1.0);
                a.rot('P22', 'x', 0.3);
                a.mov('P23', 'y', 0.6);
                a.rot('P23', 'x', 0.7);
                a.mov('P24', 'y', 0.6);
                a.rot('P24', 'x', 0.7);
                a.mov('P25', 'y', 0.6);
                a.rot('P25', 'x', 0.7);
                a.mov('P26', 'y', 0.6);
                a.rot('P26', 'x', 0.7);
                a.mov('P27', 'y', 0.6);
                a.rot('P27', 'x', 0.7);
                a.mov('P28', 'y', 0.7);
                a.rot('P28', 'x', 4.0);
                a.mov('P29', 'y', 0.7);
                a.rot('P29', 'x', 4.0);
                a.mov('P30', 'y', 0.7);
                a.rot('P30', 'x', 4.0);
                a.mov('P31', 'y', 0.7);
                a.rot('P31', 'z', 0.8);
                a.mov('P32', 'y', 0.7);
                a.rot('P32', 'z', 0.8);
                a.mov('P33', 'y', 0.7);
                a.rot('P33', 'z', 0.8);
                a.mov('P34', 'y', 0.7);
                a.rot('P34', 'z', 0.8);
                a.mov('P35', 'y', 0.7);
                a.rot('P35', 'z', 0.8);
                a.mov('P36', 'y', 0.7);
                a.rot('P36', 'z', 0.8);
                a.mov('P37', 'y', 0.8);
                a.rot('P37', 'x', 4.0);
                a.mov('P38', 'y', 0.8);
                a.rot('P38', 'x', 4.0);
                a.mov('P39', 'y', 0.8);
                a.rot('P39', 'x', 4.0);
                a.mov('P40', 'y', 0.8);
                a.rot('P40', 'x', 4.0);
                a.mov('P41', 'y', 0.9);
                a.mov('P41', 'z', -0.5);
                a.rot('P41', 'z', 0.8);
                a.mov('P42', 'y', 0.9);
                a.mov('P42', 'z', -0.5);
                a.rot('P42', 'z', 0.8);
                a.mov('P43', 'y', 0.9);
                a.mov('P43', 'z', -0.5);
                a.rot('P43', 'z', 0.8);
                a.mov('P44', 'y', 0.9);
                a.mov('P44', 'z', -0.5);
                a.rot('P44', 'z', 0.8);
                a.mov('P45', 'y', 0.9);
                a.mov('P45', 'z', -0.5);
                a.rot('P45', 'z', 0.8);
                a.mov('P46', 'y', 0.9);
                a.mov('P46', 'z', -0.5);
                a.rot('P46', 'z', 0.8);
                a.mov('P47', 'y', 0.9);
                a.rot('P47', 'z', 0.1);
                a.mov('P48', 'y', 0.9);
                a.rot('P48', 'z', 0.1);
                a.mov('P49', 'y', 0.9);
                a.rot('P49', 'z', 0.1);
                a.mov('P50', 'y', 0.9);
                a.rot('P50', 'z', 0.1);
                a.mov('P51', 'y', 0.9);
                a.rot('P51', 'z', 0.1);
                a.mov('P52', 'y', 0.9);
                a.rot('P52', 'z', 0.1);
                a.mov('P53', 'y', 1.0);
                a.mov('P53', 'z', -0.6);
                a.rot('P53', 'x', 0.5);
                a.rot('P53', 'y', 0.5);
                a.rot('P53', 'z', 0.5);
                a.mov('P54', 'y', 1.0);
                a.mov('P54', 'z', -0.6);
                a.rot('P54', 'x', 0.5);
                a.rot('P54', 'y', 0.5);
                a.rot('P54', 'z', 0.5);
                a.mov('P55', 'y', 1.0);
                a.mov('P55', 'z', -0.6);
                a.rot('P55', 'x', 0.5);
                a.rot('P55', 'y', 0.5);
                a.rot('P55', 'z', 0.5);
                a.mov('P56', 'y', 1.5);
                a.rot('P56', 'z', 5.0);
                a.mov('P57', 'y', 1.5);
                a.rot('P57', 'z', 5.0);
                a.mov('P58', 'y', 1.5);
                a.rot('P58', 'z', 5.0);
                a.mov('P59', 'y', 1.5);
                a.rot('P59', 'z', 5.0);
                a.mov('P60', 'y', 1.5);
                a.rot('P60', 'z', 5.0);
                if (PZ < -160.49972) {
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -173.67979) {
                    a.msg_set("GET IN THE HOLE ");
                    this.section_id += 1
                }
                break;
            case 9:
                if (PZ < -190.05979) {
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -257.65951) {
                    scene.ambientColor = new BABYLON.Color3.FromHexString("#000000");
                    light.groundColor = new BABYLON.Color3.FromHexString("#000000");
                    light.specular = new BABYLON.Color3.FromHexString("#000000");
                    light.diffuse = new BABYLON.Color3.FromHexString("#000000");
                    this.section_id += 1
                }
                break;
            case 11:
                if (PZ < -303.01951) {
                    scene.ambientColor = cc.get("scene.ambientColor", null);
                    light.groundColor = cc.get("light.groundColor", null);
                    light.specular = cc.get("light.specular", null);
                    light.diffuse = cc.get("light.diffuse", null);
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -303.32979) {
                    this.section_id += 1
                }
                break;
            case 13:
                a.mov('E0', 'y', 0.4);
                a.mov('E0', 'x', 0.2);
                a.rot('E0', 'z', -0.4);
                a.mov('E1', 'y', 0.4);
                a.mov('E1', 'x', 0.2);
                a.rot('E1', 'z', -0.4);
                a.mov('E2', 'y', 0.4);
                a.mov('E3', 'y', 0.4);
                a.mov('E4', 'y', 0.5);
                a.mov('E4', 'z', 0.2);
                a.mov('E4', 'x', 0.1);
                a.rot('E4', 'x', 0.2);
                a.mov('E5', 'y', 0.5);
                a.mov('E5', 'z', 0.2);
                a.mov('E5', 'x', 0.1);
                a.rot('E5', 'x', 0.2);
                a.mov('E6', 'y', 0.5);
                a.mov('E6', 'z', -0.1);
                a.mov('E7', 'y', 0.5);
                a.mov('E7', 'z', -0.1);
                a.mov('E8', 'y', 0.5);
                a.mov('E8', 'z', 0.3);
                a.rot('E8', 'x', 5.0);
                a.mov('E9', 'y', 0.6);
                a.mov('E9', 'x', 0.2);
                a.rot('E9', 'x', 0.1);
                a.mov('E10', 'y', 0.6);
                a.mov('E10', 'x', 0.2);
                a.rot('E10', 'x', 0.1);
                a.mov('E11', 'y', 0.6);
                a.mov('E11', 'x', 0.3);
                a.mov('E11', 'z', -0.2);
                a.rot('E11', 'x', 0.3);
                a.mov('E12', 'y', 0.6);
                a.rot('E12', 'z', 0.4);
                a.mov('E13', 'y', 0.6);
                a.rot('E13', 'z', 0.4);
                if (PZ < -331.04979000000003) {
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [1.27014, 8.31014, -216.92986000000002], [-0.13, 0, 0], [11.6, 2, 23.34]);
        a.re('E0', [-1.16965, -6.379650000000001, -317.62965], [0, 0, 0], [1, 1, 1]);
        a.re('E1', [-1.16958, -9.039579999999999, -317.62958], [0, 0, 0], [1, 1, 1]);
        a.re('E2', [-1.1695099999999998, -6.37951, -322.55951], [0, 0, 0], [1, 1, 1]);
        a.re('E3', [-1.17, -9.04, -322.56], [0, 0, 0], [1, 1, 1]);
        a.re('E4', [-5.5999300000000005, -6.379930000000001, -320.44993], [0, 0, 0], [1, 1, 1]);
        a.re('E5', [-5.59986, -9.03986, -320.44986], [0, 0, 0], [1, 1, 1]);
        a.re('E6', [-1.1697899999999999, -6.379790000000001, -320.15979], [0, 0, 0], [1, 1, 1]);
        a.re('E7', [-1.1697199999999999, -9.039719999999999, -320.15972], [0, 0, 0], [1, 1, 1]);
        a.re('E8', [1.60035, -6.379650000000001, -322.03965], [0, 0, 0], [1, 1, 1]);
        a.re('E9', [-5.59958, -6.37958, -322.82957999999996], [0, 0, 0], [1, 1, 1]);
        a.re('E10', [-5.59951, -9.03951, -322.82951], [0, 0, 0], [1, 1, 1]);
        a.re('E11', [1.6, -6.38, -320.06], [0, 0, 0], [1, 1, 1]);
        a.re('E12', [-1.16993, -6.379930000000001, -325.56993], [0, 0, 0], [1, 1, 1]);
        a.re('E13', [-1.1698600000000001, -9.03986, -325.56986], [0, 0, 0], [1, 1, 1]);
        a.re('P1', [-5.609719999999999, 3.3802800000000004, -123.63972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P2', [-4.61965, 2.8203500000000004, -116.94965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P3', [-2.24958, 2.82042, -116.94958000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P4', [-2.63951, 3.16049, -121.00950999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P5', [-4.84, 3.85, -129.37], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P6', [-7.289930000000001, 3.85007, -129.36993], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P7', [-4.52986, 0.62014, -114.03986], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P8', [-2.1697900000000003, 0.62021, -114.03979], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P9', [-5.5197199999999995, 1.18028, -120.73971999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P10', [-4.75965, 1.65035, -126.45965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P11', [-7.19958, 3.6004199999999997, -126.29958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P12', [-4.52951, 2.57049, -113.87951], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P13', [-2.17, 2.57, -113.88], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P14', [-2.55993, 2.90007, -117.93993], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P15', [-4.75986, 3.60014, -126.29986000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P16', [-5.51979, 3.12021, -120.56979], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P17', [-5.98972, 2.69028, -115.37971999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P18', [-6.97965, 3.25035, -122.06965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P19', [-3.6195800000000005, 2.6904199999999996, -115.37958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P20', [-4.009510000000001, 3.03049, -119.43950999999998], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P21', [-6.21, 3.72, -127.79], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P22', [-8.659930000000001, 3.72007, -127.78993], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P23', [-5.31986, -0.67986, -117.23986000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P24', [-2.9497899999999997, -0.67979, -117.23979], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P25', [-3.3497199999999996, -0.34972000000000003, -121.29972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P26', [-7.98965, 0.35034999999999994, -129.65965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P27', [-6.3095799999999995, -0.12958, -123.93958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P28', [-3.4795100000000003, 1.0504900000000001, -119.17951], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P29', [-6.08, 2.08, -131.59], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P30', [-6.839930000000001, 1.60007, -125.86993000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P31', [-4.52986, -0.93986, -114.16986000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P32', [-2.1697900000000003, -0.93979, -114.16978999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P33', [-2.55972, -0.59972, -118.22972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P34', [-4.75965, 0.09035, -126.58965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P35', [-7.19958, 0.09042, -126.58958000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P36', [-5.51951, -0.37951, -120.85950999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P37', [-5.85, -0.51, -119.31], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P38', [-3.47993, -0.50993, -119.30993000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P39', [-3.87986, -0.17986000000000002, -123.36986], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P40', [-6.839790000000001, 0.040209999999999996, -125.99978999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P41', [-6.83972, 3.5502800000000003, -125.70972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P42', [-5.8496500000000005, 2.9903500000000003, -119.01965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P43', [-3.4795800000000003, 2.99042, -119.01958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P44', [-3.8795100000000002, 3.3304899999999997, -123.07950999999998], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P45', [-6.08, 4.02, -131.43], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P46', [-8.51993, 4.0200700000000005, -131.42993], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P47', [-4.91986, -0.80986, -115.66986000000001], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P48', [-2.5497900000000002, -0.80979, -115.66978999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P49', [-2.93972, -0.47972000000000004, -119.72972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P50', [-5.1396500000000005, 0.22035, -128.07965000000002], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P51', [-7.58958, 0.22042, -128.07958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P52', [-5.90951, -0.25951, -122.35950999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P53', [-2.55, 0.75, -115.54], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P54', [-2.93993, 1.08007, -119.59993], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P55', [-4.91986, 0.7501399999999999, -115.53986], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P56', [-5.31979, 0.88021, -117.10978999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P57', [-2.9497199999999997, 0.8802800000000001, -117.10972], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P58', [-5.549650000000001, 1.90035, -129.52965], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P59', [-7.98958, 1.90042, -129.52958], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P60', [-6.30951, 1.43049, -123.80950999999999], [0.25, 0.08, 0.02], [2, 2, 2]);
        a.re('P61', [-4.75, -1.52, -144.36], [0, 0, 0], [8.28, 2, 72.86]);
        a.re('P62', [-1.94993, -1.51993, -227.47993], [0, 0, 0], [12.06, 2, 72.86]);
        a.re('P63', [0.00028000000000000003, 0.00028000000000000003, 0.00028000000000000003], [0, 0, 0], [4.42, 2, 57.08]);
        a.re('P64', [0.00035000000000000005, 4.91035, -38.559650000000005], [0, 0.39, 0], [3.88, 1.86, 27.76]);
        a.re('P65', [3.6004199999999997, 4.910419999999999, -38.559580000000004], [-0.24, 0.39, 0], [3.88, 1.86, 27.76]);
        a.re('P66', [-3.40951, 4.910489999999999, -38.55951], [0.23, 0.39, 0], [3.88, 1.86, 27.76]);
        a.re('P67', [-1.26, 4.91, -38.56], [0.16, 0.39, 0], [3.88, 1.86, 27.76]);
        a.re('P68', [1.6200700000000001, 4.91007, -38.55993], [-0.1, 0.39, 0], [3.88, 1.86, 27.76]);
        a.re('P69', [0.00014000000000000001, 9.75014, -79.32986], [0, 0, 0], [4.42, 2, 57.08]);
        a.re('P70', [-3.55979, 9.75021, -78.67979], [-0.1, 0, 0], [4.42, 2, 57.08]);
        a.re('P71', [-1.55972, 9.75028, -79.32972], [-0.03, 0, 0], [4.42, 2, 57.08]);
        a.re('P72', [3.0703500000000004, 9.75035, -79.32965], [0.11, 0, 0], [4.42, 2, 57.08]);
        a.re('P73', [0.9704200000000001, 9.75042, -79.32957999999999], [0.05, 0, 0], [4.42, 2, 57.08]);
        a.re('P74', [-7.95951, 12.60049, -85.18950999999998], [-0.07, 0, 0], [6.06, 8.64, 44.8]);
        a.re('P75', [-6.45, 16.54, -84.41], [0, 0, -0.75], [9.08, 8.64, 43.22]);
        a.re('P76', [-4.19993, 9.75007, -120.66993000000001], [0.27, 0, 0], [4.42, 2, 28.62]);
        a.re('P77', [5.83014, 12.60014, -85.17986], [0.08, 0, 0], [5.54, 8.64, 46.42]);
        a.re('P78', [4.19021, 16.66021, -85.17979], [0, 0, -0.75], [9.08, 8.64, 45.78]);
        a.re('P79', [-1.92972, 20.12028, -85.17972], [0, 0, 0], [11.3, 4.92, 45.1]);
        a.re('P80', [-6.19965, 9.75035, -145.92965], [-0.13, 0, 0], [4.42, 2, 28.62]);
        a.re('P81', [-5.089580000000001, 3.34042, -158.97958], [0, 0.39, 0], [5.2, 1.86, 27.76]);
        a.re('P82', [-3.88951, 8.52049, -185.86951000000002], [-0.09, 0, 0], [4.42, 2, 28.62]);
        a.re('P83', [-4.53, 8.4, -197.91], [0, 0, 0], [3.68, 2, 17.76]);
        a.re('P84', [0.44006999999999996, 8.40007, -197.90992999999997], [-0.41, 0, 0], [3.68, 2, 17.76]);
        a.re('P85', [-3.28986, 9.00014, -279.98986], [0, 0, 0], [10.98, 6.62, 45.1]);
        a.re('P86', [3.15021, 5.84021, -279.98978999999997], [0, 0, -0.75], [9.08, 8.64, 45.78]);
        a.re('P87', [3.44028, 2.03028, -280.56972], [0.08, 0, 0], [7.42, 8.64, 46.46]);
        a.re('P88', [-7.94965, 6.06035, -279.98965], [0, 0, -0.75], [9.08, 8.64, 43.22]);
        a.re('P89', [-9.27958, 2.03042, -280.99958], [-0.07, 0, 0], [6.62, 8.64, 44.82]);
        a.re('P90', [-1.94993, -1.51993, -294.19993], [0, 0, 0], [12.06, 2, 72.86]);
    },
    physics_update: function() {},
    render_update: function() {}
}
