var map = {
    title: "Twisted Road",
    song: "env2",
    maker: "datoneguy246",
    spawn: [0, 0.5, 0],
    init: function() {
        a.c([40.41, 0.81, -103.98]);
        a.c([40.41, 0.81, -104.97]);
        a.c([40.41, 0.81, -106.28]);
        a.c([40.41, 0.81, -107.77]);
        a.c([40.41, 0.81, -108.98]);
        a.c([40.41, 0.81, -110.37]);
        a.c([40.41, 0.81, -111.64]);
        a.c([54.53, 0.81, -116.12]);
        a.c([54.53, 0.81, -114.84]);
        a.c([54.53, 0.81, -113.45]);
        a.c([54.53, 0.81, -112.24]);
        a.c([54.53, 0.81, -110.75]);
        a.c([54.53, 0.81, -109.44]);
        a.c([54.53, 0.81, -108.45]);
        a.p([0, 0, -0.36], [0, 0, 0], [2.82, 0.48, 21.86]);
        a.p([17.5, 0, -57.05], [-0.35, 0, 0], [1.72, 0.48, 100]);
        a.p([-17.5, 0, -56.99], [0.35, 0, 0], [1.72, 0.48, 100]);
        a.p([9, 0, -80], [0.35, 0, 0], [1.72, 0.48, 50]);
        a.p([-9, 0, -80], [-0.35, 0, 0], [1.72, 0.48, 50]);
        a.p([-22, 0, -92], [-0.35, 0, 0], [1.72, 0.48, 25]);
        a.p([-13, 0, -92], [0.35, 0, 0], [1.72, 0.48, 25]);
        a.p([22, 0, -92], [0.35, 0, 0], [1.72, 0.48, 25]);
        a.p([13, 0, -92], [-0.35, 0, 0], [1.72, 0.48, 25]);
        a.p([0, 0, -57], [0.35, 0, 0], [1.72, 0.48, 50]);
        a.p([0, 0, -57], [-0.35, 0, 0], [1.72, 0.48, 50]);
        a.p([22.7, 0, -109.46], [0, 0, 0], [118.24, 0.4, 12.94]);
        a.p([13.77, 0, -46.46], [0, -1.57, 0], [4, 0.48, 4]);
        a.p([-3.81, 0, -46.46], [0, -1.57, 0], [4, 0.48, 4]);
        a.p([-20.78, 0, -64.44], [0, -1.57, 0], [4, 0.48, 4]);
        a.p([23.52, 2.79, -169.88], [-0.99, -0.06, -0.33], [31.5, 0.4, 8.58]);
        a.p([-0.28, 0, -102.71], [0, -1.57, 0], [8, 0.48, 4]);
        a.p([11.63, 0, -71.31], [0, -1.57, 0], [4, 0.48, 4]);
        a.p([97.7, 0, -113.15], [0, 0, 0], [31.5, 0.4, 4]);
        a.p([116.59, 0, -118.14], [0.74, 0, 0], [20, 0.4, 4]);
        a.p([122.47, 0, -136.55], [1.56, 0, 0], [30, 0.4, 4]);
        a.p([115.79, 0, -157.54], [2.38, 0, 0], [20, 0.4, 4]);
        a.p([94.66, 0, -160.23], [0.22, 0, 0], [31.5, 0.4, 4]);
        a.p([73.41, 0, -172.38], [-1.05, 0, 0], [31.5, 0.4, 8.58]);
        a.p([73.41, 0, -148.9], [1.05, 0, 0], [31.5, 0.4, 8.58]);
        a.p([47.04, 0, -172.92], [0.46, 0, 0], [47.94, 0.4, 9.88]);
        a.p([67.62, 0.64, -138.64], [-0.79, -1.57, 0], [10, 0.48, 4]);
        a.p([6.88, 11.3, -189.35], [-0.56, -0.22, -0.45], [31.5, 0.4, 8.58]);
        a.p([-13.65, 21.2, -196.78], [-0.2, -0.22, -0.45], [31.5, 0.4, 8.58]);
        a.p([-38.45, 26.68, -191.85], [0.92, 0.06, 0], [31.5, 0.4, 8.58]);
        a.p([-104.02, 0, -180.03], [0, 0, 0], [31.5, 0.4, 8.58]);
        a.p([-122.23, 0, -180.03], [0.52, 0, 0], [31.5, 0.4, 4]);
        a.p([-137.44, 0, -164.68], [1.15, 0, 0], [20, 0.4, 4]);
        a.p([-142.65, 0, -148.58], [1.57, 0, 0], [20, 0.4, 4]);
        a.p([-112.62, 0, -94.02], [3.14, 0, 0], [31.5, 0.4, 8.58]);
        a.p([-127.58, 0, -99.26], [2.72, 0, 0], [20, 0.4, 4]);
        a.p([-139.81, 0, -111.1], [2.09, 0, 0], [20, 0.4, 4]);
        a.p([-144.02, 0, -132.7], [1.57, 0, 0], [31.5, 0.4, 4]);
        a.p([-91.76, 0, -83.67], [2.22, 0, 0], [31.5, 0.1, 1.5]);
        a.p([-73.84, 0, -63.33], [2.39, 0, 0], [31.5, 0.1, 1.5]);
        a.p([-55.14, 0, -18.57], [1.17, 0, 0], [31.5, 0.4, 4]);
        a.p([-56.51, 0, -42.12], [2.07, 0, 0], [31.5, 0.4, 4]);
        a.p([-52.29, 0, 6.35], [2.27, 0, 0], [31.5, 0.4, 4]);
        a.p([-23.03, 0, 13.67], [3.31, 0, 0], [44.86, 0.4, 4.12]);
        a.p([-6.72, 0, -75.01], [0, -1.57, 0], [4, 0.48, 4]);
        a.p([56.71, 0.64, -111.85], [-1.57, -1.57, 0], [10, 0.48, 4]);
        a.p([42.49, 0.64, -108.09], [-1.57, -1.57, 0], [10, 0.48, 4]);
        a.y([-82.92, 4.21, -180], [0, 0, -1.57], [4, 20, 4]);
        a.y([-56.25, 21.12, -180], [0, 0, -1.57], [4, 20, 4]);
        a.e([-0.38, 0, 9.23]);
    },
    post: function() {},
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < -106.79) {
                    speed = default_speed * 1.25;
                    steer = default_steer * 1.5;
                    this.section_id += 1
                }
                break;
            case 1:
                if (PZ < -385.11) {
                    speed = default_speed;
                    steer = default_steer;
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
    },
    physics_update: function() {},
    render_update: function() {}
}